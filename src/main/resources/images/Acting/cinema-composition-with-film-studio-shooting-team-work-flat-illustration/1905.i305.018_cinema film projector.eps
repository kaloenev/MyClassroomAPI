%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Untitled-18-01.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Анита
%%CreationDate: 18.05.2019
%%BoundingBox: 0 0 658 489
%%HiResBoundingBox: 0 0 658 489
%%CropBox: 0 0 658 489
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 26650 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAE%FFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAE%FFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAEAFA8%FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFAEAFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8%FFAEAFA8FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA8A8%84AF84A88484A8AF84AF84A884AF84A884AF84A884AFA8A87DA8A8A884AF%84A884AF84A884AFA8AE84AFA8AF7DA8A8A884AF84A884AF84A884AF84A8%84AF84A884AFA8A87DAFA8AFA8AF84A884AEA8FFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAEFFAFAFAEFFAFFFAFFFAFFF845959FFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAF84A8FFAFFFAFFFAFFFAFFFAFFFAFFFA8AFA8FFAFA87DFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA884AFAF8484AEFFAFFFAFFFAFAFAE%FFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA82E002752FFAFFFAFFF%AFFFAFFFAFFFAFFFAFFF84A8AFFFAFFFAFFFAFFFAFFFAFFF84847DA87D84%7D8484A884AE84A8AFFFAFFFAFFFAFFFAFFFAEFFAE8B6060353B131335FF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFA8%FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFAEFF2E%050027598AAEAFAFFFA8FFAEAFA8FFAFFFAEAF7DAF84AF848A60AFAEAFA8%FFAFA884AF84A87D8459847D847D8459AFAEAFA8FFAEAFA8FFAF840C1313%131213133B346084FFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8%FFAEAFA8FFAEAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFFFFF282E35605F8A1384AFFFAFFFAFFF8A8A606660603B66%3B603B60AFFFAFFFAFFFA8A8FD06FFA9FFFFFF8484AFFFAFFFAFFFAFFFAF%FF8A5F353C3B8A848B848A3BAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAF8435663B8A843B123584FFAFAFAF8A1360%848A848A84AF843B35FFAFAFAEFFAFAF7DFD0AFFA859AFAFAFAEFFAFAFAE%FFAFAF3B6084AFA8AF84AF606084FFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAEFFAFAFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAF8A5FAFFFFFAF6060AFAFFFAFFFAF3B%35FD07FF5F60AFFFAFFFAFFFA884FD0AFFA884AEFFAFFFAFFFAFFFAFFFAF%665F8A60605F603B35348AAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FF%AEAFA8FFAEAFA8FFAEAFAEAF3560FFFFA8845FFFAFAFA8FFAEFF351384AF%84AF848A843C35FFA8FFAEAFAEAF7DFD0BFF7DAFAEFFAEAFA8FFAEAFA8FF%8435121312131213131335FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFAEFFAEAF%A8FFAEAFA8FFAEAFA8FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAF19138A60603B8AAFFFAFFFAFFFFF8B13603B%666066608A60AFAFFFAFFFAFFFAF8484FD09FFAF84AFFFAFFFAFFFAFFFAF%FFFF84123C3B60608A848B8AAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFF%FFAFFFAFFFAFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFFF%7D7D84FFAEFFAFAFAEFFAFAFAEFF84AF848A84AFAEFFAFAFAEFFAFFFA8AF%84AFA8AFAEAFAEFFAFAFAEFFAFAFAEFFAEFD0BFFAEAFAEFFAFAFAEFFAFAF%AEFFA8AFA8FFAFFFAFFFAFFFAEFFAFAFAEFFAFAFAEFFAFFFAFFF8A84287D%AFFFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA8%764B7DAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAE8A60663B280084FFFFAFFFAFFFAFFFAFFFAFA8FFAEAFA8FFAEAFA8FF%AEAFA8FFAFAFA8CA9A76A8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF%A8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FF%AEAFA8AFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF%A8FFAEFFAEAF84843B603B5F3B60052705A8AFAFA8FFAEAFA8FFAEAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFBCBCBCC3A8FFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFFFFF8A8B60663B663B5F3560602E6F7652FFAFFFAF%FFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFAFAEAF9AB693BCB5C3AFFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFFFAEAF5F603B603535345935603B66%3470B57084FFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA89AB6%BCB6BCBCFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFFD04603559%3B603C6660603B604CBC937DAFFFAFFFAFFFAFFFAFAEAFA8FFAEAFA8FFAE%AFA8FFAFC393BC93BC70BCA8AFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8%FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAE%AFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF7D847D847D%AFAF843B603B603B603B603B603B603B356FBC4BAFAFAFA8FFAEAFA8FFFF%AFFFAFFFAFFFAFFFAFFFAFFFBCBC9494C3AFB5CAAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFAFAEFFAEFFAFFF846660605F662E60606035605F663528944C59FF%AFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAEFFA8BC93BC94AFAFBDBCAFAE%FFAFAFAEFFAFFFAEFFAFFFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAEAFA8AFAEAFA8%AFAEAFA8AFAEAFAEFFAFAFAEFFAFFFAEFFAFAF3B603B603B353535345F3B%603B662E050059AFFFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFFAFA82E76%4B9AA1AFA8C3AEFFAFFFAFFFAFFFAFAF848B84AFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAF%AEFFAFAFAEAFAEAFA8AFAEAFAEFFAFAFAEFFAFFFAFFFAFFFAFFFAF8A3B66%6066355F5F6660663B5F355F05272EFFAFFFAFFFAFFFAFA8FFAEAFA8FFAE%AFA8FFAEFF842E0505279A275376CAAFAFA8FFA83C133B13131260AFAFA8%FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAE%AFA8FFAEAFA8AFAEAF84AF84A884AE84AE84AE84A884AFA8AFA8AF84847D%84A8AFA8FF84603B603B35356035353435355F3B350059AFFFAEAFA8FFAE%AFFFAFFFAFFFAFFFAFFFAFFF848A352E052E2828052828AFAFFFFF601319%1319133CAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFAFAFFFAEAFA8AFAEAFAEFFAFFFAFFFAFAFAEAF%AEAFA8AFAEAE84AFAFFFAFFFAFFF606660663560355F35603C66606660AE%AFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFF606060665F350C0C05522E%057EFFAEAF13131319131384FFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFA8AFAEAE84AFA8AFAEAFAEAFA8%AFAEAFA8AFAEAFA8AFAEAF84AEA8AFAEAFAEAFAEFFAFAF5F603B3535603B%603B8A84AFA8A8FFFFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFF84608460%60666066592E285928A8FFFF6019FD041360FFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA8AFA8AFAF%FFAFAFAEAFAFAFAEAFAFAFAEAFAFAFAEAFAFAFAEAFA8AFAEFFAFFFAFFFAF%AF5F663560608B8AAFAFFFAFFF84FFAFFFAFFFAFFFAFFFAFAEAFA8FFAEAF%A8FF84605F605F603B8A3B350527343C3B8A841313130C1335AFAFAFA8FF%AEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF%A8AF84A8A8AFAEAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFAEAFA8AFAEAFA8AF%A8A884AFAEAF59AFAE8A605F84FFAFFFAFFFAEFFAF84A8FFAEAFA8FFAEAF%A8FFFFAFFFAFFFAFFFFF8A3B8A60665F8B5F2E052E598A1360603C125F59%84AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFFD04AFA8AFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFFF%AFFFAFFFAFFFFD04AFA8AF59AFAFFFAFFFAE8484AFA8AFA8AE84847DFFAF%FFAFFFAFFFAFFFAFAFAFAEFFAFAFAEAF3B605F605F603B35052E5F8A3513%1360595F3459AFFFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEAFAEAF84AFAEAFA8AFAEAFA8AFAEAFA8AFAEAF%A8AFAEFFAEFFAFAFAEFFAFFFAEAFAEAFAEA859AEAEAFAFFFAEFFA8A884AF%847D84AFA8AFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFF84FD05605F5F05%596066603B13132EAF8A6634AFFFFFAFFFAFFFAEFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAEAFA8AFAEAFAFAFAEAFAFAFAE%AFAFAFAEAFAFAFAEFFAFFFAFFFAFFFAFFFAFFFAEAFAFAFA8AFA8AFAEFFAF%FFAFFFAFFFAFFF84FFAFFFAFFFAFFFAFFFAFFFAFFFAFA8FFAEAFA8FFAF60%3B8A3B3B3560522E3B603B3B12190C272EAF603584AF84A884A884AFAEFF%AEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAFFFAFFFAEAFA8AFAEAE84AFAEAF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFAEAFAEFFAEAFA8FFAEAFA8AF%A8AFA8AF84AFA8AFAEAFA8FFAEAFA884AEAFA8FFAEAFA8FFAEAFA8FFAEAF%FFAFFFAFFFAFFF6066606013603C5F358A608A133B132E0553AE8A35AF84%AFA8FD05FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFA8A8AFFFAEFFAF%AFA8FFAFAFAFFFAFAFAFFFAFAFAFFFAFAFAFFFAFAFA8AFA8AFA8AFAFFFAF%FFAFFFAFFFAFAFAFFFAFAF84FFAFFFAFFFAFFFAFFF84FFAFFFAFFFAFFFAF%FFAFFFAFFFAFAEFFAFAFAEFFAE605F605F3B353C606060665F1313350505%2EAF5F351319133B35606084A8FFAFAFAEFFAFAFAEFFAFFFAEAFAEA87D59%2E280084AE847DFFA8AF84AFA8AFAEAFAEAFA8AFAEAFA8AFAEAFA8AFA8A8%84AF84A884A884AFA8FFAFAFA8AFAEAFA8AFAEAE84AFAEAFAEFFAFFFA884%AFAFAEFFAFAFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFF608A5F8A60663B66FD%0460133B2E2805848A603519133BFD05138AFFFFAFFFAFFFFFFFAFFFA8FF%A8FF59050528052883AFAEAE848484A884A884AFAFFFAFAFAEAFAFAFAEAF%AFAFAEAFA8AFA8AFA8AFA8AFA8AFA8FFAFAFAEAFAFAFAEAFAFAFA8FFAFFF%AFFFAFAF7DFFAFFFAFFFAFFFAFFFAFFFAFFFAFAEAFA8FFAEAFA8843B605F%605F605F603B60131312270028848A3535FD0613121384FFA8FFAFFFA8A8%5959A8FD05FF270505270C608484527D84AFAFFFAEAF8484AEFFA8AFA8AF%A8AFA8AFA8AFA8AFA8A8A8AF84A884AE84A884AFAEAFA8AFAEAFA8FFAEA8%A8AFAEAFA8FFA884A8FFAEAFA8FFAEAFA8FFAEAFA8FFFFAFFFAFFFAFFFAF%5F356660666066608A603B1335272853AF605F133B133B133B13193BFFAF%FFA87D2E2E052705A8FD05FFA905280C190CAFAE847D84A8FFAFFFAFFF84%AEAFAFA8FFAFAFAFFFAFAFAFFFA884608484AFA8A884AF84AFA8AFAEAFAE%AFAEAF848A84AFAFFFAFFFAFFF7DFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAF%AEFFAFAFAEFF5F342E5F5F665F8A606013190627058484600C19FD04130C%13128AFD04FF52050528052705FD06FF7D05131253A8AFA8AF84A87D8484%FFAFFF7DA884A884AFAEAFA8AFAFAF353B1313121313597D8484847DAE84%A884A8353513131213133C84FFAEFFA884AEFFAFAFAEFFAFAFAEFFAFAFAE%FFFFAFFFAFFFAFFFAF84356034593560608A3513132E0559AE8A3535133B%131913351235A8FD05FF2E27052827272EFD05FFA83535AFAFAF84AFAFFF%AFFFA8847DA8A8A884AFA8AFAEFFAFAFAF8B1313133C846035191360A8AF%A8AFAFFFAFAF3B19131335603B3B131960FFAFFF84FFAFFFAFFFAFFFAFFF%AFFFAFFFAFA8FFAEAFA8FFAEFF845935352E352E35353C3B602E59848A35%35FD0713190C7DFD06FF2705000505057DFFA8AFA8FF84A8AEAF84AEA8AF%AEAFA8FFAFAF847D597D84AFA8AF84AEA88A1213603C137E7D8413131260%A8AFAEAFA8AF351313601360A8AFA835121335FFA884AEAFA8FFAEAFA8FF%AEAFA8FFAEAFFFAFFFAFFFAFFFAFFFAFAF59593B603459595F3B84AFAF5F%5F843B133B133B133B132E05A8FD05FFA827535984A8FFAFFFAFFFAFFFAF%FFAFAFAEFFAFFFAFFFAFFFAFFFA8A859847DA87DAE84A8351960A82E3B05%270C3C843B13FD04AFFF601313AF8435122E2E591360351360FF84FFAFFF%AFFFAFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFFF84603534356035%5F35845F352EFFAF60FD051335050500A8FFFFA8FFA8AFAEFFAFFFAEFFAF%AFAEFFAFAFA8AF84AFA8AFAFAFAEFFAFAF84AFA8847DA852597DAF841313%5927270C2E051305AF84133BFFAEAF8413138B7D270C1305270C35A8AF13%138484AFAFAEFFAFAFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFFFFFF%AEAF84846066603B1235131335FFCAFF843C131906282E597DFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFAFA8AFAFAFAEFFAFFFAFFFA8AFA8AFA884%7DA8AFAE7D6013131335282E0C35062753AF133CAEFFAF60133C602E0028%132E0C350559AF60138484FFAFFFAFFFAFFFAFFFAFFFAFFFAFAEAFA8FFAE%AFA8FFAEAFAE7D0552A8FD04FFAFFD041312131384A8CAA884358484AFAF%FFAEFFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8AFAEA8A8AFA8AFA8FFAEAFA8%A884A884A8A8A884AFAEAF3513352E0C350C130C2E0CFD0413AFA8AF35FD%04130C052E0C0C052705845F133584A8FFAEAFA8FFAEAFA8FFAEAFA8FFFF%AFFFAFFFAFFFAFFFAFFF282728AFFD05FF60133B13351319138484A8A8FF%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA8FFAFAFAFFF%AFFFAFAFA8AFA8AFA8AFA8FFAFAFAF6013AF2728273513350C2E2E8A353B%AEFFAF3C138A2E2E0C35123C0C2E12351319133C84FFAFFFAFFFAFFFAFFF%AFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAF59052E84AFFD04FFA813131912FD%04133CA8A8AEFFAEFFAFFFAEFFAFFFAEFFAFAFAEFFAFFFAFFFAFFFAEAFA8%AEAEAFAEAFA8AFAFAF84AF84A884A884AFA8AFAEAF3B1384530C35062E0C%340053AF3B35AFAEAF13138452002705131313052E065F60133584AEFFAF%AFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFF7D282EAE2EFFFFFF%A8FF3B13133B1213133C3CAFAFFFAFAFAFFFAFFFAFFFAFFFAFFFAFFFA8AF%A8A884A884AFA8AFA8AFAEAFAFAFAEAFAFAFA8AFA8AFA8AFAFAFAEAFAF8A%133C3B13052E0C280C35A88A1260AFAFAE3C138453280C3506350C2E0028%A88B136084FFAFFFAFFFAFFFAFFFAFFFAFFFAFA8FFAEAFA8FFAEAFA8FFAF%A8052E845959A8A8AEA8A8FD04130C352E7DA8FFA8FFAF8428532E2E2752%A8FD04FF7D00280527002EA8FFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AF843B123C59270513052E133C131984AFAFAF35133559121305%2E0C27120C52FF35132E2859FFA8FFAEAFA8FFAEAFA8FFAEAFFFAFFFAFFF%AFFFAFFFAFFFAE522EAF522E2EFD04FF6013350C28272728FD05FF522705%28052753FD05FF2828272805287DFD05FFAEFFAFAFAFFFAFAFAFFFAFAFAF%FFAFAFAFFFBCBC761913839A7D2E9ABD8413197DCACACAC4A81319135927%280C35272E13608419137D5128A8FFAFFFAFFFAFFFAFFFAFFFAFAEFFAFAF%AEFFAFAFAEFFAFA80553842E007DFD04FFA828052805270084FD04FFA827%0528052705A9FD04FF7D050528052705FD05FF7DAEAEAFAEAFA8AFAEAFA8%AFAEAFA8AFAEAFAEC3B5B6761313352E35523513192EB693949393935913%139A94272E0C2752A113191360A0A10552A8FFAFAFAEFFAFAFAEFFAFAFFF%AFFFAFFFAFFFAFFFAFFFA8282EAF2E287DFD04FF8405280528052EA9FD04%FF7D052805280559FD05FF5305280528057DFD04FFA859AEAFAEAFAFAFAE%AFAF8459FFAFAFAEAFAFAFA1BCBCBC9A591319131A133576BCB6BC93BCB6%BC9335133552BC355927537D351359A8FF7628007DFFFFAFFFAFFFAFFFAF%FFAFAEAFA8FFAEAFA8FFAEAFAEA8052E845205287DFFFFFF272705270505%59FD05FF27270527052784FD04FFA8002805270528A8FD04FF7E05AFAEAF%A8AFA8AFA8FF592E60AFAEAFA8AFAFC3B5BC93B6B5BC7676769AB5B6B5BC%B5BCB5BCB5BC935913191235343512131359B5BC6FBC4B4B7DFFA8FFAEAF%A8FFAEAFA8FFFFAFFFAFFFAFFFAFFFAFFFA82E2EAF2E28282EA8FF842827%28052827FD05FF7D28272805282EFD05FF5228272805282EA87DA87EA828%2EAFFFAFFFAFAFAFFFAF84276660AFAFFFAFAFA1BCBCBC93BCB6BCB6BCB6%BCB6BCBCBCB6BCBCBCB6BCBC7D351A1319133B3B847DCA93BCB6BCB6CAAF%FFAFFFAFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAFAE052E842E282E2753%7D2E05280527052E52532E53522E0528052705282728052E2705F8270527%052E28050027050528AFAEAFA8AFAEAFA8FF7D2E3B605FAFAEFFAFA193BC%9394B5BCB6BCB5BCB6BCB5BCB6BCB5BCB6BCB5BCB5BC9A762E0C59FF7DA8%A1BC93BCB5BCBCAFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFFA8%282EAF522828280505052805280528052805270528052805282728052805%28052805762728289A763C2E280528052EAEFFAFAFAEFD04AFA828603B60%608A84AF7DBCB6BC93BCB6BCBCBCB6BCBCBCB6BCBCBCB6BCBCBCB6BCB6BC%B576057D7DCABCB693A1BCBCB5C3AFFFAFFFAFFFAFFFAFFFAFA8FFAEAFA8%FFAEAFA8FFAFA80059A87D27595359272E2E522E2E272E272E2E28052805%2705280527052805270076A05205BCB67013592727052728AFA8AFA8AFA8%AFA8AE7D2835603B602E13131393BC939AB6BCB5BCB5BCB5BCB5BCB5BCB5%BCB5BCB5BCB5BCB59A4B289ABC939A76A8AFBCB5BCB5FFAFAFA8FFAEAFA8%FFAEAFFFAFFFAFFFAFFFAFFFAFFFA82853AF7D52527D287D7D7D05592852%532E53A8272E2728052E2728052E2728052852C9522E4B7652352728052E%0552AEFFAFAFAFFFAFAFA8AF285F606660350C3C139AB6BC94BCB6BCBCBC%B6BCBCBCB6BCBCBCB6BCBCBCB6BCBCBC947605A8A8AEA8AFAFFF9BBCB6BC%A8FFAFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFA80053AE592E7D59%522E7D532E27272853272E53280027052705280527052805052E8483845F%592E8405270527052728AFAEAFAEAFAEFFA8A8842E34603B662E2E131376%BCB59A93BCB5BCB6BCB5BCB6BCB5BCB6BCB5BCB6BCB5BC9394272884AF84%AFAEFFAE7D5259123CAFFFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFF%A82E52AF5353525952532E272752525952532E595253525352532E535253%2E5253AF8AAF8AAF8A7D84842E535253272EAFAFAEAFAFFFAFFFA8AF2E35%60603C5F0C191376B6BC93BCB6BCB6BCBCBCB6BCBCBCB6BCBCBCB6BCBCBC%B6BC932805AFAEAFAEFFAFFF34FD0413AFFFFFAFFFAFFFAFFFAFAEAFA8FF%AEAFA8FFAEAFAEA8052E84520528052EFD04270553272827525253595205%2E2728272E27280584848A84AE848484AF8428052E272727AFAEAFA8AFAE%AFAEAFA85305603B60352E121327BCB694939A9394939A9394939A939493%9A93BCB5BCB5BC93942859A8AEA8AFA8FFAE3512130C1384FFAEAFA8FFAE%AFA8FFFFAFFFAFFFAFFFAFFFAFFFA82828AF2E28052E2728057CC3762E2E%052E5252595927282728052E272805538AAF84AF8AAF5959845905282728%0552A8FFAFFFAFFFAFFFAFAF592E6066606059845F7DB6BCB6BC94BC94BC%94BC93BC94BC93BC94BCB6BCBCBCB6BC9AFFAFAFA8AFAFFFFFAF1219353B%13AFFFFFAFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAFAE052E842E052705%28052727A076522728055228532828052805270528050559AF598484AF8A%59002805270528052728AEA8AFA8FFAFAFAEFFAE7E055F3C3B59AFAEFF7D%B6B6BCB5BC93BC939A939493BC939493BC93BCB5BCB6BC939AAEAF84AFAE%AFAEFF84131384131384FFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFF%A8282EAF28282728052805066FBCBC9A4B28052805280528052805280528%0584842E84AF84AF5927052805280528052EAEFD04AFFFAFFFAFFFA82835%6659A9A8AFAFA8B5BCB6BC93BCB6BCB6BCB6BCB6BCB6BC939ABCBCB6BCBC%B69AFFAEAFAEFFAFFFAF84123CAE3B13AFAFFFAFFFAFFFAFFFAFA8FFAEAF%A8FFAEAFA8FFAFA80552842E4B9A272805284BBC93BC93946F28052E272E%282E272E282E285384592E8B8A8B8A84285228522E522E2E27AF84AEAEAF%A8FFAEAFAEAF273435FD04A8AF7DB6B5BC9394939A9394939A9394939493%BC93BCB5BCB5BC93A1AEA8A8AFA8FFAEFF59135FFF131384FFA8FFAEAFA8%FFAEAFFFAFFFAFFFAFFFAFFFAFFFA82E53AF59599ABC9AA19ABCB69ABCBC%93BC9A532E522E522E522E522E2E2EAF2E527DA883A87D2E282E282E282E%2752AEFFA8AFAFFFAFFFAFFFFF522EAFA8AFA8FFAFAF94BCBCBCB6BCBCBC%B6BCBCBCB6BCBCBCB6BCBCBCB6AEA1B6A1AFA8AFAFFFAFFFFF84138AFF60%138BFFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFA8052E84592E7D94%BCB5BC93276FBCB6BC93BC0505052805270528052700538428279AB57693%76052705280527052728AFAEAF84AFAEFFAFAFAEFF7DA8A8A884AFAEAFA8%9AB5BC93BC93BC93BC93BC93BC93BC93BC93BCB6BC7D7D93A184AFAEAFAE%FFAFFF591384FF841335FFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFF%A82828AE597D7D5352764B28054CB6BCBCBC6F2805280528052805280527%2E830528B6BCBCBCB6520528052827280552AFFFAEAFA8AFA8AFFFFFAFFF%FFFFAEFFFD04AF9ABCB6BCBCBCB6BCBCBCB6BCBCBCB6BCB69AB6BCBC704B%BCA1AFAEFFAFFFAFFFFF8412AFFFFF5F138AFFAFFFAFFFAFFFAFAEAFA8FF%AEAFA8FFAEAFAEA8052E847D5252282E2E2E052E059AB5BC762E052E272E%272E282E27522E76A05252BCB5BCB5BC4B0605270528052727FFAFAFA8AE%A884358A84AF84AF848A60607DAFAEC3B5BC93949394939A939493BC9394%93BC93BC93BC6F4C93A8AFAFA8FFAEAFA8FF5913A8FFAFAF133CAFAFA8FF%AEAFA8FFFFAFFFAFFFAFFFAFFFAFFFA82828AF52522E5352522E59525352%9B5919135352532E522E522E52282E272E2852B6BC4CBCB69A0528052E27%280552AFFFAFFFAFAF59603B603B6660603B6635AFAFFFA1BCBCBDBCBCB6%BCB6BC94BCBCBCB6BCB5B693BC939427BCCAFFAFFFAFFFAFFFFFAF13FD05%FF35A8AFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAFAE052E847D52525353%28052859520C1319130C002805270528052705280527052827BCB5286FBC%932805270528052728FFAFAFAEAFA8593B603B603B603B603584AFAFA8AF%A8AF7D7DA8A8A8CA7D2827522776A1CAA1C3A1C39A276FA884AFA8FFAFAF%AEAF592E84AFA8A8847DA8FFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFFA8%282EA87DA87D595259275227591319133405280528272805282728052805%28054CBCBC054CBCBC2728052805280552AFFFAFFFAFAE59663B603B603B%60605F84FFAFAFAEAFAF8452FFAFFFAF590528052805FD05AF84AF7D7D7D%8484A8AEFFAFFF595359597DA884847DFFAFFFAFFFAFFFAFA8FFAEAFA8FF%AEAFA8FFAFA8052E84532E7D597D2E282E351219130C05282728272E2728%272E2728272E282E27BCB5522EBCB5762E522E52282828AFAEFFAFFF7DAF%848A8484848A84AF7DAEA8AFA8AFA8AF595984FFAFAF0527052705277DFF%84AE84AFA8FFAFFFAFFFAFAFA8FF84597D84837DA8A88484A8FFAEAFA8FF%AEAFFFAFFFAFFFAFFFAFFFAFFFA8282EAF5353525952595253353C133512%3552532E535253525352532E532E522E52BCBC282E70BC702E282E282E05%52AFFFAEFFA884AFAFA8AFA8A8A8FFA884AFFFAFAFAFFFFD0484AFFF8428%2E2E277D0559AEAFAEAFAFFFAFFFAFFFAFFFAFFFAF7D84847DAF7DA884AE%84AEFFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFA8052E84520528052705%280C13132E0C13120C052705280527052805270528050505BC9327054CB6%9A05280527052728AFA8A859A8847E7DA87D7D8484528484AFAEAFAEAFA8%FD0484A8AF5900842E27842E27AEAEAFAEAFAEFFAFAFAEFFAFFFAE847DAF%7DAFFFFF7DA8AFFF84FFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFFA82828%AF2E2805282728052E13190C280C13133427280528272805282728052805%28B6BC272805BCB628052827280552AFFFAFA8A8AF7DFFFFFF7DAF8484AE%AFA8AFA8AFAFA884AF84FF59AF272EA85227AF592884FFAEFFAFFFAFFFAF%FFAFFFAF8484A87D7D7DA8848452A88484AEFFAFFFAFFFAFAEAFA8FFAEAF%A8FFAEAFAEA80528592E052705280527002E13190C270513122E05270528%0527052805270528059A932805054BBC27050528052727AFAFAFAE8459AF%AEFFAFAF5984AEAFA8AFA8A884AF53A87D848459522759AF272EAFA8007D%AFAFA8FFAEAFA8FFAEAFAF847DAF84847DAEA8AF848459FF84AFAEFFAEAF%A8FFFFAFFFAFFFAFFFAFFFAFFFA82E0C190C2E052E2728052E272E133C0C%28063B0C28052E2728052E2728052E272894BC05280552BC76052E272805%52AFFFAFFF7D7DAFFFAFFFAF7E7DFFAFFFAFAFAFFF847D7DAE7D84AE5328%AFAF5252FFAF5352FFAFFFAFFFAFFFAFFFFFAF7DFF84A87DA8A8AFAE84A8%8484AF84FFAFFFAFFFAFAFAFAEFFAFFFAEFFAEAFA8AF5913131959847D7D%052705280528121905270C13052705280527052805270528059493280527%059A6F050528050527FFAFFF84A88484AFFFAF8484A884FFAEFFAFAFAE84%A8AE5359AEAF057DAFAF2E7DFFFF7D2EAFFFAEFFAFFFAEFFAF7D59FFAFA8%5959A8AFA8AF83FFAE7D59A8AFFFAFAFAEFFFFAFFFAFFFAEAFA88460AFA8%592E602E532E5235350528052805280C2E05270528052805280528052805%2805284C76052805282777282805280559AEFFA87DA8FF7DA8AEAE7DFFA8%84A8AFA8FFAFAE7DFFAFA884FF84527DAFAF597DFFAFAF52AFAFAFA8AFAE%AFAEAF2784AFAF84522EAFAFAF84A8AFFF592E84AFAEFFAFFFAFA8FFAEAF%84A884A87D8484A87D8483847D847D847D847D847D847D7D59847D847D84%7D847D847D847D847D847D847D847D84838484A87D847D8484A884A884A8%84A884A87DA884A87DA884A884A8848484A884A884A884A883A884A884A8%848484A884A884A884A884A884A87DA8848484A8848483A884A883A884A8%A8FFAEAFFFAFFFAFFFFFFFAFFFFFFFAFFD27FFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFFF%FFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAEAFA8FFAEAFA8FF%AEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF%A8FFAFAFAEFFAFFFAFFFAFFFAFFFAFAFA8FFAEFFAEFFAFFFAFFFAFAFAFFF%AFAFAEFFAFAFAFFFAFAFA8FFAEAFAFFFAFAFAFFFAFFFA8FFAEAFA8FFAEAF%A8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFF8484AEAF847E7E59A8847D8484A8AFFFA8AFAEAFFF%A8597E59AFAF8459FFFFAF59A8AFA87DAFAFFF84FFAFA85984AF84A8AF59%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFFF5906058459530006058459848484%06FFAF59A8842EFFA82EF859AF597D5959AF06000584537D2EFFAE5384FF%06592E5900845906A8FFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF2E59AFA87E53%06052E7D8484AF7E0684AF2EFF845984FF2E0559AF59FFAF5959062E84AE%2F2EAFFFAF5984AF2E847E532E2E5928FFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFA8FFAEAFA8FF%AEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF%AEAF0684FFAF59590506067D5984847D2859597D84592E7DAF2E007D847E%FFFF53530559287E595384FF59532EAF282E53A80606002FAFAFA8FFAEAF%A8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FF%AEAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFFF532E848484537D282E59A8FFFF597E537E7E847D%A853FF2E0553FF53FFAE59840628065984A859AF84847D842F7EFFAF0659%5928FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFA82E05847D59598406842E7E%595959AFAE8459AFFF5984590659AF8453537DFF59062EAF59FF7D597DFF%84592E84AFAF057E592EAFFFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFAFA8AFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA8FFAFFFAF%FFAFFFAFFFA8FFAFFFAEFFAFFFAFFFAFFFAEFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAEAFA8FF%AEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAF%A8FFAEAFA8FFAFAFAEFFAEAFAEFFAFFFAEFFAEAFA8FFAEAFA8FFAEAFAEFF%AEAFAEFFAEAFA8FFAEAFAEFFAEFFAEFFAEAFAEFFAEAFAEFFAEFFA8FFAEAF%A8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FFAEAFA8FF%AEAFA8FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAF%AEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFF%AFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFAFAFAEFFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAEFF%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF%FFFFAEFFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2019-05-18T19:21:21+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-05-18T19:21:21+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T19:21:21+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9M4XAdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVWyRxyxtHIoeNwVdGAKspFCCD1BxVA/wCHtA/6tlp/&#xA;yIj/AOacNlXmn51a9a+TbPTbzTvL0E00krql28Uf1RSUIMUyLRnJHxKNt1qDsRlkBaqP5SfmJ5V8&#xA;16fJaazplla63ZhTKy28YinRm4h0op4tU/Ev0jatGcSOTXkyxgLkaeo/4e8v/wDVttNuv7iP/mnK&#xA;7LY7/D2gf9Wy0/5ER/8ANONlXf4e0D/q2Wn/ACIj/wCacbKpSmiaJB5nlgksLb0LyzWaBDDHxV7a&#xA;QpOdxtVZ4vuw2aQj5NM8pR/3lrYJTryjhH6xjuwOWA5kfNfBovli4iEsFjZTRNXjJHFEymhoaECn&#xA;UYkllGYkLBsLbzRdBtrOe4XSbWQwxvIIxDECxVSeIPHvTBZZMf8AXt44VluPLWnqHVHiMSzyowkX&#xA;koEosRHWn+VkvikRKWSaroMWtwyz6Vp0MTQTQyQmW3VTKjxtGKypEqtQydeuGkUUzh1nylIrgaNZ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:784FD19858226811822AEF13FBEE0315</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:784FD19858226811822AEF13FBEE0315</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:84351401FE216811822AEF13FBEE0315</stRef:instanceID>
            <stRef:documentID>xmp.did:84351401FE216811822AEF13FBEE0315</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:84351401FE216811822AEF13FBEE0315</stEvt:instanceID>
                  <stEvt:when>2019-05-17T13:17:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:784FD19858226811822AEF13FBEE0315</stEvt:instanceID>
                  <stEvt:when>2019-05-18T19:21:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>658.000000</stDim:w>
            <stDim:h>489.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -489 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 489 li
658 489 li
658 0 li
cp
clp
658 489 mo
0 489 li
0 0 li
658 0 li
658 489 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.878431 .988235 .960784 rgb
f
432.218 357.215 mo
431.912 357.215 431.602 357.213 431.296 357.21 cv
429.404 352.931 428.353 348.196 428.353 343.217 cv
428.353 324.08 443.863 308.564 462.993 308.564 cv
478.597 308.564 491.789 318.877 496.13 333.056 cv
479.098 348.093 456.725 357.215 432.218 357.215 cv
380.643 342.31 mo
360.726 329.712 345.735 310.032 339.205 286.809 cv
344.827 282.87 351.672 280.559 359.056 280.559 cv
378.196 280.559 393.707 296.07 393.707 315.197 cv
393.707 326.174 388.605 335.96 380.643 342.31 cv
523.969 290.95 mo
505.275 290.451 490.268 275.144 490.268 256.322 cv
490.268 238.593 503.594 223.968 520.776 221.924 cv
525.958 233.769 528.831 246.85 528.831 260.605 cv
528.831 271.205 527.123 281.408 523.969 290.95 cv
353.163 243.106 mo
347.687 243.106 342.507 241.836 337.904 239.576 cv
343.118 216.093 356.877 195.824 375.752 182.206 cv
383.131 188.56 387.803 197.968 387.803 208.466 cv
387.803 227.606 372.288 243.106 353.163 243.106 cv
460.414 208.466 mo
459.353 208.466 458.305 208.422 457.266 208.322 cv
439.607 206.732 425.774 191.894 425.774 173.823 cv
425.774 170.456 426.254 167.202 427.149 164.124 cv
428.828 164.037 430.518 163.993 432.218 163.993 cv
455.263 163.993 476.424 172.063 493.029 185.528 cv
488.229 198.901 475.438 208.466 460.414 208.466 cv
.752941 .862745 .858823 rgb
f
428.353 401.621 mo
400.211 401.621 373.925 393.693 351.58 379.961 cv
321.287 361.338 298.261 332.027 287.783 297.266 cv
283.727 283.82 281.535 269.568 281.535 254.795 cv
281.535 173.713 347.27 107.98 428.353 107.98 cv
445.866 107.98 462.658 111.054 478.227 116.682 cv
506.733 126.975 531.125 145.84 548.321 170.153 cv
548.441 170.33 li
565.268 194.226 575.164 223.359 575.164 254.795 cv
575.164 335.887 509.43 401.621 428.353 401.621 cv
428.353 119.042 mo
353.491 119.042 292.592 179.942 292.592 254.801 cv
292.592 329.658 353.491 390.557 428.353 390.557 cv
503.207 390.557 564.107 329.658 564.107 254.801 cv
564.107 179.942 503.207 119.042 428.353 119.042 cv
428.353 389.453 mo
354.102 389.453 293.698 329.047 293.698 254.801 cv
293.698 180.552 354.102 120.147 428.353 120.147 cv
502.596 120.147 563.001 180.552 563.001 254.801 cv
563.001 329.047 502.596 389.453 428.353 389.453 cv
431.296 357.21 mo
436.673 369.371 448.843 377.857 462.993 377.857 cv
482.134 377.857 497.643 362.346 497.643 343.217 cv
497.643 339.681 497.114 336.269 496.13 333.056 cv
491.789 318.877 478.597 308.564 462.993 308.564 cv
443.863 308.564 428.353 324.08 428.353 343.217 cv
428.353 348.196 429.404 352.931 431.296 357.21 cv
339.205 286.809 mo
330.264 293.074 324.416 303.454 324.416 315.197 cv
324.416 334.338 339.93 349.855 359.056 349.855 cv
367.219 349.855 374.722 347.033 380.643 342.31 cv
388.605 335.96 393.707 326.174 393.707 315.197 cv
393.707 296.07 378.196 280.559 359.056 280.559 cv
351.672 280.559 344.827 282.87 339.205 286.809 cv
444.196 287.469 mo
440.988 287.469 438.391 290.066 438.391 293.273 cv
438.391 296.48 440.988 299.078 444.196 299.078 cv
447.401 299.078 450.001 296.48 450.001 293.273 cv
450.001 290.066 447.401 287.469 444.196 287.469 cv
523.969 290.95 mo
524.282 290.959 524.595 290.963 524.91 290.963 cv
531.829 290.963 538.292 288.93 543.694 285.434 cv
553.248 279.264 559.563 268.541 559.563 256.322 cv
559.563 242.268 551.191 230.169 539.166 224.744 cv
534.808 222.774 529.983 221.68 524.91 221.68 cv
523.511 221.68 522.131 221.763 520.776 221.924 cv
503.594 223.968 490.268 238.593 490.268 256.322 cv
490.268 275.144 505.275 290.451 523.969 290.95 cv
407.895 275.859 mo
404.69 275.859 402.09 278.457 402.09 281.666 cv
402.09 284.871 404.69 287.469 407.895 287.469 cv
411.101 287.469 413.697 284.871 413.697 281.666 cv
413.697 278.457 411.101 275.859 407.895 275.859 cv
470.368 258.115 mo
467.159 258.115 464.563 260.719 464.563 263.92 cv
464.563 267.133 467.159 269.729 470.368 269.729 cv
473.569 269.729 476.173 267.133 476.173 263.92 cv
476.173 260.719 473.569 258.115 470.368 258.115 cv
430.562 254.374 mo
430.42 254.374 430.28 254.448 430.203 254.582 cv
430.089 254.779 430.153 255.027 430.352 255.147 cv
430.735 255.398 433.25 258.182 435.86 261.131 cv
430.279 266.342 li
430.11 266.496 430.103 266.756 430.257 266.926 cv
430.339 267.014 430.449 267.059 430.561 267.059 cv
430.662 267.059 430.765 267.019 430.846 266.947 cv
436.41 261.752 li
437.558 263.045 438.692 264.344 439.649 265.439 cv
439.727 265.531 439.842 265.58 439.962 265.58 cv
440.056 265.58 440.155 265.549 440.233 265.48 cv
440.404 265.328 440.42 265.068 440.274 264.893 cv
439.749 264.297 438.473 262.828 437.019 261.184 cv
441.902 256.625 li
442.068 256.471 442.077 256.207 441.923 256.041 cv
441.841 255.953 441.73 255.908 441.619 255.908 cv
441.516 255.908 441.413 255.946 441.334 256.022 cv
436.467 260.56 li
433.995 257.766 431.22 254.689 430.767 254.43 cv
430.702 254.392 430.632 254.374 430.562 254.374 cv
407.895 238.472 mo
404.69 238.472 402.09 241.072 402.09 244.281 cv
402.09 247.484 404.69 250.086 407.895 250.086 cv
411.101 250.086 413.697 247.484 413.697 244.281 cv
413.697 241.072 411.101 238.472 407.895 238.472 cv
337.904 239.576 mo
342.507 241.836 347.687 243.106 353.163 243.106 cv
372.288 243.106 387.803 227.606 387.803 208.466 cv
387.803 197.968 383.131 188.56 375.752 182.206 cv
369.687 176.982 361.792 173.823 353.163 173.823 cv
334.023 173.823 318.522 189.338 318.522 208.466 cv
318.522 222.13 326.42 233.937 337.904 239.576 cv
445.767 226.863 mo
442.56 226.863 439.962 229.465 439.962 232.671 cv
439.962 235.876 442.56 238.472 445.767 238.472 cv
448.97 238.472 451.565 235.876 451.565 232.671 cv
451.565 229.465 448.97 226.863 445.767 226.863 cv
427.149 164.124 mo
426.254 167.202 425.774 170.456 425.774 173.823 cv
425.774 191.894 439.607 206.732 457.266 208.322 cv
458.305 208.422 459.353 208.466 460.414 208.466 cv
475.438 208.466 488.229 198.901 493.029 185.528 cv
494.342 181.872 495.057 177.931 495.057 173.823 cv
495.057 157.628 483.942 144.039 468.938 140.235 cv
466.21 139.55 463.355 139.184 460.414 139.184 cv
444.643 139.184 431.342 149.711 427.149 164.124 cv
.819608 .968627 .933333 rgb
f
428.353 390.557 mo
353.491 390.557 292.592 329.658 292.592 254.801 cv
292.592 179.942 353.491 119.042 428.353 119.042 cv
503.207 119.042 564.107 179.942 564.107 254.801 cv
564.107 329.658 503.207 390.557 428.353 390.557 cv
428.353 120.147 mo
354.102 120.147 293.698 180.552 293.698 254.801 cv
293.698 329.047 354.102 389.453 428.353 389.453 cv
502.596 389.453 563.001 329.047 563.001 254.801 cv
563.001 180.552 502.596 120.147 428.353 120.147 cv
.631373 .721569 .709804 rgb
f
445.767 238.472 mo
442.56 238.472 439.962 235.876 439.962 232.671 cv
439.962 229.465 442.56 226.863 445.767 226.863 cv
448.97 226.863 451.565 229.465 451.565 232.671 cv
451.565 235.876 448.97 238.472 445.767 238.472 cv
.623529 .890196 .854902 rgb
f
470.368 269.729 mo
467.159 269.729 464.563 267.133 464.563 263.92 cv
464.563 260.719 467.159 258.115 470.368 258.115 cv
473.569 258.115 476.173 260.719 476.173 263.92 cv
476.173 267.133 473.569 269.729 470.368 269.729 cv
f
444.196 299.078 mo
440.988 299.078 438.391 296.48 438.391 293.273 cv
438.391 290.066 440.988 287.469 444.196 287.469 cv
447.401 287.469 450.001 290.066 450.001 293.273 cv
450.001 296.48 447.401 299.078 444.196 299.078 cv
f
407.895 287.469 mo
404.69 287.469 402.09 284.871 402.09 281.666 cv
402.09 278.457 404.69 275.859 407.895 275.859 cv
411.101 275.859 413.697 278.457 413.697 281.666 cv
413.697 284.871 411.101 287.469 407.895 287.469 cv
f
407.895 250.086 mo
404.69 250.086 402.09 247.484 402.09 244.281 cv
402.09 241.072 404.69 238.472 407.895 238.472 cv
411.101 238.472 413.697 241.072 413.697 244.281 cv
413.697 247.484 411.101 250.086 407.895 250.086 cv
f
430.561 267.059 mo
430.449 267.059 430.339 267.014 430.257 266.926 cv
430.103 266.756 430.11 266.496 430.279 266.342 cv
435.86 261.131 li
433.25 258.182 430.735 255.398 430.352 255.147 cv
430.153 255.027 430.089 254.779 430.203 254.582 cv
430.28 254.448 430.42 254.374 430.562 254.374 cv
430.632 254.374 430.702 254.392 430.767 254.43 cv
431.22 254.689 433.995 257.766 436.467 260.56 cv
441.334 256.022 li
441.413 255.946 441.516 255.908 441.619 255.908 cv
441.73 255.908 441.841 255.953 441.923 256.041 cv
442.077 256.207 442.068 256.471 441.902 256.625 cv
437.019 261.184 li
438.473 262.828 439.749 264.297 440.274 264.893 cv
440.42 265.068 440.404 265.328 440.233 265.48 cv
440.155 265.549 440.056 265.58 439.962 265.58 cv
439.842 265.58 439.727 265.531 439.649 265.439 cv
438.692 264.344 437.558 263.045 436.41 261.752 cv
430.846 266.947 li
430.765 267.019 430.662 267.059 430.561 267.059 cv
.913725 .992157 .972549 rgb
f
296.613 193.229 mo
277.987 197.624 li
250.576 204.1 li
221.803 210.898 li
194.598 217.322 li
167.444 223.732 li
140.601 230.071 li
113.035 236.58 li
85.6299 243.049 li
64.7598 247.981 li
63.3706 248.31 61.9639 247.386 61.6211 245.928 cv
57.0127 226.405 li
56.6621 224.939 57.5098 223.495 58.8984 223.165 cv
69.3804 220.685 li
96.5928 214.264 li
124.107 207.769 li
149.845 201.685 li
176.843 195.315 li
203.57 189.002 li
234.913 181.595 li
261.982 175.204 li
290.751 168.411 li
292.139 168.089 293.545 169.007 293.888 170.472 cv
298.504 189.988 li
298.846 191.453 298 192.907 296.613 193.229 cv
cp
.129412 .223529 .286275 rgb
f
302.139 242.267 mo
302.139 401.249 li
302.139 402.667 299.985 406.02 298.579 406.02 cv
64.2095 406.413 li
62.8032 406.413 61.6587 405.251 61.6587 403.83 cv
61.6587 250.014 li
61.6587 248.587 62.8032 247.433 64.2095 247.433 cv
93.9971 246.45 li
121.164 245.562 li
156.238 244.404 li
183.391 243.505 li
217.394 242.389 li
244.535 241.501 li
279.324 240.35 li
299.588 239.686 li
300.994 239.686 302.139 240.842 302.139 242.267 cv
cp
f
247.91 327.741 mo
131.69 329.428 li
131.69 302.676 li
247.91 302.676 li
247.91 327.741 li
cp
295.521 302.03 mo
66.0176 302.03 li
65.8389 302.03 65.6934 302.175 65.6934 302.353 cv
65.6934 302.534 65.8389 302.676 66.0176 302.676 cv
131.048 302.676 li
131.048 329.438 li
65.5288 330.39 li
65.3511 330.39 65.21 330.537 65.2114 330.717 cv
65.2134 330.892 65.3555 331.033 65.5332 331.033 cv
65.5396 331.033 li
131.369 330.079 li
239.195 328.512 li
239.195 348.175 li
76.0298 351.371 li
75.8472 351.373 75.708 351.52 75.7109 351.7 cv
75.7153 351.875 75.8599 352.014 76.0342 352.014 cv
76.0391 352.014 li
239.195 348.821 li
239.195 368.803 li
239.195 368.98 239.339 369.124 239.517 369.124 cv
239.694 369.124 239.838 368.98 239.838 368.803 cv
239.838 328.503 li
247.985 328.384 li
248.045 328.457 248.132 328.51 248.231 328.51 cv
248.337 328.51 248.428 328.455 248.486 328.377 cv
295.041 327.704 li
295.218 327.7 295.361 327.551 295.36 327.374 cv
295.358 327.195 295.204 327.074 295.035 327.056 cv
248.558 327.73 li
248.558 302.676 li
295.521 302.676 li
295.698 302.676 295.844 302.534 295.844 302.353 cv
295.844 302.175 295.698 302.03 295.521 302.03 cv
cp
1 1 1 rgb
f
292.977 368.477 mo
292.97 368.477 li
73.7954 372.981 li
73.6187 372.986 73.4766 373.133 73.481 373.312 cv
73.4844 373.487 73.6279 373.63 73.8032 373.63 cv
73.8096 373.63 li
292.984 369.124 li
293.162 369.119 293.304 368.973 293.301 368.793 cv
293.297 368.619 293.152 368.477 292.977 368.477 cv
cp
f
152.378 315.938 mo
153.015 316.379 153.705 316.541 154.315 316.541 cv
154.728 316.541 155.104 316.465 155.397 316.357 cv
155.564 316.294 155.65 316.109 155.587 315.94 cv
155.527 315.774 155.34 315.69 155.172 315.751 cv
154.593 315.967 153.607 316.006 152.748 315.409 cv
151.934 314.843 150.965 313.511 150.965 310.377 cv
150.965 308.547 151.438 307.205 152.366 306.394 cv
153.591 305.321 155.226 305.528 155.241 305.531 cv
155.42 305.553 155.578 305.432 155.605 305.255 cv
155.628 305.08 155.505 304.914 155.331 304.891 cv
155.25 304.88 153.396 304.64 151.95 305.9 cv
150.868 306.844 150.319 308.349 150.319 310.377 cv
150.319 313.788 151.44 315.286 152.378 315.938 cv
cp
f
160.071 316.541 mo
160.245 316.549 li
160.759 316.549 161.314 316.278 161.826 315.768 cv
162.495 315.101 164.607 312.363 163.759 305.152 cv
163.74 304.976 163.579 304.841 163.402 304.868 cv
163.222 304.891 163.097 305.052 163.119 305.227 cv
163.934 312.153 161.986 314.694 161.369 315.31 cv
160.951 315.729 160.506 315.948 160.149 315.896 cv
159.51 315.755 159.138 310.756 159.356 305.202 cv
159.365 305.025 159.225 304.875 159.049 304.867 cv
158.872 304.872 158.72 304.999 158.712 305.18 cv
158.314 315.237 159.53 316.476 160.071 316.541 cv
cp
f
165.921 305.513 mo
168.827 305.513 li
168.827 316.227 li
168.827 316.405 168.971 316.549 169.15 316.549 cv
169.327 316.549 169.472 316.405 169.472 316.227 cv
169.472 305.513 li
172.378 305.513 li
172.556 305.513 172.7 305.368 172.7 305.19 cv
172.7 305.011 172.556 304.867 172.378 304.867 cv
165.921 304.867 li
165.742 304.867 165.598 305.011 165.598 305.19 cv
165.598 305.368 165.742 305.513 165.921 305.513 cv
cp
f
80.3809 333.739 mo
81.7471 334.567 85.5928 337.277 84.9756 341.314 cv
84.3545 345.388 81.3965 346.214 80.3809 346.38 cv
80.3809 333.739 li
cp
80.0757 347.065 mo
80.1206 347.063 84.791 346.774 85.6113 341.411 cv
86.4287 336.078 80.2651 332.93 80.2036 332.899 cv
80.104 332.849 79.9839 332.854 79.8892 332.912 cv
79.792 332.972 79.7378 333.076 79.7378 333.188 cv
79.7378 346.742 li
79.835 346.979 li
80.0586 347.067 li
80.0757 347.065 li
cp
f
90.3047 333.511 mo
90.9146 333.511 91.7368 336.286 92.3354 341.036 cv
90.3691 341.02 89.3174 341.012 88.7568 341.044 cv
89.0381 336.851 89.5942 333.511 90.3047 333.511 cv
cp
88.2373 347.067 mo
88.4141 347.067 88.561 346.924 88.561 346.746 cv
88.5684 345.039 88.6226 343.304 88.7168 341.672 cv
89.374 341.665 91.1348 341.672 92.4106 341.683 cv
92.5908 343.2 92.7476 344.895 92.8628 346.763 cv
92.877 346.935 93.0161 347.067 93.1865 347.067 cv
93.2056 347.065 li
93.3853 347.056 93.5195 346.902 93.5073 346.722 cv
93.2993 343.473 92.4609 332.863 90.3047 332.866 cv
88.1309 332.866 87.9272 343.487 87.915 346.742 cv
87.915 346.921 88.0601 347.065 88.2373 347.067 cv
cp
f
102.271 333.188 mo
102.271 333.01 102.125 332.866 101.947 332.866 cv
94.106 332.866 li
93.9277 332.866 93.7842 333.01 93.7842 333.188 cv
93.7842 333.365 93.9277 333.511 94.106 333.511 cv
97.7314 333.511 li
97.7764 334.89 97.7437 341.314 97.7026 345.666 cv
97.7026 345.843 97.8447 345.99 98.0244 345.993 cv
98.0298 345.993 li
98.2036 345.993 98.3486 345.849 98.3506 345.668 cv
98.4238 337.259 98.4131 334.473 98.3604 333.511 cv
101.947 333.511 li
102.125 333.511 102.271 333.365 102.271 333.188 cv
cp
f
109.33 333.511 mo
109.509 333.511 109.651 333.365 109.651 333.188 cv
109.651 333.01 109.509 332.866 109.33 332.866 cv
103.806 332.866 li
103.574 332.963 li
103.481 333.198 li
103.539 335.014 103.593 337.307 103.621 339.425 cv
103.621 339.427 li
103.621 339.432 li
103.661 342.484 103.65 345.178 103.508 345.544 cv
103.465 345.645 103.477 345.759 103.536 345.849 cv
103.595 345.938 103.697 345.993 103.806 345.993 cv
109.33 345.993 li
109.509 345.993 109.651 345.845 109.651 345.668 cv
109.651 345.488 109.509 345.344 109.33 345.344 cv
104.187 345.344 li
104.293 344.361 104.299 342.091 104.271 339.75 cv
107.819 339.75 li
107.996 339.75 108.14 339.605 108.14 339.427 cv
108.14 339.249 107.996 339.103 107.819 339.103 cv
104.265 339.103 li
104.229 336.826 104.169 334.59 104.138 333.511 cv
109.33 333.511 li
cp
f
83.6709 363.589 mo
83.1255 363.822 82.1729 363.167 81.8818 362.923 cv
81.7471 362.805 81.5439 362.82 81.4282 362.955 cv
81.312 363.093 81.3262 363.296 81.4629 363.412 cv
81.6079 363.536 82.9121 364.614 83.9238 364.183 cv
84.4951 363.941 84.8154 363.293 84.8765 362.258 cv
85.0752 358.864 80.4136 356.254 80.2148 356.146 cv
80.1133 356.088 79.9912 356.091 79.8945 356.148 cv
79.7939 356.207 79.7378 356.313 79.7378 356.428 cv
79.7378 369.905 li
79.7378 370.082 79.8799 370.229 80.0586 370.229 cv
80.2363 370.229 80.3809 370.082 80.3809 369.905 cv
80.3809 357.001 li
81.5366 357.746 84.373 359.824 84.231 362.219 cv
84.1982 362.747 84.0771 363.414 83.6709 363.589 cv
cp
f
90.8677 360.352 mo
91.0352 359.254 90.811 358.339 90.2017 357.625 cv
88.9111 356.122 86.3652 356.104 86.2588 356.104 cv
86.0791 356.104 85.937 356.25 85.937 356.428 cv
85.937 369.905 li
85.937 370.082 86.0791 370.229 86.2588 370.229 cv
86.4355 370.229 86.5825 370.082 86.5825 369.905 cv
86.5825 356.768 li
87.2632 356.821 88.8564 357.052 89.709 358.046 cv
90.1934 358.608 90.3691 359.35 90.229 360.251 cv
90.0386 361.513 89.6104 362.346 88.96 362.728 cv
88.2393 363.153 87.457 362.867 87.4526 362.865 cv
87.3242 362.815 87.1782 362.854 87.0884 362.955 cv
87.0005 363.06 86.9863 363.208 87.0552 363.326 cv
90.9292 370.063 li
90.9883 370.169 91.0972 370.229 91.208 370.229 cv
91.3691 370.184 li
91.5244 370.094 91.5767 369.896 91.4868 369.743 cv
87.9604 363.605 li
88.3364 363.619 88.8115 363.563 89.2773 363.29 cv
90.1089 362.807 90.6455 361.817 90.8677 360.352 cv
cp
f
92.6504 361.687 mo
92.7393 359.391 93.418 356.71 95.0352 356.71 cv
95.1382 356.71 95.2476 356.725 95.3584 356.743 cv
96.4458 356.955 97.7124 362.16 97.3228 366.212 cv
97.2046 367.47 96.8096 369.585 95.5435 369.585 cv
95.4458 369.581 li
93.623 369.438 92.5098 365.306 92.6504 361.687 cv
cp
95.5435 370.229 mo
96.4766 370.229 97.6533 369.545 97.9678 366.273 cv
98.3174 362.605 97.3228 356.465 95.481 356.11 cv
93.4395 355.718 92.1533 357.875 92.0068 361.659 cv
91.8511 365.64 93.1011 370.046 95.3965 370.225 cv
95.5435 370.229 li
cp
f
100.462 356.876 mo
101.706 357.34 105.389 359.061 105.559 363.181 cv
105.73 367.37 101.764 369.036 100.462 369.47 cv
100.462 356.876 li
cp
100.218 370.217 mo
100.28 370.202 106.424 368.585 106.202 363.153 cv
105.981 357.746 100.28 356.132 100.222 356.118 cv
100.125 356.088 100.023 356.11 99.9409 356.171 cv
99.8638 356.231 99.814 356.328 99.814 356.428 cv
99.814 369.905 li
99.814 370.003 99.8608 370.099 99.9395 370.158 cv
100.138 370.229 li
100.218 370.217 li
cp
f
121.733 359.327 mo
121.911 359.359 122.078 359.244 122.109 359.069 cv
122.364 357.722 121.515 356.231 120.097 355.522 cv
118.771 354.864 117.394 355.123 116.403 356.213 cv
114.734 358.046 115.03 365.714 117.365 368.52 cv
117.997 369.28 118.727 369.66 119.528 369.66 cv
120.097 369.66 120.703 369.467 121.333 369.073 cv
121.485 368.982 121.529 368.781 121.438 368.632 cv
121.343 368.479 121.145 368.434 120.991 368.526 cv
119.759 369.294 118.734 369.155 117.862 368.108 cv
115.581 365.362 115.515 358.147 116.88 356.645 cv
118.011 355.401 119.306 355.851 119.809 356.104 cv
120.955 356.673 121.671 357.898 121.473 358.95 cv
121.441 359.126 121.556 359.295 121.733 359.327 cv
cp
f
127.136 355.276 mo
127.319 355.276 127.459 355.133 127.459 354.954 cv
127.459 354.774 127.319 354.632 127.136 354.632 cv
124.926 354.632 123.73 358.654 123.73 362.44 cv
123.73 365.522 124.614 369.124 127.105 369.124 cv
127.284 369.124 127.431 368.98 127.431 368.803 cv
127.431 368.624 127.284 368.477 127.105 368.477 cv
125.222 368.477 124.375 365.446 124.375 362.444 cv
124.375 362.44 li
124.375 358.979 125.486 355.276 127.136 355.276 cv
cp
f
110.22 367.617 mo
109.391 367.617 109.317 368.909 110.152 368.909 cv
110.981 368.909 111.052 367.617 110.22 367.617 cv
cp
f
133.461 367.834 mo
132.631 367.834 132.558 369.124 133.393 369.124 cv
134.221 369.124 134.295 367.834 133.461 367.834 cv
cp
f
244.535 241.501 mo
231.739 271.887 li
204.397 271.887 li
217.394 242.389 li
244.535 241.501 li
cp
f
221.803 210.898 mo
194.598 217.322 li
176.843 195.315 li
203.57 189.002 li
221.803 210.898 li
cp
f
277.987 197.624 mo
250.576 204.1 li
234.913 181.595 li
261.982 175.204 li
277.987 197.624 li
cp
f
70.1392 283.063 mo
70.0469 283.044 69.9482 283.068 69.8721 283.131 cv
69.7993 283.19 69.7544 283.283 69.7544 283.381 cv
69.7544 298.204 li
69.7544 298.384 69.8984 298.527 70.0781 298.527 cv
70.2554 298.527 70.3994 298.384 70.3994 298.204 cv
70.3994 283.791 li
71.5698 284.115 74.9829 285.29 74.7129 287.962 cv
74.6255 288.854 74.3364 289.429 73.8623 289.667 cv
72.9683 290.12 71.6279 289.337 71.6172 289.327 cv
71.4634 289.24 71.2651 289.287 71.1729 289.439 cv
71.082 289.597 71.1323 289.792 71.2852 289.882 cv
71.3521 289.922 72.938 290.854 74.1504 290.244 cv
74.8384 289.9 75.2422 289.154 75.3564 288.026 cv
75.7363 284.24 70.3691 283.11 70.1392 283.063 cv
cp
f
80.7827 290.073 mo
81.4321 289.695 82.6523 288.52 82.7373 284.992 cv
82.7705 283.576 82.3896 282.596 81.6079 282.078 cv
80.2319 281.17 78.1709 282.091 78.0835 282.132 cv
77.9629 282.188 77.8877 282.312 77.897 282.443 cv
78.7568 297.269 li
78.7666 297.447 78.9199 297.583 79.0972 297.571 cv
79.2749 297.564 79.4111 297.409 79.4004 297.231 cv
78.5537 282.638 li
79.0591 282.451 80.3901 282.05 81.2534 282.618 cv
81.8364 283.005 82.1182 283.8 82.0894 284.977 cv
81.9927 289.128 80.2607 289.606 80.249 289.61 cv
80.147 289.632 80.0615 289.7 80.0195 289.798 cv
79.9766 289.892 79.9858 290.003 80.04 290.09 cv
85.0181 298.37 li
85.0762 298.471 85.186 298.527 85.2944 298.527 cv
85.46 298.482 li
85.6113 298.388 85.6631 298.19 85.5693 298.038 cv
80.7827 290.073 li
cp
f
93.7515 293.442 mo
93.6431 295.104 93.1538 297.883 91.083 297.883 cv
91.0166 297.88 li
89.0327 297.825 88.0557 293.662 88.1123 289.579 cv
88.1641 285.743 89.1191 282.737 90.2837 282.737 cv
90.3828 282.744 li
92.231 282.988 94.0591 288.788 93.7515 293.442 cv
cp
90.4692 282.106 mo
88.4766 281.839 87.521 285.728 87.4663 289.57 cv
87.4053 293.978 88.4717 298.457 90.9976 298.527 cv
91.083 298.527 li
93.0068 298.527 94.1846 296.737 94.397 293.488 cv
94.6753 289.232 93.0254 282.441 90.4692 282.106 cv
cp
f
96.7954 297.736 mo
96.7954 283.746 li
99.3887 284.168 103.061 286.874 103.465 291.09 cv
103.811 294.671 98.3813 297.104 96.7954 297.736 cv
cp
96.4976 283.057 mo
96.2515 283.142 li
96.186 283.202 96.1479 283.288 96.1479 283.381 cv
96.1479 298.204 li
96.1479 298.309 96.2002 298.407 96.2847 298.47 cv
96.4692 298.527 li
96.5757 298.512 li
96.9023 298.397 104.558 295.698 104.109 291.026 cv
103.652 286.272 99.3174 283.297 96.4976 283.057 cv
cp
f
111.332 285.571 mo
111.156 285.613 111.052 285.787 111.095 285.961 cv
111.116 286.051 113.281 294.962 111.176 297.343 cv
110.796 297.769 110.303 297.942 109.672 297.864 cv
108.875 297.769 108.25 297.4 107.758 296.731 cv
105.718 293.962 106.926 287.277 106.938 287.213 cv
106.97 287.035 106.854 286.867 106.68 286.836 cv
106.504 286.805 106.336 286.918 106.304 287.093 cv
106.252 287.379 105.035 294.12 107.238 297.112 cv
107.833 297.924 108.627 298.391 109.594 298.507 cv
109.719 298.521 109.838 298.527 109.955 298.527 cv
110.641 298.527 111.213 298.275 111.66 297.771 cv
113.985 295.136 111.816 286.186 111.718 285.808 cv
111.676 285.633 111.504 285.529 111.332 285.571 cv
cp
f
117.819 285.446 mo
119.478 285.029 121.532 287.272 121.553 287.295 cv
121.671 287.429 121.877 287.438 122.009 287.318 cv
122.139 287.2 122.151 286.993 122.031 286.864 cv
121.939 286.758 119.689 284.304 117.663 284.821 cv
116.552 285.103 115.757 286.2 115.304 288.079 cv
114.361 291.985 115.243 295.926 117.45 297.666 cv
118.176 298.24 118.994 298.527 119.856 298.527 cv
120.533 298.527 121.234 298.35 121.939 297.989 cv
122.097 297.906 122.161 297.713 122.08 297.554 cv
121.997 297.396 121.804 297.332 121.645 297.412 cv
120.265 298.117 118.951 298.029 117.846 297.157 cv
115.835 295.568 115.047 291.897 115.933 288.229 cv
116.325 286.602 116.958 285.666 117.819 285.446 cv
cp
f
131.369 285.615 mo
124.055 285.615 li
123.875 285.615 123.73 285.76 123.73 285.94 cv
123.73 286.116 123.875 286.261 124.055 286.261 cv
127.826 286.261 li
127.904 290.689 127.972 297.564 127.833 298.104 cv
127.781 298.275 127.871 298.455 128.041 298.512 cv
128.141 298.527 li
128.277 298.527 128.402 298.442 128.447 298.309 cv
128.66 297.675 128.516 288.78 128.47 286.261 cv
131.369 286.261 li
131.549 286.261 131.69 286.116 131.69 285.94 cv
131.69 285.76 131.549 285.615 131.369 285.615 cv
cp
f
137.001 285.615 mo
136.84 285.615 136.675 285.751 136.668 285.927 cv
136.296 297.989 136.602 298.304 136.718 298.423 cv
136.964 298.527 li
137.141 298.527 137.285 298.384 137.285 298.204 cv
137.224 298.013 li
137.044 297.197 137.181 290.233 137.312 285.949 cv
137.318 285.771 137.178 285.621 137.001 285.615 cv
cp
f
146.084 297.883 mo
143.234 297.883 143.015 293.592 143.015 292.276 cv
143.015 290.404 143.362 288.333 143.945 286.739 cv
144.517 285.179 145.25 284.245 145.905 284.245 cv
146.083 284.245 146.227 284.104 146.227 283.924 cv
146.227 283.746 146.083 283.6 145.905 283.6 cv
144.94 283.6 144.028 284.638 143.34 286.518 cv
142.73 288.182 142.367 290.331 142.367 292.276 cv
142.367 296.192 143.756 298.527 146.084 298.527 cv
146.262 298.527 146.408 298.384 146.408 298.204 cv
146.408 298.026 146.262 297.883 146.084 297.883 cv
cp
f
157.774 284.696 mo
157.597 284.696 157.453 284.841 157.453 285.021 cv
157.453 295.633 li
153.095 284.898 li
153.035 284.753 152.884 284.673 152.73 284.704 cv
152.577 284.734 152.468 284.869 152.473 285.025 cv
152.559 289.939 152.632 297.486 152.48 298.13 cv
152.44 298.304 152.546 298.479 152.719 298.519 cv
152.794 298.527 li
152.941 298.527 153.073 298.429 153.108 298.279 cv
153.284 297.53 153.197 290.232 153.145 286.741 cv
157.477 297.408 li
157.536 297.552 157.687 297.632 157.838 297.604 cv
157.989 297.572 158.098 297.44 158.098 297.285 cv
158.098 285.021 li
158.098 284.841 157.953 284.696 157.774 284.696 cv
cp
f
121.164 245.562 mo
109.015 274.41 li
81.6733 274.41 li
93.9971 246.45 li
121.164 245.562 li
cp
f
183.391 243.505 mo
170.829 273.34 li
143.486 273.34 li
156.238 244.404 li
183.391 243.505 li
cp
f
302.139 242.267 mo
302.139 249.724 li
293.552 270.111 li
266.21 270.111 li
279.324 240.35 li
299.588 239.686 li
300.994 239.686 302.139 240.842 302.139 242.267 cv
cp
f
113.035 236.58 mo
85.6299 243.049 li
69.3804 220.685 li
96.5928 214.264 li
113.035 236.58 li
cp
f
167.444 223.732 mo
140.601 230.071 li
124.107 207.769 li
149.845 201.685 li
167.444 223.732 li
cp
f
64.4106 274.41 mo
101.418 274.079 li
64.4106 228.655 li
64.4106 274.41 li
cp
.180392 .294118 .356863 rgb
f
72.5645 267.694 mo
72.5645 269.065 71.4512 270.181 70.0781 270.181 cv
68.7026 270.181 67.5884 269.065 67.5884 267.694 cv
67.5884 266.32 68.7026 265.204 70.0781 265.204 cv
71.4512 265.204 72.5645 266.32 72.5645 267.694 cv
cp
.0509804 .0941176 .117647 rgb
f
87.7808 267.694 mo
87.7808 269.065 86.6675 270.181 85.2944 270.181 cv
83.9194 270.181 82.8071 269.065 82.8071 267.694 cv
82.8071 266.32 83.9194 265.204 85.2944 265.204 cv
86.6675 265.204 87.7808 266.32 87.7808 267.694 cv
cp
f
71.8677 245.562 mo
71.8677 246.935 70.7539 248.048 69.3804 248.048 cv
68.0073 248.048 66.8945 246.935 66.8945 245.562 cv
66.8945 244.186 68.0073 243.072 69.3804 243.072 cv
70.7539 243.072 71.8677 244.186 71.8677 245.562 cv
cp
f
89.9878 326.392 mo
89.9878 326.392 90.23 323.079 88.4521 322.835 cv
86.6768 322.596 83.7671 326.715 84.4126 327.118 cv
85.062 327.522 86.3525 326.312 86.3525 326.312 cv
86.3525 326.312 85.0605 328.087 87.1606 329.057 cv
89.9878 326.392 li
cp
.972549 .654902 .52549 rgb
f
115.674 309.59 mo
115.674 314.761 li
117.446 314.843 li
117.654 315.255 118.111 315.706 118.721 316.089 cv
118.853 316.172 118.988 316.249 119.128 316.322 cv
120.278 316.921 121.792 317.251 123.165 316.758 cv
123.335 316.693 123.505 316.627 123.668 316.537 cv
124.591 316.047 125.104 315.246 125.384 314.445 cv
125.839 313.151 125.685 311.853 125.685 311.853 cv
126.142 311.599 126.276 310.535 126.167 309.512 cv
126.091 308.893 125.932 308.291 125.685 307.894 cv
125.039 306.847 124.232 307.733 124.154 308.378 cv
124.154 308.378 124.154 308.946 123.183 309.028 cv
122.215 309.105 120.678 307.166 118.982 305.877 cv
117.286 304.584 115.106 304.743 114.54 305.877 cv
113.978 307.006 115.674 309.59 115.674 309.59 cv
cp
f
151.819 354.42 mo
151.819 354.42 li
151.452 356.598 150.13 359.798 147.392 364.918 cv
145.792 367.914 143.172 370.936 145.757 372.548 cv
148.342 374.165 154.661 379.199 158.114 385.209 cv
159.893 388.307 165.183 399.082 164.293 403.767 cv
164.293 403.767 163.164 404.249 162.113 403.767 cv
162.113 403.767 151.937 390.844 147.413 386.644 cv
142.89 382.444 135.943 377.437 134.975 376.226 cv
134.434 375.545 133.952 374.817 133.876 373.897 cv
135.85 372.146 137.906 370.408 139.336 369.359 cv
142.687 366.902 150.22 358.339 151.819 354.42 cv
cp
.00784314 .6 .52549 rgb
f
126.171 362.817 mo
131.258 357.407 135.055 353.527 135.055 353.527 cv
135.055 353.527 143.053 350.46 145.959 348.36 cv
148.867 346.261 151.289 343.919 151.289 343.919 cv
151.787 344.728 li
152.648 346.716 152.583 350.687 152.098 353.527 cv
152.054 353.786 151.956 354.091 151.819 354.42 cv
150.22 358.339 142.687 366.902 139.336 369.359 cv
137.906 370.408 135.85 372.146 133.876 373.897 cv
130.837 376.594 127.998 379.322 127.949 379.616 cv
127.866 380.101 135.621 386.401 138.69 390.118 cv
141.759 393.831 146.364 403.281 146.443 404.977 cv
143.053 404.977 li
142.326 404.977 li
142.326 404.977 131.745 395.85 127.302 392.217 cv
122.861 388.581 116.802 381.635 116.802 379.536 cv
116.802 377.437 121.083 368.229 126.171 362.817 cv
cp
.0235294 .658824 .6 rgb
f
151.787 344.728 mo
151.289 343.919 li
151.483 344.122 151.647 344.401 151.787 344.728 cv
cp
1 .321569 .368627 rgb
f
90.0063 326.372 mo
90.0063 326.372 94.7734 329.845 100.024 332.025 cv
105.273 334.205 108.746 333.561 111.331 331.701 cv
113.914 329.845 119.083 323.463 121.669 320.639 cv
122.407 319.828 123.3 319.217 124.263 318.757 cv
124.268 318.766 li
124.933 318.448 125.605 318.215 126.267 318.045 cv
126.37 318.466 li
126.393 318.457 li
126.287 318.022 li
128.154 317.535 130.087 317.479 131.603 317.648 cv
134.51 317.97 140.165 322.091 145.091 324.917 cv
150.019 327.743 152.924 330.409 153.491 334.366 cv
154.057 338.326 152.278 344.543 151.958 344.947 cv
151.808 344.706 li
151.668 344.382 151.503 344.102 151.31 343.899 cv
151.31 343.899 148.887 346.238 145.98 348.34 cv
143.073 350.438 135.076 353.509 135.076 353.509 cv
130.391 348.501 123.444 333.236 123.444 333.236 cv
123.444 333.236 118.035 338.487 112.865 340.506 cv
107.697 342.524 104.625 342.281 97.5181 338.729 cv
90.4111 335.174 87.1802 329.035 87.1802 329.035 cv
87.7466 328.146 90.0063 326.372 90.0063 326.372 cv
cp
f
146.443 404.977 mo
146.941 405.115 147.726 407.239 143.697 407.239 cv
140.299 407.239 138.125 407.007 138.368 406.112 cv
138.61 405.221 144.101 404.331 146.443 404.977 cv
cp
.129412 .223529 .286275 rgb
f
164.293 403.767 mo
165.09 403.898 165.232 405.66 162.566 405.684 cv
159.903 405.71 157.104 405.622 157.267 404.977 cv
157.429 404.332 162.354 403.442 164.293 403.767 cv
cp
f
123.165 316.758 mo
123.392 317.231 123.673 317.76 123.912 318.192 cv
124.041 318.424 124.158 318.627 124.241 318.778 cv
124.89 318.463 125.573 318.226 126.265 318.042 cv
125.394 314.485 li
125.384 314.445 li
125.104 315.246 124.591 316.047 123.668 316.537 cv
123.505 316.627 123.335 316.693 123.165 316.758 cv
cp
.972549 .654902 .52549 rgb
f
123.165 316.758 mo
123.392 317.231 123.673 317.76 123.912 318.192 cv
124.697 317.17 125.22 315.221 125.394 314.485 cv
125.384 314.445 li
125.104 315.246 124.591 316.047 123.668 316.537 cv
123.505 316.627 123.335 316.693 123.165 316.758 cv
cp
.929412 .533333 .392157 rgb
f
116.197 300.102 mo
117.59 300.646 119.951 300.889 121.709 300.706 cv
123.466 300.526 125.767 301.676 126.979 303.979 cv
128.072 306.055 127.191 308.963 126.163 309.512 cv
126.091 308.895 125.93 308.291 125.688 307.896 cv
125.039 306.845 124.232 307.733 124.152 308.38 cv
124.152 308.38 124.152 308.946 123.182 309.024 cv
122.213 309.105 120.678 307.168 118.982 305.877 cv
117.286 304.584 115.106 304.743 114.542 305.877 cv
112.522 306.139 111.169 305.311 111.169 302.767 cv
111.169 300.222 114.805 299.556 116.197 300.102 cv
cp
.0509804 .0941176 .117647 rgb
f
115.783 309.067 mo
115.941 308.977 li
116.412 308.151 117.42 308.551 117.46 308.567 cv
117.555 308.607 117.659 308.563 117.695 308.468 cv
117.735 308.376 117.691 308.27 117.598 308.23 cv
117.136 308.043 116.128 307.918 115.626 308.795 cv
115.693 309.045 li
115.783 309.067 li
cp
f
125.201 310.847 mo
125.293 310.82 li
125.358 310.572 li
124.932 309.846 125.212 309.21 125.224 309.183 cv
125.265 309.091 125.226 308.984 125.136 308.943 cv
125.042 308.901 124.935 308.939 124.894 309.031 cv
124.879 309.064 124.52 309.861 125.045 310.758 cv
125.201 310.847 li
cp
f
118.721 316.089 mo
118.853 316.172 118.988 316.249 119.128 316.322 cv
119.544 316.112 119.928 315.737 120.242 315.216 cv
120.206 314.949 li
119.962 314.983 li
119.932 315.026 li
119.587 315.6 119.175 315.957 118.721 316.089 cv
cp
f
151.539 344.504 mo
151.624 344.481 li
151.7 344.239 li
151.643 344.132 151.556 343.964 151.443 343.743 cv
144.532 330.396 139.878 324.928 137.191 322.688 cv
136.935 322.71 li
136.959 322.968 li
139.62 325.185 144.238 330.619 151.12 343.909 cv
151.235 344.134 151.322 344.302 151.379 344.408 cv
151.539 344.504 li
cp
f
107.058 341.868 mo
111.747 341.868 115.528 339.406 118.494 337.48 cv
119.183 337.035 li
123.221 334.435 127.036 329.215 127.073 329.162 cv
127.034 328.909 li
126.78 328.95 li
126.741 329.001 122.965 334.168 118.984 336.728 cv
118.294 337.175 li
114.382 339.722 109.024 343.205 102.05 340.544 cv
101.956 340.509 101.851 340.554 101.815 340.646 cv
101.778 340.742 101.826 340.849 101.92 340.883 cv
103.742 341.578 105.454 341.868 107.058 341.868 cv
cp
f
130.241 377.409 mo
130.367 377.358 li
131.309 376.448 134.498 373.596 139.032 369.814 cv
143.528 366.066 147.451 361.266 148.931 359.376 cv
148.899 359.12 li
148.644 359.149 li
147.174 361.031 143.27 365.812 138.8 369.535 cv
134.223 373.35 131.099 376.146 130.115 377.096 cv
130.111 377.354 li
130.241 377.409 li
cp
f
120.311 382.059 mo
120.398 382.039 li
120.87 381.777 121.404 379.837 121.555 379.245 cv
121.582 379.148 121.521 379.051 121.425 379.023 cv
121.33 379.001 121.229 379.059 121.204 379.155 cv
120.911 380.288 120.452 381.592 120.223 381.719 cv
120.151 381.966 li
120.311 382.059 li
cp
f
116.599 310.665 mo
116.599 310.923 116.807 311.127 117.064 311.127 cv
117.322 311.127 117.529 310.923 117.529 310.665 cv
117.529 310.407 117.322 310.203 117.064 310.203 cv
116.807 310.203 116.599 310.407 116.599 310.665 cv
cp
f
71.8447 204.598 mo
71.6636 389.063 li
77.5776 389.063 li
77.5776 204.598 li
71.8447 204.598 li
cp
.745098 .909804 .862745 rgb
f
71.4048 123.494 mo
66.3774 122.894 56.1743 124.162 48.0718 137.55 cv
39.9668 150.945 36.0039 166.457 36.0039 174.131 cv
36.0039 180.49 36.8394 183.594 42.9116 187.122 cv
44.165 187.847 45.6406 188.595 47.3838 189.394 cv
57.5498 194.046 72.2329 200.422 76.2671 202.496 cv
77.4395 203.09 80.5679 204.401 84.4556 205.984 cv
91.7798 208.959 101.807 212.907 106.572 214.909 cv
106.531 214.846 li
106.095 214.221 105.789 213.632 105.59 213.193 cv
105.259 212.652 104.95 212.009 104.692 211.252 cv
103.799 209.043 102.934 205.194 104.247 197.423 cv
104.557 195.554 104.998 193.468 105.59 191.112 cv
109.614 175.252 115.302 164.738 119.094 158.014 cv
119.259 157.721 119.434 157.429 119.623 157.147 cv
123.647 150.915 131.91 146.739 137.843 148.52 cv
135.995 147.781 76.7339 124.128 71.4048 123.494 cv
cp
.333333 .827451 .72549 rgb
f
41.8647 183.251 mo
41.6978 183.156 li
41.4727 182.776 44.9263 169.867 45.1685 169.086 cv
45.2017 168.984 45.3105 168.93 45.4121 168.957 cv
45.5142 168.99 45.5728 169.098 45.5405 169.2 cv
44.8745 171.336 42.0728 182.316 42.0557 183.021 cv
41.9624 183.225 li
41.8647 183.251 li
cp
1 1 1 rgb
f
46.1299 166.483 mo
46.064 166.472 li
45.9648 166.437 45.9111 166.324 45.9502 166.222 cv
46.1636 165.623 51.2686 151.444 52.5547 149.127 cv
52.6074 149.033 52.7261 149.001 52.8198 149.054 cv
52.9126 149.105 52.9458 149.224 52.895 149.316 cv
51.6245 151.604 46.3647 166.207 46.3135 166.357 cv
46.1299 166.483 li
cp
f
55.2231 145.15 mo
55.0459 145.034 li
54.7651 144.398 60.5332 134.14 65.7563 128.916 cv
66.0298 128.916 li
66.0298 129.19 li
60.5269 134.694 55.5107 144.229 55.4141 144.923 cv
55.3022 145.133 li
55.2231 145.15 li
cp
f
65.2417 146.185 mo
65.1826 146.175 li
65.0786 146.141 65.0229 146.032 65.0571 145.93 cv
67.6675 138.026 73.6377 131.04 74.2588 130.611 cv
74.5278 130.662 li
74.4775 130.931 li
73.8677 131.35 68.0068 138.231 65.4272 146.051 cv
65.2417 146.185 li
cp
f
55.9565 167.389 mo
55.8989 167.381 li
55.7974 167.348 55.7407 167.239 55.7729 167.135 cv
57.0991 162.931 60.3589 155.819 61.585 153.14 cv
61.7881 152.697 61.9287 152.394 61.9863 152.263 cv
62.0278 152.164 62.146 152.118 62.2412 152.162 cv
62.3394 152.205 62.3843 152.318 62.3423 152.414 cv
62.2847 152.549 62.144 152.856 61.9399 153.3 cv
60.7134 155.976 57.4624 163.073 56.1411 167.253 cv
55.9565 167.389 li
cp
f
50.0093 186.653 mo
49.9722 186.65 li
49.8687 186.632 49.7998 186.527 49.8193 186.425 cv
51.0601 179.961 53.937 172.883 53.9678 172.809 cv
54.0078 172.71 54.1226 172.662 54.2197 172.704 cv
54.3193 172.746 54.3672 172.857 54.3247 172.957 cv
54.2979 173.029 51.4326 180.069 50.2007 186.497 cv
50.1812 186.59 50.1011 186.653 50.0093 186.653 cv
cp
f
59.061 191.566 mo
58.998 191.557 li
58.896 191.521 58.8413 191.413 58.8774 191.311 cv
63.4995 177.732 li
63.5356 177.632 63.645 177.579 63.7451 177.614 cv
63.8481 177.649 63.9019 177.758 63.8657 177.86 cv
59.2446 191.434 li
59.061 191.566 li
cp
f
67.7241 167.389 mo
67.6367 167.367 li
67.541 167.319 67.5034 167.203 67.5498 167.108 cv
67.6211 166.963 68.5869 164.437 69.5254 161.996 cv
70.5322 159.374 71.5737 156.657 71.939 155.744 cv
71.979 155.646 72.0903 155.598 72.1924 155.637 cv
72.2905 155.676 72.3394 155.791 72.3008 155.889 cv
71.9355 156.799 70.8931 159.512 69.8882 162.136 cv
68.6948 165.239 67.9614 167.149 67.8955 167.282 cv
67.7241 167.389 li
cp
f
74.3667 149.418 mo
74.2988 149.403 li
74.1997 149.367 74.1484 149.255 74.1875 149.154 cv
74.3564 148.693 78.4546 137.828 81.6792 134.604 cv
81.9531 134.604 li
81.9531 134.878 li
78.7886 138.045 74.5908 149.181 74.5483 149.291 cv
74.3667 149.418 li
cp
f
83.8521 150.969 mo
83.7471 150.969 83.6602 150.88 83.6602 150.774 cv
83.6602 147.216 89.7925 136.767 90.0513 136.326 cv
90.1089 136.232 90.2256 136.201 90.3184 136.255 cv
90.4121 136.311 90.4414 136.431 90.3853 136.521 cv
90.3218 136.629 84.0474 147.321 84.0474 150.774 cv
84.0474 150.88 83.9604 150.969 83.8521 150.969 cv
cp
f
74.3667 174.887 mo
74.3267 174.884 li
74.2192 174.858 74.1553 174.756 74.1772 174.651 cv
74.8208 171.789 79.1611 161.339 80.7207 160.432 cv
80.856 160.352 80.9819 160.33 81.0962 160.366 cv
81.1982 160.397 81.2583 160.505 81.2261 160.606 cv
81.1953 160.71 81.0879 160.765 80.9849 160.738 cv
80.9819 160.738 li
80.1738 160.738 75.4985 170.544 74.5547 174.736 cv
74.5361 174.826 74.4585 174.887 74.3667 174.887 cv
cp
f
68.5 194.8 mo
68.4399 194.791 li
68.334 194.754 68.2803 194.643 68.3145 194.544 cv
69.5571 190.854 72.4453 180.992 72.5083 180.61 cv
72.5278 180.505 72.625 180.436 72.7339 180.451 cv
72.8384 180.469 72.9106 180.568 72.8931 180.674 cv
72.8281 181.058 69.9297 190.959 68.6826 194.665 cv
68.5 194.8 li
cp
f
76.9014 197.901 mo
76.8384 197.892 li
76.7393 197.856 76.6855 197.745 76.7207 197.646 cv
76.7446 197.577 79.1943 190.608 80.856 185.622 cv
80.8921 185.52 81.0005 185.463 81.1025 185.499 cv
81.2046 185.535 81.2583 185.644 81.2222 185.746 cv
79.5635 190.731 77.1094 197.703 77.085 197.771 cv
76.9014 197.901 li
cp
f
83.4941 176.295 mo
83.4346 176.286 li
83.3315 176.252 83.2754 176.146 83.3076 176.042 cv
83.4404 175.622 86.5659 165.667 87.8491 163.16 cv
87.8965 163.066 88.0171 163.028 88.1099 163.076 cv
88.2061 163.124 88.2422 163.241 88.1938 163.335 cv
86.9258 165.811 83.7109 176.054 83.6777 176.16 cv
83.4941 176.295 li
cp
f
92.0288 155.236 mo
91.9565 155.221 li
91.8574 155.179 91.8091 155.068 91.8511 154.966 cv
92.0439 154.506 96.5361 143.673 97.9575 141.862 cv
98.2275 141.831 li
98.2637 142.103 li
96.8755 143.872 92.2568 155.003 92.209 155.116 cv
92.0288 155.236 li
cp
f
99.2705 157.303 mo
99.2222 157.3 li
99.1201 157.273 99.0571 157.165 99.0815 157.063 cv
99.186 156.646 103.327 145.389 105.446 142.892 cv
105.716 142.867 li
105.741 143.141 li
103.654 145.604 99.5615 156.741 99.4595 157.156 cv
99.2705 157.303 li
cp
f
90.8652 179.027 mo
90.8022 179.015 li
90.7031 178.979 90.6494 178.87 90.6855 178.768 cv
91.3799 176.761 95.5508 165.071 96.0371 164.63 cv
96.311 164.643 li
96.3018 164.912 li
95.8955 165.411 92.3682 175.09 91.0518 178.897 cv
90.8652 179.027 li
cp
f
84.4556 201.263 mo
84.3506 201.263 84.2607 201.176 84.2607 201.068 cv
84.2607 196.17 88.0864 187.411 88.248 187.043 cv
88.2905 186.941 88.4072 186.9 88.5039 186.941 cv
88.6001 186.987 88.6445 187.098 88.603 187.197 cv
88.564 187.288 84.6514 196.254 84.6514 201.068 cv
84.6514 201.176 84.564 201.263 84.4556 201.263 cv
cp
f
119.623 157.147 mo
119.434 157.429 119.259 157.721 119.094 158.014 cv
115.302 164.738 109.614 175.252 105.59 191.112 cv
104.998 193.468 104.557 195.554 104.247 197.423 cv
99.9854 199.488 89.5137 203.559 89 202.321 cv
88.3657 200.779 93.252 186.109 95.8267 177.124 cv
98.4019 168.142 109.367 141.506 110.789 141.635 cv
111.909 141.738 117.358 152.559 119.623 157.147 cv
cp
.0235294 .658824 .6 rgb
f
76.2671 202.496 mo
72.2329 200.422 57.5498 194.046 47.3838 189.394 cv
45.6406 188.595 44.165 187.847 42.9116 187.122 cv
42.9116 201.263 li
42.9116 201.263 48.6968 204.203 62.1069 210.981 cv
75.5161 217.764 84.4556 219.305 84.4556 219.305 cv
84.4556 205.984 li
80.5679 204.401 77.4395 203.09 76.2671 202.496 cv
cp
.333333 .827451 .72549 rgb
f
84.4556 205.984 mo
84.4556 219.305 li
84.4556 219.305 98.1831 222.5 108.812 219.305 cv
109.235 216.111 li
106.531 214.846 li
106.572 214.909 li
101.807 212.907 91.7798 208.959 84.4556 205.984 cv
cp
f
104.83 71.3892 mo
104.184 71.5181 102.697 71.5181 101.857 70.0942 cv
101.017 68.6724 96.5576 67.5723 94.2285 70.4189 cv
92.0522 73.0767 92.3589 76.3564 92.7227 75.9736 cv
92.7886 75.8652 li
92.8042 75.8379 li
92.9331 75.5137 93.1489 75.2012 93.4253 74.9102 cv
94.5317 73.7407 96.5967 72.9268 97.7832 73.1333 cv
99.2705 73.3911 101.92 74.6216 103.021 74.9424 cv
104.121 75.2661 106.966 73.9727 106.9 72.6465 cv
106.834 71.3242 105.479 71.2588 104.83 71.3892 cv
cp
.0941176 .117647 .137255 rgb
f
103.862 78.6904 mo
103.654 79.6738 102.594 80.8867 101.513 80.7734 cv
101.356 80.7588 101.2 80.7124 101.05 80.6401 cv
100.923 80.5815 100.813 80.5049 100.692 80.4058 cv
99.5923 79.4653 100.563 77.397 102.275 76.8784 cv
102.916 76.6855 103.342 76.7217 103.598 76.9111 cv
103.724 76.9937 103.811 77.1123 103.869 77.2568 cv
103.869 77.2622 li
104.012 77.6265 103.979 78.146 103.862 78.6904 cv
cp
1 .321569 .368627 rgb
f
114.29 125.458 mo
113.565 123.554 107.185 122.196 104.959 121.554 cv
102.735 120.912 88.4258 116.391 88.4258 116.391 cv
88.4258 121.029 li
88.5278 121.128 li
88.7705 120.946 89.1074 120.75 89.5674 120.563 cv
93.1611 124.23 97.5635 128.72 98.3237 129.444 cv
98.4321 129.55 98.5825 129.693 98.7598 129.862 cv
101.028 129.949 105.674 130.219 106.293 130.992 cv
107.117 132.02 107.081 136.408 107.081 136.408 cv
110.849 137.755 114.311 139.228 114.311 139.228 cv
114.311 139.228 115.007 127.359 114.29 125.458 cv
cp
.129412 .223529 .286275 rgb
f
108.451 118.58 mo
108.451 118.58 105.235 110.618 103.964 103.259 cv
102.423 94.3516 103.063 92.9785 99.6821 88.1284 cv
96.3042 83.2817 92.4639 82.3887 92.4639 82.3887 cv
90.4146 81.4077 84.7891 80.8267 82.4609 81.4727 cv
80.1348 82.1201 74.7051 84.769 73.8647 91.3633 cv
73.8647 91.3633 71.5396 94.5957 69.5327 99.0581 cv
67.5293 103.519 66.4951 108.818 66.2358 111.856 cv
66.2358 111.856 72.0542 116.447 82.1392 116.186 cv
82.1392 116.186 86.0186 120.714 87.8936 121.878 cv
87.8936 121.878 88.0557 121.178 89.5674 120.563 cv
90.0093 120.384 90.5566 120.213 91.2568 120.067 cv
91.2568 120.067 86.665 114.701 85.6943 111.404 cv
85.6943 111.404 94.0356 98.9917 95.52 98.0874 cv
95.52 98.0874 96.2329 102.224 98.2998 107.912 cv
100.37 113.602 104.959 119.098 104.959 119.098 cv
105.004 118.253 108.451 118.58 108.451 118.58 cv
cp
1 .321569 .368627 rgb
f
108.451 118.58 mo
108.451 118.58 105.004 118.253 104.959 119.098 cv
104.959 119.098 104.686 120.779 104.814 121.424 cv
104.944 122.07 105.349 120.907 105.671 120.648 cv
105.993 120.39 106.753 121.033 106.624 121.956 cv
106.495 122.881 107.029 122.944 107.288 121.328 cv
107.288 121.328 107.156 122.947 107.417 122.833 cv
107.676 122.719 108.063 121.675 108.063 120.967 cv
108.063 120.967 108.063 122.292 108.322 122.181 cv
108.58 122.07 108.772 121.224 108.772 120.967 cv
108.772 120.967 108.742 121.956 109.066 121.636 cv
109.388 121.312 109.292 119.614 108.451 118.58 cv
cp
.972549 .654902 .52549 rgb
f
105.56 139.976 mo
105.022 143.146 100.358 145.476 98.0234 146.854 cv
95.6914 148.229 87.7944 153.019 84.6187 155.889 cv
81.4478 158.76 76.604 163.25 76.604 163.25 cv
76.5771 163.238 li
75.9814 163.052 75.5024 162.235 75.1919 161.546 cv
75.1016 161.356 75.0269 161.17 74.9683 161.015 cv
74.8672 160.741 74.8096 160.553 74.8096 160.553 cv
76.1265 154.632 81.5107 146.737 85.5801 143.503 cv
89.6489 140.274 95.2622 138.82 95.3306 138.232 cv
95.3911 137.649 93.7803 136.355 91.8335 135.457 cv
89.9009 134.544 79.8164 130.475 76.3877 128.406 cv
72.959 126.337 67.8535 123.881 66.627 120.68 cv
65.3955 117.473 66.041 113.279 66.2358 111.856 cv
66.2358 111.856 67.1924 112.61 69 113.485 cv
69.1201 113.548 69.2446 113.605 69.3677 113.662 cv
70.3081 114.101 71.4531 114.558 72.7847 114.96 cv
72.9209 115.005 73.061 115.042 73.1992 115.083 cv
75.6152 115.778 78.6206 116.273 82.1421 116.186 cv
82.1421 116.186 86.0215 120.714 87.8936 121.876 cv
87.8936 121.876 87.9717 121.538 88.5278 121.13 cv
88.7744 120.946 89.1108 120.754 89.5674 120.562 cv
90.4482 121.46 91.3799 122.411 92.2935 123.343 cv
95.0962 126.208 97.75 128.897 98.3237 129.447 cv
98.4321 129.55 98.5825 129.693 98.7598 129.865 cv
99.0425 130.139 99.4087 130.495 99.8174 130.911 cv
102.152 133.256 105.983 137.503 105.56 139.976 cv
cp
.129412 .223529 .286275 rgb
f
97.7832 73.1333 mo
97.0767 73.0112 96.0698 73.2539 95.1323 73.7095 cv
95.3765 74.1943 95.2798 74.7886 94.6157 75.5889 cv
93.8369 76.5327 93.0376 77.3105 92.1729 77.397 cv
92.1606 77.4644 li
92.1606 77.4644 91.5024 79.3242 92.1606 80.8916 cv
92.4761 81.6406 92.96 82.1924 93.5127 82.5845 cv
94.0635 82.9785 94.6816 83.2188 95.2622 83.3467 cv
96.4277 83.6064 99.3335 82.248 100.692 80.4058 cv
102.053 78.564 102.891 75.8472 103.021 74.9424 cv
101.92 74.6216 99.2705 73.3911 97.7832 73.1333 cv
cp
.972549 .654902 .52549 rgb
f
94.6157 75.5889 mo
93.8408 76.5327 93.0352 77.3105 92.1729 77.397 cv
91.7314 77.4448 91.2808 77.3105 90.7993 76.9229 cv
90.6074 76.7559 li
90.4751 76.6226 li
90.4692 76.6226 li
88.5332 74.5073 92.7021 71.9819 93.9038 72.6504 cv
94.396 72.9194 94.793 73.2031 95.0303 73.5425 cv
95.1323 73.7095 li
95.2139 73.9336 li
95.3306 74.3779 95.1807 74.9033 94.6157 75.5889 cv
cp
1 .321569 .368627 rgb
f
93.3232 74.1665 mo
94.6519 72.6348 96.6865 70.354 99.2705 70.2241 cv
101.857 70.0942 102.762 71.0313 102.762 71.0313 cv
102.762 71.0313 102.657 70.0161 101.128 69.4092 cv
99.6006 68.8027 95.9048 68.6636 92.6113 73.8379 cv
92.6113 73.8379 92.0049 75.6924 93.3232 74.1665 cv
cp
.745098 .909804 .862745 rgb
f
87.8936 121.878 mo
87.8936 121.878 89.2759 124.041 89.9224 124.237 cv
90.5679 124.429 89.4438 122.587 89.4438 122.587 cv
89.4438 122.587 90.4805 124.387 90.8022 124.23 cv
91.124 124.076 90.4805 123.059 90.4805 123.059 cv
90.4805 123.059 91.6924 124.429 91.8994 124.242 cv
92.1606 124.005 91.061 122.395 91.061 122.395 cv
91.061 122.395 92.1938 123.735 92.4194 123.494 cv
92.6084 123.29 91.6255 121.845 91.8843 121.328 cv
91.8843 121.328 93.062 122.395 93.1943 121.878 cv
93.3232 121.36 92.1606 120.714 91.2568 120.067 cv
91.2568 120.067 88.0864 120.39 87.8936 121.878 cv
cp
.972549 .654902 .52549 rgb
f
93.5161 82.5845 mo
93.3809 82.8125 93.165 83.168 92.9331 83.4468 cv
92.6504 83.79 92.3535 84.021 92.1606 83.7983 cv
91.9111 83.5098 91.938 82.6455 92.0103 81.9385 cv
92.0708 81.3643 92.1606 80.894 92.1606 80.894 cv
92.4761 81.6377 92.9629 82.1924 93.5161 82.5845 cv
cp
.890196 .643137 .521569 rgb
f
93.5161 82.5845 mo
93.3809 82.8125 93.165 83.168 92.9331 83.4468 cv
92.4224 83.1221 92.1553 82.4614 92.0103 81.9385 cv
92.0708 81.3643 92.1606 80.894 92.1606 80.894 cv
92.4761 81.6377 92.9629 82.1924 93.5161 82.5845 cv
cp
.929412 .533333 .392157 rgb
f
83.3022 117.803 mo
83.1548 117.734 li
82.9805 117.519 82.6865 117.241 82.3164 116.891 cv
80.2485 114.926 75.9492 110.836 74.3564 101.571 cv
73.0361 93.8994 74.3442 88.6094 74.3589 88.5586 cv
74.3857 88.4526 74.4917 88.3916 74.5962 88.4175 cv
74.6982 88.4419 74.7607 88.5474 74.7344 88.6514 cv
74.7217 88.7061 73.4336 93.9224 74.7383 101.507 cv
76.3091 110.642 80.5493 114.674 82.5869 116.613 cv
82.9629 116.97 83.2632 117.255 83.4551 117.488 cv
83.4282 117.761 li
83.3022 117.803 li
cp
.0941176 .117647 .137255 rgb
f
85.6943 111.598 mo
85.5254 111.499 li
85.5078 111.468 83.8906 108.519 83.3047 104.421 cv
82.7227 100.344 82.9355 91.9282 82.9355 91.8447 cv
82.9385 91.7388 83.0259 91.6538 83.1304 91.6538 cv
83.1372 91.6538 li
83.2417 91.6563 83.3291 91.7461 83.3232 91.855 cv
83.3232 91.939 83.1128 100.323 83.6895 104.368 cv
84.2637 108.388 85.8472 111.281 85.8647 111.309 cv
85.917 111.404 85.8833 111.521 85.7871 111.574 cv
85.6943 111.598 li
cp
f
97.4077 105.5 mo
97.2271 105.375 li
95.7637 101.381 94.9404 96.3057 95.0518 95.9707 cv
95.0879 95.8667 95.1953 95.812 95.2983 95.8481 cv
95.3911 95.8799 95.4487 95.978 95.4272 96.0737 cv
95.4004 96.4409 96.1216 101.227 97.5903 105.242 cv
97.6294 105.341 97.5757 105.453 97.4766 105.49 cv
97.4077 105.5 li
cp
f
98.0649 76.0581 mo
97.9751 76.0581 97.8906 75.9946 97.873 75.9028 cv
97.6895 74.9849 96.2681 74.9609 96.2534 74.9609 cv
96.146 74.9609 96.0586 74.874 96.0586 74.7671 cv
96.0615 74.6606 96.1484 74.5762 96.2534 74.5762 cv
96.311 74.5825 98.0112 74.5947 98.2554 75.8262 cv
98.2754 75.9316 98.21 76.0337 98.1011 76.0552 cv
98.0649 76.0581 li
cp
f
98.6699 80.9741 mo
98.5586 80.938 li
98.4741 80.8823 97.7563 80.3638 97.6602 79.8745 cv
97.6387 79.7676 97.7056 79.6646 97.8101 79.6445 cv
97.915 79.625 98.0181 79.6934 98.0381 79.7974 cv
98.0771 79.9937 98.3423 80.271 98.5796 80.4688 cv
98.9097 79.625 99.9224 77.1001 100.428 76.6123 cv
101.089 75.9761 102.324 76.6855 102.375 76.7144 cv
102.468 76.77 102.498 76.8887 102.447 76.9805 cv
102.393 77.0732 102.273 77.104 102.179 77.0508 cv
101.894 76.8838 101.067 76.5327 100.697 76.8931 cv
100.266 77.3105 99.2168 79.8911 98.8467 80.8506 cv
98.7236 80.9673 li
98.6699 80.9741 li
cp
f
97.1582 81.395 mo
96.1421 81.395 95.7158 80.6543 95.6348 80.2646 cv
95.6108 80.1597 95.6792 80.0571 95.7813 80.0337 cv
95.8901 80.0107 95.9893 80.0757 96.0132 80.1802 cv
96.0225 80.2192 96.209 81.0054 97.1582 81.0054 cv
97.2661 81.0054 97.353 81.0908 97.353 81.1992 cv
97.353 81.3057 97.2661 81.395 97.1582 81.395 cv
cp
f
95.2139 73.9336 mo
93.5313 76.3369 91.4189 76.8276 90.7993 76.9229 cv
90.6074 76.7559 li
90.4751 76.6226 li
90.5918 76.5576 li
90.6196 76.5576 93.1167 76.3315 94.9736 73.6025 cv
95.0303 73.5425 li
95.1323 73.7095 li
95.2139 73.9336 li
cp
f
103.869 77.2568 mo
103.869 77.2622 li
103.661 77.8667 102.85 79.9429 101.513 80.7734 cv
101.356 80.7588 101.2 80.7124 101.05 80.6401 cv
101.137 80.5361 li
102.661 79.7656 103.55 77.0103 103.559 76.9834 cv
103.598 76.9111 li
103.724 76.9937 103.811 77.1123 103.869 77.2568 cv
cp
f
99.8232 130.635 mo
92.5547 123.356 li
92.2813 123.356 li
92.2813 123.631 li
99.5469 130.911 li
99.6851 130.965 li
99.8232 130.911 li
99.8232 130.635 li
cp
f
98.2969 138.279 mo
98.3813 139.082 96.9805 139.753 94.8589 140.779 cv
92.9746 141.683 90.6343 142.811 88.5454 144.397 cv
84.1646 147.723 77.1748 155.455 75.1919 161.546 cv
75.1016 161.356 75.0269 161.17 74.9683 161.015 cv
77.1509 154.912 83.9844 147.366 88.3081 144.092 cv
90.4331 142.48 92.792 141.339 94.6885 140.431 cv
96.4463 139.577 97.9668 138.847 97.915 138.315 cv
97.7983 137.131 93.687 133.594 91.0488 132.4 cv
88.375 131.19 74.3228 123.645 71.8813 122.04 cv
69.6777 120.588 69.4312 117.793 69.4038 117.028 cv
69.3003 116.992 li
69.1396 116.888 68.6797 116.6 69 113.485 cv
69.1201 113.548 69.2446 113.605 69.3677 113.662 cv
69.0942 116.444 69.4912 116.655 69.5088 116.661 cv
69.5449 116.652 li
69.5962 116.641 li
69.5996 116.641 li
69.6118 116.641 li
69.6313 116.646 li
70.5586 116.81 71.8716 115.865 72.7847 114.96 cv
72.9209 115.005 73.061 115.042 73.1992 115.083 cv
72.3784 115.928 71.0283 117.05 69.8647 117.05 cv
69.7979 117.05 li
69.8335 117.793 70.0967 120.399 72.0967 121.712 cv
74.5229 123.314 88.5371 130.838 91.2021 132.044 cv
93.8193 133.227 98.1587 136.842 98.2969 138.279 cv
cp
.0235294 .658824 .6 rgb
f
107.567 215.326 mo
108.493 215.976 109.235 216.111 109.235 216.111 cv
109.04 215.985 108.451 215.711 107.567 215.326 cv
cp
.745098 .909804 .862745 rgb
f
141.163 179.907 mo
134.269 200.077 129.095 211.285 119.44 216.111 cv
111.873 219.897 108.25 217.234 106.572 214.909 cv
106.937 215.06 107.267 215.198 107.567 215.326 cv
108.496 215.976 109.238 216.111 109.238 216.111 cv
109.04 215.987 108.451 215.711 107.567 215.326 cv
106.937 214.895 106.221 214.217 105.59 213.193 cv
105.368 212.703 105.028 212.096 104.692 211.252 cv
104.448 210.647 104.205 209.923 104.012 209.022 cv
103.319 205.855 103.198 200.573 105.59 191.112 cv
109.614 175.252 115.302 164.738 119.094 158.014 cv
120.167 156.116 121.634 154.385 123.337 152.915 cv
123.34 152.915 li
127.652 149.187 133.435 147.173 137.891 148.535 cv
142.167 149.844 148.057 159.734 141.163 179.907 cv
cp
.333333 .827451 .72549 rgb
f
105.593 213.193 mo
105.8 213.647 106.113 214.263 106.576 214.909 cv
106.937 215.062 107.27 215.2 107.567 215.326 cv
106.937 214.895 106.224 214.217 105.593 213.193 cv
cp
.745098 .909804 .862745 rgb
f
101.411 220.724 mo
100.048 221.436 112.817 243.661 114.362 247.36 cv
115.9 251.06 116.826 252.291 120.988 251.368 cv
125.149 250.443 153.204 239.346 154.899 238.419 cv
156.594 237.494 152.432 233.179 146.112 228.708 cv
139.792 224.236 130.303 216.616 128.344 216.111 cv
126.381 215.606 103.417 219.681 101.411 220.724 cv
cp
.0235294 .658824 .6 rgb
f
146.849 169.176 mo
143.96 169.927 140.562 182.41 137.887 189.105 cv
135.213 195.803 132.638 202.002 132.112 204.509 cv
131.583 207.015 130.64 208.28 135.204 210.308 cv
139.766 212.333 161.567 222.644 163.595 223.489 cv
165.624 224.333 167.988 226.917 170.354 220.724 cv
172.722 214.53 183.365 187.702 184.549 184.472 cv
185.733 181.241 189.11 174.612 184.549 173.872 cv
179.984 173.131 149.968 168.367 146.849 169.176 cv
cp
f
125.909 147.275 mo
124.389 146.43 137.569 121.756 139.429 120.067 cv
141.286 118.377 174.41 115.689 175.255 116.186 cv
176.099 116.687 159.033 142.206 157.17 143.219 cv
155.313 144.232 125.909 147.275 125.909 147.275 cv
cp
f
44.1187 402.018 mo
44.1187 397.682 li
102.08 397.682 li
102.08 402.018 li
44.1187 402.018 li
cp
.745098 .909804 .862745 rgb
f
135.511 165.953 mo
133.918 177.085 127.986 191.72 123.95 199.989 cv
119.92 208.259 114.849 212.04 110.217 212.616 cv
108.141 212.877 105.794 211.558 104.012 209.022 cv
103.667 207.436 103.459 205.32 103.646 202.417 cv
103.826 199.524 104.391 195.839 105.59 191.112 cv
109.349 176.295 114.566 166.146 118.319 159.39 cv
118.586 158.914 118.845 158.458 119.094 158.014 cv
120.167 156.116 121.634 154.385 123.337 152.915 cv
123.34 152.915 li
128.512 150.701 137.104 154.825 135.511 165.953 cv
cp
.67451 .917647 .866667 rgb
f
119.918 189.79 mo
116.186 197.288 111.907 202.339 109.238 203.932 cv
106.903 205.317 104.887 204.412 103.646 202.417 cv
103.826 199.524 104.391 195.839 105.59 191.112 cv
109.349 176.295 114.566 166.146 118.319 159.39 cv
120.744 157.799 125.167 158.055 126.574 162.572 cv
127.809 166.529 125.248 179.066 119.918 189.79 cv
cp
.129412 .223529 .286275 rgb
f
65.2417 402.018 mo
65.2417 394.977 li
71.4941 394.977 li
71.6636 389.063 li
77.5776 389.063 li
77.5776 394.469 li
83.4941 394.469 li
83.4941 402.018 li
65.2417 402.018 li
cp
.0235294 .658824 .6 rgb
f
46.3394 192.134 mo
46.1929 192.134 46.0464 192.177 45.917 192.257 cv
45.686 192.405 45.5503 192.654 45.5503 192.928 cv
45.5503 199.241 li
45.5503 199.737 45.8242 200.188 46.2656 200.413 cv
59.9624 207.427 li
60.2554 207.577 60.5962 207.562 60.8755 207.39 cv
61.1558 207.223 61.3232 206.922 61.3232 206.598 cv
61.3232 199.929 li
61.3232 199.439 61.0376 198.989 60.5938 198.781 cv
46.6772 192.209 li
46.5703 192.161 46.4536 192.134 46.3394 192.134 cv
cp
60.3887 207.92 mo
60.1846 207.92 59.9771 207.872 59.7852 207.772 cv
46.0884 200.759 li
45.5142 200.467 45.1631 199.884 45.1631 199.241 cv
45.1631 192.928 li
45.1631 192.521 45.3667 192.149 45.71 191.93 cv
46.0522 191.714 46.4751 191.686 46.8423 191.86 cv
60.7588 198.43 li
61.3374 198.703 61.71 199.289 61.71 199.929 cv
61.71 206.598 li
61.71 207.057 61.4756 207.48 61.0776 207.721 cv
60.8652 207.85 60.6299 207.92 60.3887 207.92 cv
cp
.0941176 .117647 .137255 rgb
f
65.3892 200.636 mo
65.2295 200.636 65.0737 200.687 64.9331 200.776 cv
64.6919 200.933 64.5566 201.188 64.5566 201.474 cv
64.5566 208.431 li
64.5566 208.986 64.8877 209.473 65.3984 209.677 cv
79.1797 215.161 li
79.5605 215.314 79.9727 215.27 80.312 215.038 cv
80.6519 214.81 80.8467 214.443 80.8467 214.028 cv
80.8467 208.058 li
80.8467 207.583 80.5649 207.153 80.1255 206.961 cv
65.7256 200.707 li
65.6138 200.663 65.5005 200.636 65.3892 200.636 cv
cp
79.6304 215.636 mo
79.4292 215.636 79.2271 215.6 79.0352 215.522 cv
65.2573 210.038 li
64.5962 209.776 64.168 209.146 64.168 208.431 cv
64.168 201.474 li
64.168 201.062 64.374 200.68 64.7188 200.452 cv
65.0645 200.224 65.5005 200.19 65.8789 200.355 cv
80.2822 206.606 li
80.8618 206.855 81.2344 207.427 81.2344 208.058 cv
81.2344 214.028 li
81.2344 214.563 80.9702 215.062 80.5288 215.36 cv
80.2607 215.543 79.9453 215.636 79.6304 215.636 cv
cp
f
118.319 159.584 mo
118.223 159.557 li
118.13 159.506 118.097 159.386 118.15 159.293 cv
120.961 154.458 125.982 148.565 133.963 147.95 cv
137.428 147.684 143.375 148.788 144.273 159.172 cv
144.294 159.371 li
144.304 159.476 144.226 159.572 144.12 159.584 cv
144.015 159.596 143.918 159.518 143.907 159.412 cv
143.888 159.207 li
143.516 154.892 141.731 147.742 133.993 148.337 cv
129.681 148.67 123.487 150.873 118.487 159.488 cv
118.319 159.584 li
cp
f
113.779 218.142 mo
113.403 218.142 113.048 218.125 112.718 218.094 cv
110.202 217.845 107.853 216.703 106.429 215.035 cv
104.003 212.192 103.913 210.54 103.574 204.395 cv
103.541 203.806 li
103.3 199.488 104.656 192.69 107.564 183.6 cv
107.621 183.426 li
107.651 183.324 107.763 183.27 107.865 183.302 cv
107.967 183.335 108.024 183.444 107.991 183.546 cv
107.934 183.718 li
105.037 192.763 103.69 199.515 103.925 203.782 cv
103.961 204.373 li
104.295 210.417 104.385 212.04 106.723 214.783 cv
109.214 217.701 115.471 219.467 120.738 215.176 cv
121.012 215.207 li
120.985 215.48 li
118.376 217.598 115.765 218.142 113.779 218.142 cv
cp
f
121.381 212.844 mo
121.23 212.775 li
121.252 212.505 li
121.369 212.403 121.516 212.28 121.688 212.136 cv
123.729 210.449 129.934 205.308 135.523 191.623 cv
141.632 176.669 142.9 163.387 142.263 158.526 cv
141.836 155.264 139.946 152.036 137.668 150.674 cv
136.409 149.923 135.092 149.776 133.861 150.244 cv
133.762 150.284 133.651 150.229 133.612 150.134 cv
133.573 150.035 133.624 149.92 133.723 149.881 cv
135.069 149.367 136.502 149.529 137.867 150.341 cv
140.24 151.759 142.206 155.105 142.647 158.477 cv
143.291 163.376 142.02 176.746 135.883 191.768 cv
130.258 205.542 123.996 210.732 121.935 212.436 cv
121.766 212.58 121.622 212.698 121.507 212.796 cv
121.381 212.844 li
cp
f
137.843 251.852 mo
137.668 251.748 li
123.776 223.524 li
123.731 223.428 123.771 223.311 123.867 223.266 cv
123.962 223.215 124.08 223.257 124.125 223.354 cv
138.017 251.576 li
138.062 251.672 138.022 251.787 137.927 251.834 cv
137.843 251.852 li
cp
f
164.178 234.213 mo
164.073 234.186 li
138.344 218.176 li
138.281 217.908 li
138.339 217.815 138.458 217.788 138.549 217.845 cv
164.277 233.856 li
164.37 233.913 164.397 234.026 164.341 234.12 cv
164.178 234.213 li
cp
f
186.157 201.263 mo
186.087 201.251 li
177.297 197.847 163.971 192.768 163.286 192.729 cv
163.181 192.756 163.091 192.69 163.066 192.584 cv
163.04 192.482 163.12 192.375 163.226 192.351 cv
163.247 192.347 li
164.076 192.347 179.554 198.304 186.226 200.891 cv
186.325 200.93 186.376 201.038 186.34 201.14 cv
186.157 201.263 li
cp
f
193.786 233.326 mo
193.706 233.312 li
193.152 233.06 180.12 227.1 179.606 226.845 cv
179.51 226.797 179.471 226.679 179.519 226.586 cv
179.566 226.487 179.684 226.448 179.781 226.497 cv
180.288 226.751 193.729 232.897 193.868 232.96 cv
193.963 233.002 194.006 233.116 193.96 233.215 cv
193.786 233.326 li
cp
.878431 .988235 .960784 rgb
f
151.314 163.563 mo
151.211 163.563 151.124 163.482 151.119 163.379 cv
151.113 163.274 151.191 163.181 151.298 163.172 cv
180.457 161.27 li
180.556 161.258 180.655 161.342 180.663 161.449 cv
180.67 161.555 180.588 161.649 180.48 161.657 cv
151.326 163.56 li
151.314 163.563 li
cp
.0941176 .117647 .137255 rgb
f
142.606 149.418 mo
142.422 149.292 li
142.275 148.906 145.006 143.301 147.323 138.666 cv
147.372 138.572 147.488 138.532 147.585 138.583 cv
147.68 138.63 147.72 138.745 147.672 138.84 cv
145.812 142.555 142.861 148.622 142.795 149.193 cv
142.671 149.403 li
142.606 149.418 li
cp
f
84.4556 219.5 mo
84.3506 219.5 84.2607 219.414 84.2607 219.305 cv
84.2607 205.984 li
84.2607 205.874 84.3506 205.789 84.4556 205.789 cv
84.564 205.789 84.6514 205.874 84.6514 205.984 cv
84.6514 219.305 li
84.6514 219.414 84.564 219.5 84.4556 219.5 cv
cp
f
100.118 212.466 mo
100.043 212.454 li
87.9512 207.604 li
59.7368 195.163 li
40.6157 185.857 li
40.5205 185.812 40.4795 185.694 40.5259 185.602 cv
40.5742 185.502 40.688 185.46 40.7866 185.508 cv
59.8989 194.812 li
88.1011 207.247 li
100.19 212.093 li
100.29 212.132 100.338 212.244 100.298 212.345 cv
100.118 212.466 li
cp
f
65.2417 158.181 mo
67.3789 158.502 li
67.3789 158.502 57.2065 163.389 57.2065 165.27 cv
57.2065 167.151 63.9287 172.839 80.1348 163.788 cv
83.4941 164.658 li
83.4941 164.658 75.6904 169.651 65.2417 171.16 cv
54.7939 172.668 52.7241 165.643 58.0688 161.829 cv
63.4131 158.014 65.2417 158.181 65.2417 158.181 cv
cp
.0235294 .658824 .6 rgb
f
83.4941 164.852 mo
83.4282 164.839 li
65.1787 158.364 li
65.0737 158.328 65.0229 158.217 65.0591 158.116 cv
65.0933 158.015 65.2095 157.961 65.3086 157.998 cv
83.5581 164.476 li
83.6563 164.511 83.7109 164.624 83.6777 164.723 cv
83.4941 164.852 li
cp
.0941176 .117647 .137255 rgb
f
74.8096 160.555 mo
73.9263 160.477 73.0361 161.3 73.5161 162.604 cv
73.9956 163.906 78.04 169.394 79.0015 168.707 cv
79.7686 168.157 77.5117 164.63 76.5771 163.238 cv
75.5161 162.904 74.8096 160.555 74.8096 160.555 cv
cp
.866667 .32549 .368627 rgb
f
96.5874 77.0391 mo
96.3711 76.9111 96.2988 76.6348 96.4248 76.4185 cv
96.5483 76.2036 96.8247 76.1304 97.0405 76.2524 cv
97.2573 76.3794 97.3325 76.6558 97.2065 76.8721 cv
97.083 77.0869 96.8032 77.1631 96.5874 77.0391 cv
cp
.0941176 .117647 .137255 rgb
f
100.995 78.4976 mo
100.75 78.478 100.563 78.2593 100.581 78.0107 cv
100.602 77.7612 100.818 77.5747 101.067 77.5952 cv
101.317 77.6177 101.503 77.8335 101.486 78.082 cv
101.464 78.3315 101.245 78.5186 100.995 78.4976 cv
cp
f
49.6221 404.434 mo
49.6221 406.576 47.8853 408.313 45.7427 408.313 cv
43.6006 408.313 41.8647 406.576 41.8647 404.434 cv
41.8647 402.287 43.6006 400.555 45.7427 400.555 cv
47.8853 400.555 49.6221 402.287 49.6221 404.434 cv
cp
.333333 .827451 .72549 rgb
f
78.3257 404.434 mo
78.3257 406.576 76.5889 408.313 74.4463 408.313 cv
72.3032 408.313 70.5693 406.576 70.5693 404.434 cv
70.5693 402.287 72.3032 400.555 74.4463 400.555 cv
76.5889 400.555 78.3257 402.287 78.3257 404.434 cv
cp
f
107.029 404.434 mo
107.029 406.576 105.293 408.313 103.15 408.313 cv
101.01 408.313 99.2705 406.576 99.2705 404.434 cv
99.2705 402.287 101.01 400.555 103.15 400.555 cv
105.293 400.555 107.029 402.287 107.029 404.434 cv
cp
f
635.305 407.311 mo
22.6958 407.311 li
22.4199 407.311 22.1958 407.087 22.1958 406.811 cv
22.1958 406.534 22.4199 406.311 22.6958 406.311 cv
635.305 406.311 li
635.581 406.311 635.805 406.534 635.805 406.811 cv
635.805 407.087 635.581 407.311 635.305 407.311 cv
cp
.129412 .223529 .286275 rgb
f
611.07 123.75 mo
611.07 123.75 610.738 123.848 610.137 124.025 cv
610.443 123.957 610.754 123.871 611.07 123.75 cv
cp
.0235294 .658824 .6 rgb
f
608.82 93.5 mo
603.07 80.5 594.029 65.769 588.006 67.75 cv
582.584 69.5327 584.82 81.5 591.07 96.25 cv
597.088 110.451 602.18 125.803 610.137 124.025 cv
610.738 123.848 611.07 123.75 611.07 123.75 cv
619.57 120.5 614.57 106.5 608.82 93.5 cv
cp
.129412 .223529 .286275 rgb
f
531.07 122.75 mo
521.82 105.75 519.729 91.3423 524.07 89.5 cv
519.32 90.5 518.57 93.5 518.57 93.5 cv
518.57 93.5 518.07 107 526.57 123 cv
535.07 139 542.57 144 544.07 143.5 cv
545.57 143 550.529 141.012 550.533 141.01 cv
549.855 141.165 549.4 141.25 549.221 141.25 cv
546.621 141.25 540.32 139.75 531.07 122.75 cv
cp
.67451 .917647 .866667 rgb
f
591.07 96.25 mo
584.82 81.5 582.584 69.5327 588.006 67.75 cv
588.006 67.75 532.32 86 524.07 89.5 cv
519.729 91.3423 521.82 105.75 531.07 122.75 cv
540.32 139.75 546.621 141.25 549.221 141.25 cv
549.4 141.25 549.855 141.165 550.533 141.01 cv
558.971 139.089 603.164 126.082 610.137 124.025 cv
602.18 125.803 597.088 110.451 591.07 96.25 cv
cp
.333333 .827451 .72549 rgb
f
573.801 149.632 mo
570.701 149.632 567.734 149.603 565.127 149.549 cv
560.549 149.455 557.174 148.116 555.092 145.568 cv
552.076 141.877 552.912 137.047 552.949 136.843 cv
552.941 108.667 li
552.941 108.39 553.166 108.167 553.441 108.167 cv
553.719 108.167 553.941 108.39 553.941 108.667 cv
553.941 136.933 li
553.926 137.068 553.146 141.615 555.871 144.943 cv
557.76 147.249 560.881 148.462 565.148 148.549 cv
579.754 148.852 597.994 148.403 601.986 147.159 cv
605.1 146.19 603.648 137.96 602.367 130.699 cv
602.113 129.258 601.859 127.829 601.641 126.457 cv
601.598 126.184 601.783 125.928 602.057 125.884 cv
602.332 125.837 602.584 126.026 602.629 126.299 cv
602.848 127.666 603.098 129.09 603.352 130.525 cv
604.836 138.938 606.238 146.883 602.283 148.114 cv
598.725 149.223 585.34 149.632 573.801 149.632 cv
cp
.129412 .223529 .286275 rgb
f
593.701 84 mo
590.844 86.1543 600.5 109.984 606.654 106.641 cv
612.809 103.297 599.4 79.7046 593.701 84 cv
cp
1 .321569 .368627 rgb
f
541.672 96.3682 mo
541.467 96.3682 541.275 96.2412 541.201 96.0371 cv
541.109 95.7769 541.244 95.4907 541.504 95.3975 cv
576.049 83.0088 li
576.311 82.916 576.596 83.0518 576.689 83.3105 cv
576.781 83.5708 576.646 83.8569 576.387 83.9502 cv
541.842 96.3389 li
541.672 96.3682 li
cp
.129412 .223529 .286275 rgb
f
558.945 127.499 mo
558.729 127.499 558.527 127.355 558.465 127.136 cv
558.389 126.87 558.543 126.594 558.809 126.518 cv
595.678 116.036 li
595.945 115.957 596.219 116.115 596.295 116.38 cv
596.371 116.646 596.217 116.922 595.951 116.998 cv
559.082 127.48 li
558.945 127.499 li
cp
f
556.428 114.167 mo
556.221 114.167 556.027 114.037 555.955 113.831 cv
555.865 113.57 556.004 113.285 556.264 113.194 cv
575.514 106.489 li
575.771 106.397 576.061 106.536 576.15 106.797 cv
576.242 107.058 576.104 107.343 575.842 107.434 cv
556.592 114.139 li
556.428 114.167 li
cp
f
543.07 402.961 mo
542.957 402.961 542.842 402.923 542.748 402.844 cv
542.537 402.666 542.51 402.351 542.688 402.139 cv
582.781 354.516 li
582.781 149.041 li
582.781 148.765 583.006 148.541 583.281 148.541 cv
583.559 148.541 583.781 148.765 583.781 149.041 cv
583.781 354.698 li
583.781 354.816 583.74 354.93 583.664 355.021 cv
543.453 402.783 li
543.354 402.9 543.213 402.961 543.07 402.961 cv
cp
f
569.893 402.961 mo
569.758 402.942 li
569.492 402.868 569.338 402.592 569.412 402.326 cv
582.801 354.563 li
582.852 354.379 583.006 354.24 583.193 354.206 cv
583.381 354.175 583.574 354.249 583.688 354.405 cv
618.299 402.168 li
618.461 402.392 618.41 402.704 618.186 402.866 cv
617.965 403.025 617.652 402.98 617.488 402.754 cv
583.484 355.829 li
570.375 402.596 li
570.313 402.816 570.111 402.961 569.893 402.961 cv
cp
f
547.258 402.461 mo
547.258 404.741 545.383 406.59 543.07 406.59 cv
540.758 406.59 538.883 404.741 538.883 402.461 cv
538.883 400.182 540.758 398.333 543.07 398.333 cv
545.383 398.333 547.258 400.182 547.258 402.461 cv
cp
f
574.08 402.461 mo
574.08 404.741 572.205 406.59 569.893 406.59 cv
567.58 406.59 565.705 404.741 565.705 402.461 cv
565.705 400.182 567.58 398.333 569.893 398.333 cv
572.205 398.333 574.08 400.182 574.08 402.461 cv
cp
f
622.08 402.461 mo
622.08 404.741 620.205 406.59 617.895 406.59 cv
615.582 406.59 613.707 404.741 613.707 402.461 cv
613.707 400.182 615.582 398.333 617.895 398.333 cv
620.205 398.333 622.08 400.182 622.08 402.461 cv
cp
f
556.32 106.961 mo
556.32 108.618 554.979 109.961 553.32 109.961 cv
551.664 109.961 550.32 108.618 550.32 106.961 cv
550.32 105.305 551.664 103.961 553.32 103.961 cv
554.979 103.961 556.32 105.305 556.32 106.961 cv
cp
f
533.969 23 mo
121.672 23 li
121.396 23 121.172 22.7764 121.172 22.5 cv
121.172 22.2236 121.396 22 121.672 22 cv
533.969 22 li
534.246 22 534.469 22.2236 534.469 22.5 cv
534.469 22.7764 534.246 23 533.969 23 cv
cp
f
260.127 47.1299 mo
259.903 47.1299 259.699 46.9775 259.642 46.75 cv
253.739 22.9165 li
253.672 22.6484 253.836 22.3774 254.104 22.311 cv
254.367 22.2456 254.642 22.4077 254.709 22.6763 cv
260.613 46.5098 li
260.679 46.7778 260.516 47.0488 260.248 47.1152 cv
260.127 47.1299 li
cp
f
362.5 39.8335 mo
362.264 39.8335 362.053 39.665 362.008 39.4238 cv
358.914 22.5903 li
358.865 22.3188 359.045 22.0581 359.316 22.0083 cv
359.59 21.9546 359.848 22.1372 359.898 22.4097 cv
362.992 39.2432 li
363.043 39.5146 362.863 39.7754 362.592 39.8252 cv
362.5 39.8335 li
cp
f
476.09 36.7573 mo
475.92 36.7275 li
475.66 36.6333 475.525 36.3467 475.621 36.0869 cv
480.604 22.3296 li
480.697 22.0703 480.988 21.9385 481.244 22.0298 cv
481.504 22.124 481.639 22.4106 481.543 22.6704 cv
476.561 36.4277 li
476.486 36.6309 476.295 36.7573 476.09 36.7573 cv
cp
f
337.406 70.9414 mo
335.74 37.6665 li
389.26 41 li
389.26 74.8394 li
337.406 70.9414 li
cp
1 1 1 rgb
f
461.74 45 mo
495.406 39.3335 li
499.125 52.3335 li
461.74 56.2529 li
461.74 45 li
cp
.67451 .917647 .866667 rgb
f
461.74 45 mo
449.439 37.6665 li
502.74 28.4585 li
495.406 39.3335 li
461.74 45 li
cp
.0235294 .658824 .6 rgb
f
461.74 56.2529 mo
499.125 52.3335 li
507.887 61.3335 li
456.781 67.3335 li
461.74 56.2529 li
cp
f
461.74 56.2529 mo
461.74 45 li
449.439 36.7295 li
456.781 67.3335 li
461.74 56.2529 li
cp
.333333 .827451 .72549 rgb
f
496.74 52.0313 mo
507.887 61.3335 li
502.74 28.4585 li
495.406 39.3335 li
496.74 52.0313 li
cp
f
244.792 50.0518 mo
234.27 43.7988 li
291.877 38.6948 li
283.543 48.1323 li
244.792 50.0518 li
cp
f
244.792 50.0518 mo
247.244 61.1323 li
285.989 58.7988 li
283.543 48.1323 li
244.792 50.0518 li
cp
1 1 1 rgb
f
247.244 61.1323 mo
241.539 68.0396 li
290.135 64.5859 li
285.989 58.7988 li
247.244 61.1323 li
cp
.333333 .827451 .72549 rgb
f
244.792 50.0518 mo
234.27 43.7988 li
241.539 68.0396 li
247.244 61.1323 li
244.792 50.0518 li
cp
.0235294 .658824 .6 rgb
f
283.543 48.1323 mo
291.877 38.6948 li
290.135 64.5859 li
285.989 58.7988 li
283.543 48.1323 li
cp
f
160.384 31.1948 mo
160.207 31.1948 160.035 31.1001 159.944 30.9326 cv
155.669 23.0342 li
155.539 22.7915 155.628 22.4883 155.872 22.3564 cv
156.116 22.2261 156.417 22.3159 156.549 22.5586 cv
160.824 30.457 li
160.955 30.6997 160.865 31.0029 160.622 31.1348 cv
160.384 31.1948 li
cp
.129412 .223529 .286275 rgb
f
184.458 45.8613 mo
166.017 26.9448 li
152.931 33.9448 li
170.699 57.3696 li
184.458 45.8613 li
cp
f
185.882 45.8613 mo
198.711 55.7808 li
198.711 55.7808 179.044 64.8613 178.549 64.5278 cv
178.053 64.1943 170.699 57.3696 170.699 57.3696 cv
185.882 45.8613 li
cp
1 1 1 rgb
f
185.882 45.8613 mo
192.305 40.8613 li
207.872 50.1021 li
198.711 55.7808 li
185.882 45.8613 li
cp
.0235294 .658824 .6 rgb
f
170.699 57.3696 mo
162.849 59.3613 li
167.413 69.1479 li
178.549 64.5278 li
170.699 57.3696 li
cp
f
198.711 55.7808 mo
201.244 64.2544 li
178.355 70.9414 li
178.549 64.5278 li
198.711 55.7808 li
cp
.333333 .827451 .72549 rgb
f
185.882 45.8613 mo
182.622 36.2573 li
161.237 50.1021 li
170.699 57.3696 li
185.882 45.8613 li
cp
f
393.406 65.5088 mo
389.26 65.5088 li
388.984 65.5088 388.76 65.2852 388.76 65.0088 cv
388.76 64.7324 388.984 64.5088 389.26 64.5088 cv
392.906 64.5088 li
392.906 34.9014 li
328.963 32.8516 li
332.191 64.2173 li
337.564 64.1055 337.564 64.1221 337.596 64.7002 cv
337.609 64.9761 337.398 65.2114 337.123 65.2261 cv
336.934 65.1997 li
336.488 65.1558 333.975 65.1792 331.752 65.2266 cv
331.74 65.2266 li
331.484 65.2266 331.27 65.0332 331.244 64.7778 cv
327.91 32.3848 li
327.895 32.2412 327.943 32.0981 328.041 31.9927 cv
328.139 31.8872 328.275 31.8125 328.422 31.834 cv
393.422 33.9175 li
393.693 33.9258 393.906 34.147 393.906 34.417 cv
393.906 65.0088 li
393.906 65.2852 393.684 65.5088 393.406 65.5088 cv
cp
.129412 .223529 .286275 rgb
f
389.26 58.3418 mo
388.984 58.3418 388.76 58.1182 388.76 57.8418 cv
388.76 41.4697 li
335.709 38.1655 li
335.434 38.1484 335.225 37.9111 335.242 37.6353 cv
335.258 37.3608 335.465 37.1523 335.771 37.1675 cv
389.291 40.501 li
389.555 40.5176 389.76 40.7358 389.76 41 cv
389.76 57.8418 li
389.76 58.1182 389.537 58.3418 389.26 58.3418 cv
cp
f
461.74 45.5 mo
461.479 45.4268 li
449.395 38.0562 li
449.16 37.9126 449.086 37.605 449.229 37.3691 cv
449.373 37.1323 449.68 37.0596 449.916 37.2026 cv
462 44.5732 li
462.236 44.7168 462.311 45.0244 462.166 45.2603 cv
462.072 45.415 461.908 45.5 461.74 45.5 cv
cp
f
495.406 39.8335 mo
495.311 39.8335 495.213 39.8057 495.127 39.748 cv
494.898 39.5938 494.838 39.2827 494.992 39.0542 cv
502.324 28.1792 li
502.48 27.9497 502.791 27.8911 503.02 28.0439 cv
503.248 28.1982 503.309 28.5093 503.154 28.7378 cv
495.822 39.6128 li
495.725 39.7563 495.566 39.8335 495.406 39.8335 cv
cp
f
507.887 61.8335 mo
507.773 61.8335 507.66 61.7954 507.566 61.7173 cv
496.42 52.415 li
496.207 52.2383 496.18 51.9229 496.355 51.7109 cv
496.533 51.498 496.848 51.4717 497.061 51.6475 cv
508.207 60.9497 li
508.42 61.1265 508.447 61.4419 508.271 61.6538 cv
508.172 61.7725 508.029 61.8335 507.887 61.8335 cv
cp
f
456.781 67.8335 mo
456.576 67.79 li
456.324 67.6772 456.211 67.3813 456.324 67.1294 cv
461.283 56.0488 li
461.396 55.7954 461.693 55.686 461.943 55.7964 cv
462.195 55.9092 462.309 56.2051 462.195 56.457 cv
457.236 67.5376 li
457.154 67.7236 456.971 67.8335 456.781 67.8335 cv
cp
f
484.039 101.905 mo
483.775 101.905 483.555 101.7 483.541 101.434 cv
483.525 101.158 483.736 100.922 484.012 100.906 cv
510.205 99.4253 li
510.512 99.418 510.717 99.6211 510.732 99.896 cv
510.748 100.172 510.537 100.408 510.262 100.423 cv
484.068 101.904 li
484.039 101.905 li
cp
f
512.801 154.422 mo
512.656 154.422 512.514 154.36 512.414 154.239 cv
512.24 154.026 512.27 153.711 512.484 153.536 cv
529.504 139.547 li
529.717 139.372 530.031 139.401 530.207 139.616 cv
530.383 139.829 530.352 140.144 530.139 140.319 cv
513.119 154.308 li
513.025 154.385 512.914 154.422 512.801 154.422 cv
cp
f
484.039 124.25 mo
483.799 124.25 483.586 124.076 483.547 123.832 cv
483.502 123.559 483.686 123.302 483.959 123.257 cv
503.906 119.969 li
504.174 119.922 504.436 120.108 504.48 120.38 cv
504.525 120.653 504.34 120.91 504.068 120.955 cv
484.121 124.243 li
484.039 124.25 li
cp
f
427.057 401.868 mo
427.057 401.868 li
426.781 401.868 426.557 401.644 426.557 401.368 cv
426.654 227.625 li
297.922 180.993 li
297.663 180.898 297.528 180.612 297.622 180.352 cv
297.716 180.093 298.004 179.957 298.263 180.052 cv
427.324 226.804 li
427.523 226.876 427.654 227.064 427.654 227.275 cv
427.557 401.368 li
427.557 401.645 427.334 401.868 427.057 401.868 cv
cp
f
406.514 406.368 mo
406.314 406.327 li
406.063 406.217 405.945 405.922 406.055 405.669 cv
426.695 358.169 li
426.773 357.991 426.947 357.874 427.141 357.868 cv
427.33 357.86 427.514 357.969 427.602 358.143 cv
451.639 405.643 li
451.764 405.889 451.664 406.189 451.418 406.314 cv
451.17 406.437 450.869 406.34 450.746 406.094 cv
427.189 359.544 li
406.973 406.067 li
406.891 406.256 406.707 406.368 406.514 406.368 cv
cp
f
427.057 401.868 mo
426.945 401.868 426.832 401.831 426.738 401.754 cv
413.053 390.475 li
412.84 390.299 412.809 389.984 412.984 389.771 cv
413.16 389.558 413.475 389.527 413.689 389.703 cv
426.994 400.669 li
440.363 384.899 li
440.543 384.688 440.859 384.664 441.068 384.841 cv
441.279 385.02 441.305 385.335 441.127 385.546 cv
427.439 401.691 li
427.34 401.808 427.199 401.868 427.057 401.868 cv
cp
f
427.064 227.296 mo
426.857 227.162 li
424.113 221.073 413.416 210.507 404.27 208.388 cv
397.98 206.934 390.936 207.722 387.133 210.304 cv
385.744 211.251 384.92 212.367 384.74 213.535 cv
384.441 215.542 383.494 217.062 382.01 217.93 cv
380.162 219.014 377.586 219.019 374.748 217.949 cv
369.721 216.044 367.369 209.757 364.549 198.056 cv
363.215 192.527 358.416 182.291 348.893 178.993 cv
339.76 175.832 331.617 175.429 324.684 177.788 cv
319.513 179.548 316.822 181.499 314.861 182.923 cv
313.222 184.109 312.141 184.892 310.615 184.844 cv
309.46 184.807 308.738 184.537 308.338 183.986 cv
307.625 183.015 308.103 181.335 308.766 179.015 cv
308.826 178.801 li
309.812 175.352 310.745 172.089 308.861 170.395 cv
308.31 169.896 307.601 169.759 306.766 169.981 cv
305.356 170.357 304.083 171.622 304.001 171.867 cv
304.001 171.992 303.904 172.078 303.777 172.078 cv
303.651 172.078 303.552 171.962 303.552 171.836 cv
303.552 171.429 304.763 170.322 305.956 169.791 cv
307.229 169.226 308.338 169.317 309.163 170.059 cv
311.261 171.943 310.289 175.334 309.264 178.925 cv
309.205 179.138 li
308.577 181.335 308.121 182.923 308.703 183.72 cv
309.008 184.141 309.636 184.361 310.629 184.394 cv
312.008 184.43 313.033 183.688 314.594 182.555 cv
316.58 181.116 319.302 179.141 324.537 177.358 cv
331.568 174.966 339.811 175.371 349.041 178.565 cv
353.609 180.149 362.107 186.011 364.986 197.95 cv
367.773 209.497 370.068 215.694 374.912 217.526 cv
377.611 218.545 380.053 218.553 381.783 217.54 cv
383.145 216.74 384.014 215.333 384.295 213.469 cv
384.488 212.174 385.383 210.949 386.877 209.932 cv
390.838 207.239 397.869 206.44 404.371 207.949 cv
413.98 210.172 424.52 220.877 427.271 226.977 cv
427.32 227.092 427.271 227.226 427.154 227.274 cv
427.064 227.296 li
cp
.0941176 .117647 .137255 rgb
f
303.777 171.836 mo
300.156 168.817 291.602 180.793 291.602 180.793 cv
291.602 180.793 295.122 181.396 297.64 184.617 cv
297.64 184.617 307.401 174.855 303.777 171.836 cv
cp
.67451 .917647 .866667 rgb
f
297.64 184.617 mo
295.122 181.396 291.602 180.793 291.602 180.793 cv
289.122 183.088 280.789 195.789 279.34 198.01 cv
280.845 196.241 286.07 198.567 283.951 201.122 cv
297.64 184.617 li
cp
.0235294 .658824 .6 rgb
f
279.119 198.347 mo
279.119 198.347 279.2 198.228 279.34 198.01 cv
279.255 198.111 279.182 198.221 279.119 198.347 cv
cp
.745098 .909804 .862745 rgb
f
279.34 198.01 mo
279.2 198.228 279.119 198.347 279.119 198.347 cv
278.561 199.547 281.715 203.823 283.951 201.122 cv
286.07 198.567 280.845 196.241 279.34 198.01 cv
cp
.176471 .235294 .290196 rgb
f
271.217 303.843 mo
270.148 297.218 264.411 290.934 263.929 290.414 cv
261.739 290.42 259.219 290.403 257.04 290.334 cv
261.564 294.195 264.285 303.629 263.832 304.309 cv
263.362 305.014 261.092 302.521 259.378 300.735 cv
256.719 297.96 253.405 294.294 247.309 293.765 cv
239.766 293.104 231.314 294.933 228.268 297.396 cv
225.222 299.855 219.772 309.29 216.666 322.884 cv
214.734 331.349 214.85 342.804 214.85 342.804 cv
219.537 342.804 li
219.537 342.804 222.175 332.372 224.636 326.046 cv
227.094 319.718 231.139 313.74 231.139 313.74 cv
231.139 313.74 230.906 318.135 230.848 321.649 cv
230.787 325.166 230.965 332.372 230.965 332.372 cv
230.965 332.372 235.652 332.901 244.379 333.193 cv
253.11 333.488 255.513 332.55 255.513 332.55 cv
254.926 327.628 254.105 308.703 254.105 308.703 cv
254.105 308.703 259.204 312.453 264.006 313.213 cv
268.811 313.976 272.328 310.755 271.217 303.843 cv
cp
.67451 .917647 .866667 rgb
f
219.537 342.804 mo
219.537 342.804 221.531 347.141 221.061 347.373 cv
220.592 347.605 219.537 345.087 219.537 345.087 cv
219.537 345.087 219.961 349.363 219.537 349.48 cv
219.032 349.625 218.365 346.143 218.365 346.143 cv
218.365 346.143 218.377 350.298 217.78 350.303 cv
217.371 350.303 217.017 346.375 217.017 346.375 cv
217.017 346.375 216.623 349.65 216.139 349.6 cv
215.853 349.57 215.743 346.178 215.743 346.178 cv
215.743 346.178 214.745 348.945 214.38 348.776 cv
214.031 348.617 214.498 343.036 214.85 342.804 cv
215.203 342.567 219.537 342.804 219.537 342.804 cv
cp
.972549 .654902 .52549 rgb
f
241.64 278.307 mo
241.188 278.74 240.672 279.109 240.103 279.348 cv
237.467 280.462 235.004 281.049 234.245 282.104 cv
233.484 283.157 233.657 285.516 233.657 285.516 cv
233.657 285.516 233.461 285.119 233.181 284.823 cv
233.001 284.698 232.782 284.575 232.57 284.514 cv
232.189 284.402 231.824 284.493 231.724 285.15 cv
231.49 286.672 233.246 288.898 234.185 288.313 cv
234.185 288.313 235.225 291.927 238.258 292.66 cv
238.762 292.782 239.31 292.832 239.925 292.768 cv
240.195 292.738 240.46 292.676 240.716 292.585 cv
244.574 291.224 246.82 283.258 241.64 278.307 cv
cp
f
232.57 284.514 mo
232.57 284.514 li
cp
.129412 .223529 .286275 rgb
f
242.859 273.021 mo
241.392 271.558 238.051 272.434 236.763 274.019 cv
235.475 275.598 232.544 276.305 231.703 278.236 cv
230.861 280.169 232.57 284.514 232.57 284.514 cv
232.792 284.489 233.002 284.636 233.181 284.823 cv
233.461 285.119 233.657 285.516 233.657 285.516 cv
233.657 285.516 233.484 283.157 234.245 282.104 cv
235.004 281.049 237.467 280.462 240.103 279.348 cv
240.672 279.109 241.188 278.74 241.64 278.307 cv
243.276 276.719 244.008 274.169 242.859 273.021 cv
cp
.0509804 .0941176 .117647 rgb
f
234.772 404.382 mo
234.245 404.998 232.749 406.783 233.454 407.895 cv
234.156 409.008 238.9 405.523 239.429 404.382 cv
234.772 404.382 li
cp
.333333 .827451 .72549 rgb
f
267.727 404.421 mo
267.905 405.17 270.102 406.005 272.3 406.248 cv
274.495 406.489 275.023 405.934 274.759 405.337 cv
274.495 404.733 270.98 403.767 270.98 403.767 cv
267.727 404.421 li
cp
f
270.98 403.767 mo
267.732 404.423 li
265.707 402.439 257.185 381.622 254.191 372.918 cv
251.209 364.215 244.791 344.71 243.995 344.524 cv
243.208 344.355 241.184 362.726 240.923 371.776 cv
240.662 380.827 239.425 404.382 239.425 404.382 cv
238.815 404.471 234.772 404.382 234.772 404.382 cv
233.365 398.229 230.906 376.518 230.96 366.414 cv
231.002 359.846 230.989 347.444 230.977 339.555 cv
230.977 339.064 li
230.966 335.085 230.96 332.372 230.96 332.372 cv
230.96 332.372 232.47 332.536 235.375 332.744 cv
235.508 332.752 235.643 332.764 235.776 332.774 cv
237.457 332.881 239.557 333.002 242.06 333.101 cv
242.175 333.107 242.292 333.118 242.414 333.118 cv
242.414 333.124 li
243.045 333.144 243.7 333.172 244.381 333.191 cv
244.558 333.2 244.727 333.207 244.896 333.207 cv
244.902 333.207 li
245.021 333.213 245.133 333.213 245.255 333.223 cv
247.594 333.277 249.444 333.249 250.885 333.172 cv
251.027 333.165 251.161 333.159 251.285 333.144 cv
254.472 332.952 255.513 332.548 255.513 332.548 cv
255.513 332.548 256.181 335.203 257.172 339.197 cv
257.207 339.339 257.242 339.479 257.277 339.617 cv
259.702 349.414 263.898 366.646 265.004 373.093 cv
266.587 382.326 270.98 403.767 270.98 403.767 cv
cp
1 .321569 .368627 rgb
f
267.999 275.833 mo
267.991 275.838 li
267.999 275.834 li
267.999 275.833 li
cp
f
248.481 286.791 mo
248.196 287.53 248.083 288.996 251.724 288.904 cv
251.422 285.852 li
250.483 285.956 248.696 286.229 248.481 286.791 cv
cp
.0235294 .658824 .6 rgb
f
266.409 281.987 mo
266.409 278.211 266.848 276.64 267.631 276.039 cv
251.352 285.138 li
251.422 285.852 li
251.724 288.904 li
251.819 289.896 li
252.994 290.069 li
253.944 290.199 255.394 290.281 257.04 290.334 cv
259.219 290.403 261.739 290.42 263.929 290.414 cv
266.916 290.407 269.281 290.363 269.281 290.363 cv
266.938 290.25 266.409 287.082 266.409 281.987 cv
cp
1 .321569 .368627 rgb
f
267.631 276.039 mo
267.991 275.838 li
267.863 275.891 267.743 275.95 267.631 276.039 cv
cp
.129412 .223529 .286275 rgb
f
269.279 290.36 mo
267.332 290.271 266.634 288.056 266.459 284.371 cv
266.424 283.632 266.409 282.838 266.409 281.987 cv
266.409 281.913 li
266.415 278.194 266.853 276.632 267.633 276.039 cv
267.991 275.838 li
267.999 275.838 li
268.183 275.766 268.372 275.722 268.575 275.71 cv
271.156 275.532 272.267 279.404 272.441 283.04 cv
272.617 286.672 271.626 290.48 269.279 290.36 cv
cp
.333333 .827451 .72549 rgb
f
266.459 284.371 mo
266.424 283.632 266.409 282.838 266.409 281.987 cv
266.409 281.913 li
267.262 281.6 270.08 280.446 270.748 281.987 cv
271.484 283.701 270.276 284.919 266.459 284.371 cv
cp
.0235294 .658824 .6 rgb
f
258.588 283.919 mo
258.908 283.862 259.212 281.546 258.414 280.901 cv
257.096 279.842 255.043 281.4 254.781 282.72 cv
254.515 284.035 254.631 285.208 255.073 285.119 cv
255.513 285.029 255.687 282.909 255.687 282.909 cv
255.687 282.909 256.02 285.3 256.389 285.128 cv
256.782 284.943 256.935 282.132 256.935 282.132 cv
256.935 282.132 257.094 284.24 257.62 284.24 cv
258.147 284.24 257.972 281.866 257.972 281.866 cv
257.972 281.866 258.237 283.983 258.588 283.919 cv
cp
.972549 .654902 .52549 rgb
f
240.515 296.515 mo
239.418 296.388 238.821 295.057 238.51 293.885 cv
238.385 293.425 238.306 292.99 238.258 292.66 cv
238.763 292.781 239.313 292.831 239.924 292.768 cv
240.2 292.738 240.458 292.676 240.718 292.584 cv
240.882 293.011 241.098 293.66 241.246 294.305 cv
241.507 295.473 241.527 296.632 240.515 296.515 cv
cp
f
241.246 294.305 mo
240.346 294.361 239.285 294.115 238.51 293.885 cv
238.385 293.425 238.306 292.99 238.258 292.66 cv
238.763 292.781 239.313 292.831 239.924 292.768 cv
240.2 292.738 240.458 292.676 240.718 292.584 cv
240.882 293.011 241.098 293.66 241.246 294.305 cv
cp
.929412 .533333 .392157 rgb
f
273.852 280.462 mo
273.7 280.374 li
273.764 280.135 li
275.579 279.08 li
275.819 279.144 li
275.754 279.384 li
273.939 280.438 li
273.852 280.462 li
cp
1 1 1 rgb
f
277.425 283.684 mo
277.408 283.684 li
274.477 283.402 li
274.381 283.393 274.31 283.306 274.319 283.212 cv
274.33 283.112 274.419 283.049 274.513 283.05 cv
277.443 283.333 li
277.538 283.343 277.61 283.429 277.598 283.525 cv
277.589 283.616 277.514 283.684 277.425 283.684 cv
cp
f
276.722 287.554 mo
276.645 287.535 li
274.416 286.421 li
274.339 286.182 li
274.575 286.103 li
276.8 287.223 li
276.88 287.456 li
276.722 287.554 li
cp
f
235.825 283.978 mo
235.706 283.931 li
235.695 283.681 li
235.752 283.623 237.075 282.22 238.741 282.675 cv
238.837 282.698 238.891 282.795 238.865 282.888 cv
238.84 282.982 238.746 283.038 238.649 283.011 cv
237.191 282.615 235.967 283.908 235.955 283.921 cv
235.825 283.978 li
cp
.0509804 .0941176 .117647 rgb
f
233.657 286.997 mo
233.484 286.848 li
233.381 286.213 232.493 285.709 232.484 285.706 cv
232.415 285.464 li
232.653 285.396 li
232.698 285.422 233.702 285.986 233.831 286.792 cv
233.848 286.887 233.781 286.98 233.686 286.994 cv
233.657 286.997 li
cp
f
241.64 287.082 mo
241.477 287.082 241.317 287.052 241.166 286.98 cv
241.084 286.744 li
241.317 286.663 li
241.752 286.868 242.364 286.549 242.623 286.383 cv
242.283 285.765 240.99 283.357 241.071 282.438 cv
241.17 281.321 242.762 281.042 242.827 281.03 cv
242.919 281.014 243.015 281.078 243.029 281.175 cv
243.045 281.271 242.981 281.362 242.884 281.379 cv
242.872 281.382 241.496 281.621 241.421 282.469 cv
241.351 283.242 242.545 285.532 243.01 286.353 cv
242.962 286.579 li
242.928 286.606 242.283 287.082 241.64 287.082 cv
cp
f
240.865 288.909 mo
240.131 288.533 239.107 290.48 239.751 290.775 cv
240.396 291.065 241.802 289.387 240.865 288.909 cv
cp
f
219.537 342.979 mo
219.49 342.973 li
219.397 342.947 219.341 342.852 219.368 342.756 cv
219.398 342.644 222.456 331.339 223.696 328.087 cv
224.918 324.886 228.662 317.327 229.702 315.677 cv
229.943 315.619 li
229.998 315.863 li
228.966 317.508 225.242 325.025 224.026 328.211 cv
222.791 331.45 219.739 342.732 219.709 342.849 cv
219.537 342.979 li
cp
f
265.547 313.511 mo
264.308 313.511 262.892 313.241 261.307 312.7 cv
258.251 311.653 255.062 309.367 253.863 308.508 cv
253.662 308.362 253.488 308.241 253.45 308.217 cv
253.356 308.187 253.315 308.09 253.346 307.999 cv
253.376 307.906 253.483 307.859 253.577 307.893 cv
253.628 307.909 253.692 307.953 254.068 308.224 cv
255.256 309.073 258.416 311.337 261.419 312.367 cv
264.261 313.34 266.528 313.419 268.167 312.607 cv
269.391 312 270.282 310.869 270.812 309.25 cv
270.841 309.158 270.941 309.104 271.035 309.136 cv
271.127 309.165 271.177 309.269 271.148 309.357 cv
270.584 311.07 269.634 312.269 268.322 312.92 cv
267.529 313.317 266.601 313.511 265.547 313.511 cv
cp
f
251.724 289.079 mo
251.636 289.079 251.558 289.016 251.55 288.922 cv
251.213 285.532 li
251.204 285.436 251.276 285.35 251.371 285.341 cv
251.467 285.337 251.556 285.4 251.564 285.497 cv
251.899 288.887 li
251.908 288.983 251.838 289.071 251.741 289.079 cv
251.724 289.079 li
cp
f
263.767 290.675 mo
259.397 290.675 253.982 290.348 253.916 290.345 cv
253.818 290.337 253.745 290.254 253.75 290.16 cv
253.756 290.063 253.845 289.979 253.938 289.992 cv
254.022 289.998 262.707 290.521 266.925 290.24 cv
267.012 290.227 267.104 290.308 267.112 290.403 cv
267.12 290.5 267.046 290.584 266.949 290.592 cv
266.048 290.65 264.945 290.675 263.767 290.675 cv
cp
f
263.832 304.486 mo
263.744 304.46 li
263.681 304.221 li
264.078 303.546 262.21 298.66 260.75 295.594 cv
259.627 293.245 256.97 290.485 256.944 290.457 cv
256.948 290.21 li
257.198 290.214 li
257.308 290.326 259.921 293.041 261.067 295.441 cv
261.792 296.969 264.598 303.357 263.984 304.396 cv
263.832 304.486 li
cp
f
269.847 299.541 mo
269.68 299.421 li
268.462 295.715 263.923 290.667 263.877 290.619 cv
263.89 290.369 li
264.138 290.382 li
264.327 290.592 268.774 295.533 270.011 299.312 cv
270.042 299.404 269.992 299.504 269.899 299.532 cv
269.847 299.541 li
cp
f
267.631 289.64 mo
267.521 289.601 li
266.633 288.873 266.363 286.005 266.235 281.924 cv
266.131 278.669 266.601 277.521 266.981 276.6 cv
267.027 276.49 li
267.062 276.397 267.167 276.357 267.255 276.393 cv
267.344 276.429 267.389 276.531 267.351 276.622 cv
267.306 276.731 li
266.941 277.625 266.483 278.734 266.587 281.91 cv
266.654 284.069 266.797 288.556 267.741 289.327 cv
267.767 289.574 li
267.631 289.64 li
cp
f
266.442 283.02 mo
266.349 283.02 266.272 282.945 266.269 282.852 cv
266.263 282.754 266.336 282.673 266.433 282.667 cv
267.989 282.586 li
268.084 282.579 268.17 282.651 268.172 282.75 cv
268.177 282.847 268.104 282.931 268.009 282.935 cv
266.453 283.02 li
266.442 283.02 li
cp
f
235.776 332.774 mo
234.117 335.493 232.339 338.247 230.977 339.555 cv
230.977 339.064 li
232.444 337.505 234.371 334.402 235.375 332.744 cv
235.508 332.752 235.643 332.764 235.776 332.774 cv
cp
.0235294 .658824 .6 rgb
f
257.277 339.617 mo
254.618 338.614 251.919 334.774 250.885 333.172 cv
251.027 333.165 251.161 333.159 251.285 333.144 cv
252.347 334.747 254.803 338.143 257.172 339.197 cv
257.207 339.339 257.242 339.479 257.277 339.617 cv
cp
f
245.255 333.223 mo
244.791 339.093 li
244.785 339.182 244.707 339.252 244.614 339.252 cv
243.56 339.252 li
243.389 339.128 li
243.173 338.305 242.239 334.774 242.06 333.101 cv
242.175 333.107 242.292 333.118 242.414 333.118 cv
242.414 333.124 li
242.569 334.402 243.208 337.08 243.693 338.901 cv
244.453 338.901 li
244.896 333.207 li
244.902 333.207 li
245.021 333.213 245.133 333.213 245.255 333.223 cv
cp
f
238.553 284.385 mo
238.553 284.659 238.331 284.879 238.057 284.879 cv
237.785 284.879 237.563 284.659 237.563 284.385 cv
237.563 284.113 237.785 283.894 238.057 283.894 cv
238.331 283.894 238.553 284.113 238.553 284.385 cv
cp
.0509804 .0941176 .117647 rgb
f
243.35 282.855 mo
243.35 283.129 243.129 283.351 242.855 283.351 cv
242.584 283.351 242.362 283.129 242.362 282.855 cv
242.362 282.582 242.584 282.36 242.855 282.36 cv
243.129 282.36 243.35 282.582 243.35 282.855 cv
cp
f
543.217 286.221 mo
543.045 286.117 li
542.996 286.023 543.035 285.908 543.133 285.859 cv
551.404 281.757 559.736 276.482 570.631 257.304 cv
581.324 238.487 572.449 210.24 561.254 200.381 cv
550.766 191.149 515.848 191.322 492.738 191.433 cv
490.422 191.442 488.232 191.454 486.213 191.454 cv
481.979 191.454 477.734 191.367 473.629 191.283 cv
456.469 190.932 440.25 190.6 427.504 196.578 cv
411.957 203.866 417.41 231.119 417.467 231.394 cv
417.49 231.499 417.422 231.6 417.318 231.619 cv
417.215 231.643 417.115 231.577 417.094 231.473 cv
417.035 231.196 411.525 203.646 427.342 196.23 cv
440.17 190.212 456.426 190.548 473.637 190.897 cv
477.74 190.986 481.982 191.073 486.213 191.073 cv
488.232 191.073 490.42 191.06 492.738 191.048 cv
515.904 190.936 550.908 190.764 561.502 200.093 cv
567.381 205.263 572.398 215.049 574.602 225.629 cv
577.104 237.645 575.813 248.96 570.963 257.496 cv
560.014 276.767 551.631 282.073 543.303 286.202 cv
543.217 286.221 li
cp
f
534.123 308.635 mo
544.236 304.91 li
549.221 257.401 li
538.883 252.304 li
534.123 308.635 li
cp
.129412 .223529 .286275 rgb
f
396.492 247.213 mo
409.016 353.991 li
529.926 358.296 li
538.883 252.304 li
396.492 247.213 li
cp
1 .321569 .368627 rgb
f
461.674 226.288 mo
461.674 238.71 451.604 248.783 439.18 248.783 cv
426.758 248.783 416.686 238.71 416.686 226.288 cv
416.686 213.866 426.758 203.793 439.18 203.793 cv
451.604 203.793 461.674 213.866 461.674 226.288 cv
cp
.129412 .223529 .286275 rgb
f
549.221 283.282 mo
548.193 283.113 546.732 283.251 546.635 283.536 cv
546.541 283.822 548.357 284.182 548.357 284.182 cv
548.357 284.182 544.908 284.472 544.908 284.879 cv
544.908 285.237 548.264 285.404 548.264 285.404 cv
548.264 285.404 544.236 285.692 544.236 286.124 cv
544.236 286.675 548.072 286.627 548.072 286.627 cv
548.072 286.627 544.719 287.277 544.908 287.751 cv
545.1 288.232 547.5 287.751 547.5 287.751 cv
547.5 287.751 545.736 288.47 545.963 288.809 cv
546.156 289.094 550.277 287.946 550.277 287.946 cv
549.221 283.282 li
cp
.972549 .654902 .52549 rgb
f
553.441 254.493 mo
553.441 254.493 551.523 251.904 550.852 251.811 cv
550.18 251.713 551.523 253.531 551.523 253.531 cv
551.523 253.531 549.412 251.511 549.029 251.805 cv
548.65 252.096 550.949 254.493 550.852 254.493 cv
550.758 254.493 548.072 251.555 547.688 252.257 cv
547.305 252.959 549.992 255.104 549.992 255.104 cv
549.992 255.104 547.99 253.629 547.645 254.205 cv
547.305 254.777 550.949 257.401 550.949 257.401 cv
553.441 254.493 li
cp
f
564.08 258.807 mo
558.039 256.313 553.441 254.493 553.441 254.493 cv
553.441 254.493 551.621 256.572 550.949 257.401 cv
550.949 257.401 555.26 261.01 560.92 264.364 cv
565.52 267.097 569.611 269.316 572.992 270.101 cv
575.535 267.184 578.125 264.132 579.324 262.737 cv
579.324 262.737 570.121 261.299 564.08 258.807 cv
cp
1 .321569 .368627 rgb
f
617.666 351.782 mo
617.279 352.548 615.354 353.807 615.354 353.807 cv
610.373 351.031 601.723 340.408 598.553 330.732 cv
595.393 321.048 595.365 306.063 595.365 306.063 cv
593.641 309.805 587.184 329.925 586.707 336.828 cv
586.225 343.729 584.59 357.534 584.59 357.534 cv
584.59 357.534 583.139 358.191 582.291 358.292 cv
582.135 358.311 582.006 358.302 581.904 358.285 cv
581.775 358.212 li
581.291 357.834 578.615 345.263 578.811 335.778 cv
579 326.291 579.803 315.839 581.432 308.171 cv
582.459 303.31 583.455 299.298 584.043 297.015 cv
584.043 297.007 li
584.123 296.713 584.188 296.451 584.252 296.224 cv
584.469 295.395 584.59 294.945 584.59 294.945 cv
584.59 294.945 585.9 294.965 587.727 294.906 cv
587.848 294.897 587.98 294.897 588.115 294.889 cv
590.111 294.821 592.611 294.652 594.656 294.268 cv
598.777 293.503 602.135 290.818 602.135 290.818 cv
606.736 296 608.27 304.818 607.412 309.703 cv
606.545 314.591 605.971 322.839 607.119 329.262 cv
608.27 335.678 617.666 351.782 617.666 351.782 cv
cp
.0235294 .658824 .6 rgb
f
599.643 275.196 mo
599.064 271.363 597.723 265.134 595.426 262.928 cv
593.127 260.724 588.975 259.609 585.779 259.979 cv
582.98 260.302 581.623 260.053 579.324 262.737 cv
578.125 264.132 575.535 267.184 572.992 270.101 cv
570.648 272.798 568.348 275.384 567.244 276.442 cv
564.943 278.65 556.604 282.552 549.221 283.282 cv
550.277 287.946 li
550.277 287.946 555.742 288.617 565.039 286.505 cv
574.338 284.397 579.609 276.922 579.609 276.922 cv
579.609 276.922 581.238 276.635 581.719 280.563 cv
582.197 284.493 584.592 294.945 584.592 294.945 cv
584.592 294.945 590.535 295.039 594.656 294.273 cv
598.779 293.505 602.135 290.822 602.135 290.822 cv
602.135 290.822 600.215 279.03 599.643 275.196 cv
cp
1 .321569 .368627 rgb
f
580.729 357.764 mo
579.131 358.143 577.342 359.103 577.215 359.613 cv
577.084 360.125 579.578 360.063 581.494 359.871 cv
583.414 359.68 584.818 358.337 584.592 357.534 cv
580.729 357.764 li
cp
.129412 .223529 .286275 rgb
f
614.402 354.471 mo
613.35 355.466 612.172 357.1 611.787 358.292 cv
611.402 359.488 611.977 360.489 614.021 358.775 cv
616.064 357.058 617.152 355.142 617.666 354.053 cv
618.178 352.969 617.666 351.786 617.666 351.786 cv
617.666 351.786 615.479 353.455 614.402 354.471 cv
cp
f
585.75 259.89 mo
585.703 260.674 585.543 261.217 585.174 261.217 cv
584.484 261.217 583.813 259.82 583.342 258.471 cv
583.094 257.789 582.896 257.113 582.766 256.632 cv
583.512 256.249 584.16 255.726 584.59 255.104 cv
584.645 255.491 584.703 255.881 584.791 256.28 cv
584.791 256.287 li
585.014 257.497 585.334 258.74 585.75 259.89 cv
cp
.972549 .654902 .52549 rgb
f
597.438 257.401 mo
595.234 255.066 591.975 252.575 591.014 249.125 cv
590.059 245.675 589.352 242.157 580.854 242.67 cv
578.836 242.792 576.83 244.236 577.117 245.675 cv
577.266 246.407 577.738 246.886 578.379 247.213 cv
578.994 247.522 579.77 247.689 580.566 247.783 cv
582.197 247.975 584.979 247.879 584.498 249.986 cv
584.262 251.02 584.283 252.959 584.59 255.104 cv
584.816 256.68 585.197 258.364 585.75 259.893 cv
585.973 260.521 586.227 261.124 586.512 261.681 cv
588.428 265.421 591.783 266.763 595.713 265.322 cv
599.643 263.888 599.643 259.733 597.438 257.401 cv
cp
.129412 .223529 .286275 rgb
f
584.539 254.712 mo
584.283 252.725 584.281 250.958 584.498 249.986 cv
584.979 247.879 582.197 247.975 580.566 247.783 cv
579.77 247.689 578.994 247.522 578.379 247.213 cv
577.471 248.346 575.426 252.848 576.543 255.642 cv
577.389 257.762 580.521 257.794 582.764 256.633 cv
583.512 256.245 584.158 255.726 584.59 255.104 cv
584.572 254.971 584.555 254.841 584.539 254.712 cv
cp
.972549 .654902 .52549 rgb
f
584.791 256.28 mo
584.791 256.287 li
584.461 257.113 583.973 258.036 583.342 258.471 cv
583.094 257.789 582.896 257.113 582.766 256.632 cv
583.512 256.249 584.16 255.726 584.59 255.104 cv
584.645 255.491 584.703 255.881 584.791 256.28 cv
cp
.929412 .533333 .392157 rgb
f
561.381 231.433 mo
561.381 245.556 549.93 257.005 535.805 257.005 cv
521.684 257.005 510.232 245.556 510.232 231.433 cv
510.232 217.31 521.684 205.862 535.805 205.862 cv
549.93 205.862 561.381 217.31 561.381 231.433 cv
cp
.129412 .223529 .286275 rgb
f
442.123 226.288 mo
442.123 227.363 441.25 228.232 440.178 228.232 cv
439.104 228.232 438.232 227.363 438.232 226.288 cv
438.232 225.215 439.104 224.344 440.178 224.344 cv
441.25 224.344 442.123 225.215 442.123 226.288 cv
cp
f
538.883 231.433 mo
538.883 232.504 538.014 233.377 536.939 233.377 cv
535.869 233.377 534.996 232.504 534.996 231.433 cv
534.996 230.358 535.869 229.49 536.939 229.49 cv
538.014 229.49 538.883 230.358 538.883 231.433 cv
cp
f
367.225 329.324 mo
366.459 324.213 361.473 300.056 360.576 292.641 cv
359.697 285.333 356.973 261.023 356.9 260.355 cv
356.898 260.324 li
356.746 258.902 356.486 256.602 354.828 256.471 cv
353.164 256.346 352.143 260.547 354.189 280.112 cv
356.232 299.672 358.404 313.221 359.555 318.972 cv
360.707 324.724 361.729 336.098 363.518 336.609 cv
364.844 336.988 366.664 335.604 367.201 332.777 cv
367.389 331.797 367.422 330.643 367.225 329.324 cv
cp
f
456.98 355.698 mo
456.98 355.698 450.107 375.269 446.85 386.197 cv
443.59 397.127 440.486 406.069 442.166 406.514 cv
445.945 407.514 463.527 368.369 463.527 368.369 cv
463.527 368.369 463.32 406.811 466.594 406.509 cv
469.945 406.2 474.07 367.602 475.031 367.983 cv
475.988 368.369 489.154 406.495 491.902 406.509 cv
496.57 406.532 481.537 356.574 481.537 356.574 cv
456.98 355.698 li
cp
f
518.551 328.427 mo
516.008 328.427 513.951 330.488 513.951 333.03 cv
513.951 334.919 515.088 336.539 516.719 337.249 cv
517.279 337.492 517.898 337.631 518.551 337.631 cv
519.65 337.631 520.658 337.241 521.447 336.603 cv
522.486 335.758 523.148 334.471 523.148 333.03 cv
523.148 330.488 521.09 328.427 518.551 328.427 cv
cp
.67451 .917647 .866667 rgb
f
387.033 309.809 mo
386.268 308.056 384.635 301.417 383.457 294.306 cv
382.234 286.941 381.461 283.272 382.289 282.112 cv
356.746 258.902 li
356.746 258.902 356.799 259.429 356.9 260.355 cv
356.973 261.023 359.697 285.333 360.576 292.641 cv
361.473 300.056 366.459 324.213 367.225 329.324 cv
367.422 330.643 367.389 331.797 367.201 332.777 cv
387.602 310.581 li
387.383 310.405 387.184 310.156 387.033 309.809 cv
cp
.333333 .827451 .72549 rgb
f
389.635 309.809 mo
403.834 309.809 li
400.631 282.475 li
384.223 282.475 li
384.988 284.702 389.74 305.743 389.719 309.26 cv
389.717 309.457 389.684 309.638 389.635 309.809 cv
cp
.0235294 .658824 .6 rgb
f
384.223 282.475 mo
384.223 282.475 383.711 281.141 382.563 281.845 cv
382.453 281.91 382.367 282.004 382.289 282.112 cv
381.461 283.272 382.234 286.941 383.457 294.306 cv
384.635 301.417 386.268 308.056 387.033 309.809 cv
387.184 310.156 387.383 310.405 387.602 310.581 cv
388.355 311.178 389.354 310.791 389.635 309.809 cv
389.684 309.638 389.717 309.457 389.719 309.26 cv
389.74 305.743 384.988 284.702 384.223 282.475 cv
cp
.129412 .223529 .286275 rgb
f
558.93 287.797 mo
558.84 287.797 558.752 287.728 558.742 287.636 cv
558.725 287.529 558.795 287.43 558.902 287.416 cv
559.08 287.392 559.301 287.364 559.572 287.329 cv
562.02 287.028 567.762 286.323 572.648 283.051 cv
578.139 279.375 580.309 275.944 580.691 275.29 cv
580.742 275.198 580.861 275.17 580.953 275.222 cv
581.043 275.276 581.074 275.394 581.021 275.485 cv
580.479 276.417 578.285 279.742 572.863 283.37 cv
567.896 286.692 562.098 287.408 559.619 287.707 cv
559.352 287.743 559.131 287.771 558.957 287.795 cv
558.93 287.797 li
cp
.0509804 .0941176 .117647 rgb
f
570.799 272.798 mo
570.672 272.749 li
570.656 272.478 li
570.92 272.177 571.424 271.589 572.078 270.827 cv
574.816 267.647 579.91 261.726 581.031 260.903 cv
581.295 260.946 li
581.258 261.212 li
580.174 262.011 574.904 268.137 572.371 271.078 cv
571.715 271.841 571.207 272.431 570.939 272.729 cv
570.799 272.798 li
cp
f
578.803 253.021 mo
578.164 253.021 577.391 252.486 577.355 252.465 cv
577.281 252.334 li
577.318 252.188 li
579.127 249.891 li
579.078 249.125 578.139 249.063 578.098 249.062 cv
577.99 249.053 577.91 248.961 577.916 248.858 cv
577.92 248.753 578 248.663 578.117 248.677 cv
578.598 248.701 579.512 249 579.512 249.955 cv
579.475 250.073 li
577.75 252.257 li
577.99 252.4 578.441 252.637 578.803 252.637 cv
578.906 252.637 578.994 252.725 578.994 252.829 cv
578.994 252.936 578.906 253.021 578.803 253.021 cv
cp
f
583.094 251.105 mo
582.969 251.059 li
582.93 251.027 582.082 250.316 580.934 250.833 cv
580.836 250.876 580.723 250.833 580.684 250.738 cv
580.635 250.64 580.68 250.525 580.779 250.482 cv
582.15 249.867 583.174 250.731 583.219 250.771 cv
583.236 251.038 li
583.094 251.105 li
cp
f
581.145 278.44 mo
580.963 278.307 li
580.625 277.256 579.766 277.114 579.76 277.114 cv
579.652 277.1 579.582 277 579.596 276.897 cv
579.613 276.791 579.703 276.714 579.816 276.734 cv
579.859 276.742 580.916 276.912 581.328 278.187 cv
581.357 278.288 581.305 278.399 581.201 278.431 cv
581.145 278.44 li
cp
f
578.799 255.36 mo
577.846 255.36 577.342 254.738 577.318 254.707 cv
577.348 254.436 li
577.619 254.473 li
577.645 254.506 578.207 255.178 579.275 254.916 cv
579.381 254.896 579.48 254.955 579.508 255.06 cv
579.533 255.164 579.471 255.266 579.365 255.295 cv
579.164 255.342 578.973 255.36 578.799 255.36 cv
cp
f
593.895 306.893 mo
593.803 306.893 593.727 306.833 593.707 306.745 cv
593.684 306.645 593.746 306.539 593.85 306.516 cv
594.713 306.312 596.539 305.095 598.012 304.112 cv
598.738 303.626 599.369 303.208 599.807 302.958 cv
599.896 302.903 600.014 302.936 600.066 303.031 cv
599.994 303.29 li
599.566 303.532 598.943 303.948 598.225 304.43 cv
596.648 305.48 594.863 306.671 593.938 306.887 cv
593.895 306.893 li
cp
f
583.24 311.781 mo
580.633 318.537 579.789 335.5 579.98 339.892 cv
580.184 344.529 582.268 358.132 582.291 358.269 cv
582.291 358.292 li
582.135 358.311 582.006 358.302 581.904 358.285 cv
581.783 357.471 579.789 344.436 579.596 339.912 cv
579.398 335.493 580.258 318.446 582.879 311.652 cv
584.252 308.096 585.531 303.914 586.459 300.457 cv
586.492 300.318 586.529 300.188 586.563 300.058 cv
587.121 297.934 587.527 296.114 587.727 294.906 cv
587.848 294.897 587.98 294.897 588.115 294.889 cv
587.58 298.263 585.395 306.191 583.24 311.781 cv
cp
f
586.846 300.45 mo
586.676 300.557 li
586.582 300.532 li
586.459 300.457 li
586.053 300.195 584.697 299.19 584.043 297.015 cv
584.043 297.007 li
584.123 296.713 584.188 296.451 584.252 296.224 cv
584.719 298.554 586.053 299.697 586.563 300.058 cv
586.682 300.148 586.76 300.195 586.77 300.195 cv
586.859 300.244 586.896 300.356 586.846 300.45 cv
cp
f
591.426 317.608 mo
591.375 317.602 li
591.268 317.57 591.215 317.467 591.244 317.366 cv
592.586 312.873 595.414 305.876 595.445 305.807 cv
595.482 305.708 595.596 305.658 595.693 305.701 cv
595.789 305.74 595.838 305.852 595.801 305.95 cv
595.77 306.021 592.947 313.001 591.613 317.474 cv
591.426 317.608 li
cp
f
495.984 351.376 mo
526.551 352.384 li
533.834 259.081 li
415.494 252.511 li
420.693 305.114 li
494.371 308.443 li
494.473 308.448 494.553 308.53 494.555 308.626 cv
495.984 351.376 li
cp
526.729 352.773 mo
526.725 352.773 li
495.791 351.752 li
495.691 351.752 495.611 351.668 495.605 351.57 cv
494.178 308.817 li
420.512 305.487 li
420.418 305.482 420.34 305.409 420.33 305.315 cv
415.088 252.322 li
415.143 252.173 li
415.291 252.113 li
534.049 258.71 li
534.186 258.777 li
534.23 258.916 li
526.922 352.6 li
526.912 352.7 526.828 352.773 526.729 352.773 cv
cp
f
403.834 309.997 mo
390.998 309.997 li
390.893 309.997 390.803 309.912 390.803 309.809 cv
390.803 309.701 390.893 309.616 390.998 309.616 cv
403.834 309.616 li
403.941 309.616 404.027 309.701 404.027 309.809 cv
404.027 309.912 403.941 309.997 403.834 309.997 cv
cp
f
369.227 330.765 mo
369.098 330.711 li
369.086 330.443 li
386.23 311.788 li
386.5 311.777 li
386.512 312.049 li
369.369 330.701 li
369.227 330.765 li
cp
f
407.713 343.051 mo
407.617 343.051 407.533 342.978 407.523 342.88 cv
399.182 271.784 li
399.17 271.678 399.244 271.582 399.35 271.571 cv
399.455 271.56 399.549 271.634 399.561 271.737 cv
407.9 342.835 li
407.916 342.943 407.838 343.037 407.734 343.048 cv
407.713 343.051 li
cp
f
365.766 335.973 mo
365.607 335.894 li
365.656 335.621 li
368.172 333.868 367.031 328.514 366.348 325.312 cv
366.246 324.821 366.15 324.383 366.08 324.011 cv
365.975 323.44 365.715 322.05 365.365 320.165 cv
363.996 312.859 361.152 297.655 360.668 294.699 cv
360.355 292.783 359.438 284.813 358.723 278.464 cv
357.193 264.926 357.193 264.926 357.301 264.845 cv
357.492 264.815 li
357.611 264.975 li
357.639 265.224 360.447 290.954 361.049 294.638 cv
361.529 297.591 364.373 312.789 365.74 320.099 cv
366.094 321.977 366.355 323.368 366.461 323.941 cv
366.529 324.31 366.621 324.744 366.725 325.231 cv
367.428 328.524 368.598 334.036 365.875 335.938 cv
365.766 335.973 li
cp
f
599.465 394.718 mo
600.279 391.81 601.166 388.636 602.051 385.46 cv
602.201 384.922 602.352 384.39 602.502 383.851 cv
619.998 383.851 li
622.736 394.718 li
599.465 394.718 li
cp
599.064 394.718 mo
577.402 394.718 li
578.211 391.838 579.092 388.701 579.971 385.565 cv
580.135 384.991 580.291 384.421 580.455 383.851 cv
602.104 383.851 li
601.107 387.415 600.07 391.129 599.064 394.718 cv
cp
577.004 394.718 mo
564.541 394.718 li
565.357 391.8 566.25 388.614 567.137 385.427 cv
567.287 384.901 567.432 384.376 567.578 383.851 cv
580.057 383.851 li
579.057 387.411 578.014 391.126 577.004 394.718 cv
cp
572.707 365.354 mo
572.957 364.437 573.098 363.929 573.156 363.64 cv
573.268 363.654 573.371 363.672 573.482 363.672 cv
585.666 363.672 li
585.611 363.949 584.67 367.354 583.289 372.303 cv
570.791 372.303 li
570.979 371.62 571.166 370.956 571.338 370.334 cv
571.906 368.272 572.381 366.558 572.707 365.354 cv
cp
571.943 361.749 mo
571.943 360.893 572.635 360.205 573.482 360.205 cv
615.068 360.205 li
615.918 360.205 616.613 360.893 616.613 361.749 cv
616.613 362.597 615.918 363.289 615.068 363.289 cv
573.482 363.289 li
573.357 363.289 573.234 363.269 573.113 363.237 cv
573.084 363.23 li
573.08 363.23 li
572.426 363.046 571.943 362.458 571.943 361.749 cv
cp
605.613 372.686 mo
617.189 372.686 li
619.9 383.468 li
602.609 383.468 li
603.68 379.629 604.723 375.884 605.613 372.686 cv
cp
605.324 372.303 mo
583.689 372.303 li
583.854 371.7 584.014 371.12 584.172 370.563 cv
584.738 368.52 585.215 366.813 585.543 365.615 cv
585.891 364.364 586.021 363.877 586.027 363.672 cv
607.697 363.672 li
607.48 364.513 606.58 367.771 605.324 372.303 cv
cp
614.918 363.672 mo
617.092 372.303 li
605.721 372.303 li
605.904 371.639 606.082 370.995 606.248 370.393 cv
606.824 368.334 607.293 366.624 607.623 365.424 cv
607.885 364.465 608.023 363.953 608.082 363.672 cv
614.918 363.672 li
cp
583.582 372.686 mo
605.217 372.686 li
604.342 375.829 603.305 379.549 602.209 383.468 cv
580.559 383.468 li
581.639 379.622 582.689 375.87 583.582 372.686 cv
cp
570.682 372.686 mo
583.182 372.686 li
582.305 375.821 581.264 379.542 580.164 383.468 cv
567.682 383.468 li
568.752 379.632 569.797 375.888 570.682 372.686 cv
cp
615.309 363.646 mo
616.254 363.529 616.994 362.726 616.994 361.749 cv
616.994 360.685 616.129 359.818 615.068 359.818 cv
573.482 359.818 li
572.418 359.818 571.555 360.685 571.555 361.749 cv
571.555 362.566 572.074 363.262 572.797 363.54 cv
572.609 364.284 571.686 367.65 570.377 372.354 cv
570.318 372.493 li
570.328 372.524 li
569.445 375.717 568.391 379.508 567.275 383.503 cv
567.174 383.659 li
567.211 383.746 li
566.203 387.35 565.154 391.104 564.139 394.738 cv
564.059 394.763 563.996 394.821 563.996 394.912 cv
564.057 395.044 li
562.807 399.506 561.617 403.758 560.639 407.271 cv
560.605 407.372 560.668 407.476 560.77 407.507 cv
560.822 407.514 li
561.01 407.372 li
561.01 407.372 562.498 402.044 564.438 395.101 cv
576.893 395.101 li
575.645 399.544 574.455 403.776 573.473 407.271 cv
573.445 407.372 573.502 407.476 573.605 407.507 cv
573.656 407.514 li
573.84 407.372 li
573.84 407.372 575.342 402.041 577.297 395.101 cv
598.957 395.101 li
597.717 399.544 596.529 403.776 595.549 407.271 cv
595.521 407.372 595.582 407.476 595.682 407.507 cv
595.736 407.514 li
595.918 407.372 li
595.918 407.372 597.412 402.044 599.357 395.101 cv
622.834 395.101 li
625.924 407.368 li
626.109 407.514 li
626.154 407.507 li
626.258 407.482 626.32 407.379 626.293 407.274 cv
615.309 363.646 li
cp
f
524.51 358.775 mo
521.447 336.603 li
520.658 337.241 519.65 337.631 518.551 337.631 cv
517.898 337.631 517.279 337.492 516.719 337.249 cv
517.268 340.969 520.326 361.52 520.848 362.041 cv
521.424 362.618 551.367 362.621 551.367 360.625 cv
551.367 358.775 524.51 358.775 524.51 358.775 cv
cp
.129412 .223529 .286275 rgb
f
462.219 245.05 mo
444.242 229.663 li
444.951 228.814 445.387 227.736 445.451 226.563 cv
469.754 227.852 li
466.813 241.835 462.219 245.05 462.219 245.05 cv
cp
439.75 255.158 mo
440.236 231.572 li
441.428 231.558 442.521 231.147 443.402 230.469 cv
457.824 250.073 li
445.152 256.67 439.75 255.158 439.75 255.158 cv
cp
418.707 245.638 mo
436.148 229.706 li
436.895 230.581 437.912 231.21 439.074 231.457 cv
434.846 255.221 li
421.334 250.59 418.707 245.638 418.707 245.638 cv
cp
411.924 221.467 mo
434.998 225.22 li
434.926 225.566 434.891 225.922 434.891 226.288 cv
434.891 227.175 435.111 228.006 435.498 228.739 cv
414.424 240.074 li
409.672 226.601 411.924 221.467 411.924 221.467 cv
cp
427.236 200.726 mo
438.078 221.437 li
436.945 221.929 436.021 222.803 435.467 223.903 cv
413.852 213.888 li
421.777 202.003 427.236 200.726 427.236 200.726 cv
cp
453.426 200.376 mo
442.77 221.683 li
442.002 221.251 441.121 221.004 440.178 221.004 cv
439.955 221.004 439.74 221.02 439.527 221.047 cv
434.916 197.221 li
449.195 196.698 453.426 200.376 453.426 200.376 cv
cp
468.861 220.375 mo
445.367 225.293 li
445.158 224.208 444.625 223.247 443.867 222.506 cv
459.84 203.909 li
469.117 214.772 468.861 220.375 468.861 220.375 cv
cp
440.178 188.835 mo
419.494 188.835 402.725 205.603 402.725 226.288 cv
402.725 246.973 419.494 263.737 440.178 263.737 cv
460.859 263.737 477.629 246.973 477.629 226.288 cv
477.629 205.603 460.859 188.835 440.178 188.835 cv
cp
.0235294 .658824 .6 rgb
f
561.996 252.764 mo
541.561 235.271 li
542.367 234.305 542.865 233.083 542.93 231.744 cv
570.564 233.211 li
567.223 249.108 561.996 252.764 561.996 252.764 cv
cp
536.457 264.257 mo
537.006 237.44 li
538.361 237.426 539.605 236.958 540.607 236.187 cv
557.004 258.473 li
542.598 265.975 536.457 264.257 536.457 264.257 cv
cp
512.531 253.431 mo
532.363 235.318 li
533.207 236.316 534.369 237.027 535.688 237.309 cv
530.885 264.33 li
515.518 259.06 512.531 253.431 512.531 253.431 cv
cp
504.822 225.955 mo
531.053 230.22 li
530.973 230.615 530.934 231.018 530.934 231.433 cv
530.934 232.439 531.18 233.389 531.617 234.22 cv
507.666 247.104 li
502.26 231.789 504.822 225.955 504.822 225.955 cv
cp
522.227 202.374 mo
534.555 225.917 li
533.268 226.478 532.217 227.472 531.584 228.718 cv
507.012 217.338 li
516.02 203.826 522.227 202.374 522.227 202.374 cv
cp
552.002 201.977 mo
539.889 226.201 li
539.016 225.711 538.014 225.424 536.939 225.424 cv
536.688 225.424 536.445 225.446 536.199 225.474 cv
530.961 198.39 li
547.189 197.794 552.002 201.977 552.002 201.977 cv
cp
569.549 224.711 mo
542.836 230.304 li
542.604 229.073 541.996 227.978 541.137 227.135 cv
559.295 205.994 li
569.842 218.345 569.549 224.711 569.549 224.711 cv
cp
536.939 188.858 mo
513.426 188.858 494.365 207.918 494.365 231.433 cv
494.365 254.947 513.426 274.012 536.939 274.012 cv
560.451 274.012 579.516 254.947 579.516 231.433 cv
579.516 207.918 560.451 188.858 536.939 188.858 cv
cp
f
581.535 251.703 mo
581.535 251.959 581.328 252.165 581.074 252.165 cv
580.82 252.165 580.615 251.959 580.615 251.703 cv
580.615 251.449 580.82 251.247 581.074 251.247 cv
581.328 251.247 581.535 251.449 581.535 251.703 cv
cp
.0509804 .0941176 .117647 rgb
f
578.389 249.995 mo
578.389 250.25 578.184 250.456 577.93 250.456 cv
577.676 250.456 577.469 250.25 577.469 249.995 cv
577.469 249.741 577.676 249.532 577.93 249.532 cv
578.184 249.532 578.389 249.741 578.389 249.995 cv
cp
f
483.85 315.839 mo
483.844 315.839 li
421.152 313.346 li
421.045 313.343 420.963 313.256 420.969 313.147 cv
420.971 313.043 421.063 312.967 421.166 312.967 cv
483.855 315.456 li
483.963 315.46 484.043 315.55 484.039 315.655 cv
484.037 315.759 483.949 315.839 483.85 315.839 cv
cp
f
484.998 326.065 mo
484.994 326.065 li
421.152 323.893 li
421.049 323.89 420.963 323.799 420.969 323.694 cv
420.971 323.587 421.074 323.517 421.166 323.51 cv
485.006 325.684 li
485.113 325.688 485.195 325.774 485.191 325.882 cv
485.188 325.982 485.104 326.065 484.998 326.065 cv
cp
f
485.957 335.973 mo
423.076 335.973 li
422.971 335.973 422.883 335.887 422.883 335.781 cv
422.883 335.674 422.971 335.591 423.076 335.591 cv
485.957 335.591 li
486.063 335.591 486.148 335.674 486.148 335.781 cv
486.148 335.887 486.063 335.973 485.957 335.973 cv
cp
f
485.957 348.621 mo
485.953 348.621 li
423.07 346.897 li
422.967 346.897 422.879 346.807 422.883 346.702 cv
422.887 346.595 422.969 346.518 423.082 346.511 cv
485.961 348.239 li
486.068 348.243 486.15 348.333 486.148 348.434 cv
486.146 348.541 486.061 348.621 485.957 348.621 cv
cp
f
391.406 345.442 mo
391.406 345.442 364.453 353.031 339.863 345.566 cv
333.941 363.46 li
333.941 363.46 358.475 370.994 384.498 364.413 cv
391.406 345.442 li
cp
.329412 .823529 .721569 rgb
f
313.141 376.882 mo
380.971 376.882 li
381.17 376.882 381.346 376.755 381.41 376.565 cv
392.578 343.422 li
392.66 343.18 392.529 342.915 392.285 342.834 cv
392.043 342.753 391.779 342.883 391.697 343.126 cv
380.637 375.953 li
313.141 375.953 li
312.884 375.953 312.676 376.16 312.676 376.417 cv
312.676 376.674 312.884 376.882 313.141 376.882 cv
cp
.129412 .223529 .286275 rgb
f
329.652 376.882 mo
329.848 376.882 330.029 376.759 330.094 376.563 cv
341.779 341.252 li
341.861 341.008 341.729 340.745 341.484 340.665 cv
341.238 340.581 340.979 340.717 340.898 340.96 cv
329.213 376.271 li
329.131 376.516 329.264 376.777 329.508 376.858 cv
329.652 376.882 li
cp
f
354.033 406.618 mo
354.178 406.618 354.324 406.549 354.414 406.42 cv
375.131 376.684 li
375.277 376.473 375.227 376.184 375.016 376.036 cv
374.807 375.891 374.514 375.941 374.367 376.151 cv
353.652 405.888 li
353.504 406.099 353.557 406.388 353.768 406.535 cv
353.848 406.591 353.941 406.618 354.033 406.618 cv
cp
f
319.115 406.618 mo
319.261 406.618 319.406 406.549 319.496 406.42 cv
340.213 376.684 li
340.359 376.473 340.309 376.184 340.098 376.036 cv
339.889 375.891 339.598 375.941 339.451 376.151 cv
318.734 405.888 li
318.586 406.099 318.638 406.388 318.849 406.535 cv
318.929 406.591 319.023 406.618 319.115 406.618 cv
cp
f
339.832 406.618 mo
339.924 406.618 340.018 406.591 340.098 406.535 cv
340.309 406.388 340.361 406.099 340.213 405.888 cv
319.497 376.151 li
319.351 375.941 319.058 375.891 318.85 376.036 cv
318.639 376.184 318.587 376.473 318.735 376.684 cv
339.451 406.42 li
339.541 406.549 339.686 406.618 339.832 406.618 cv
cp
f
374.75 406.618 mo
374.842 406.618 374.936 406.591 375.016 406.535 cv
375.227 406.388 375.279 406.099 375.131 405.888 cv
354.414 376.151 li
354.268 375.941 353.977 375.891 353.768 376.036 cv
353.557 376.184 353.506 376.473 353.652 376.684 cv
374.369 406.42 li
374.459 406.549 374.604 406.618 374.75 406.618 cv
cp
f
203.402 442.136 mo
202.776 442.672 202.247 443.56 201.813 444.798 cv
201.378 446.036 201.162 447.626 201.162 449.566 cv
201.162 451.457 201.436 452.957 201.985 454.067 cv
202.534 455.179 203.159 455.951 203.862 456.385 cv
204.564 456.819 205.17 457.036 205.682 457.036 cv
206.141 457.036 206.613 456.877 207.099 456.558 cv
207.583 456.238 208.005 455.9 208.363 455.542 cv
208.414 455.491 208.497 455.402 208.612 455.274 cv
208.727 455.146 208.835 455.083 208.938 455.083 cv
209.065 455.083 209.218 455.134 209.397 455.235 cv
212.653 457.036 li
212.755 457.088 212.915 457.157 213.132 457.247 cv
213.349 457.337 213.502 457.419 213.591 457.496 cv
213.681 457.572 213.726 457.675 213.726 457.802 cv
213.726 457.931 213.688 458.07 213.611 458.224 cv
213.049 459.169 212.167 460.139 210.968 461.135 cv
209.767 462.131 208.107 462.629 205.988 462.629 cv
204.328 462.629 202.738 462.01 201.219 460.771 cv
199.699 459.532 198.48 457.841 197.561 455.695 cv
196.642 453.551 196.182 451.188 196.182 448.609 cv
196.182 446.056 196.623 443.758 197.503 441.714 cv
198.384 439.672 199.515 438.075 200.894 436.926 cv
202.272 435.777 203.689 435.202 205.146 435.202 cv
206.958 435.202 208.42 435.579 209.531 436.332 cv
210.642 437.086 211.44 437.807 211.925 438.496 cv
212.027 438.649 212.123 438.79 212.212 438.918 cv
212.302 439.046 212.347 439.174 212.347 439.301 cv
212.347 439.454 212.206 439.659 211.925 439.914 cv
210.75 440.833 209.908 441.638 209.397 442.327 cv
209.142 442.659 208.924 442.908 208.746 443.074 cv
208.567 443.24 208.388 443.323 208.209 443.323 cv
208.031 443.323 207.827 443.195 207.597 442.939 cv
207.061 442.353 206.645 441.938 206.352 441.695 cv
206.058 441.452 205.707 441.331 205.298 441.331 cv
204.66 441.331 204.028 441.6 203.402 442.136 cv
cp
.0588235 .207843 .329412 rgb
f
219.242 440.91 mo
219.242 441.625 219.19 443.438 219.088 446.349 cv
218.986 449.158 218.935 450.869 218.935 451.481 cv
218.935 452.963 218.96 454.834 219.012 457.094 cv
219.063 459.354 219.113 460.701 219.165 461.135 cv
219.19 461.288 219.203 461.467 219.203 461.671 cv
219.203 461.85 219.171 461.978 219.107 462.054 cv
219.043 462.131 218.948 462.207 218.82 462.284 cv
218.667 462.386 218.271 462.438 217.633 462.438 cv
217.53 462.438 217.371 462.438 217.154 462.438 cv
216.937 462.438 216.803 462.411 216.752 462.36 cv
216.7 462.309 216.675 462.207 216.675 462.054 cv
216.713 460.828 li
216.79 455.811 li
216.867 447.767 li
216.867 447 216.917 445.264 217.02 442.557 cv
217.045 441.919 217.083 440.878 217.135 439.435 cv
217.186 437.992 217.186 437.144 217.135 436.888 cv
217.097 436.083 li
217.097 435.42 217.301 435.087 217.709 435.087 cv
219.126 435.126 li
219.382 435.126 219.51 435.305 219.51 435.662 cv
219.51 435.79 219.497 435.937 219.471 436.103 cv
219.446 436.269 219.433 436.428 219.433 436.581 cv
219.356 437.144 219.292 438.586 219.242 440.91 cv
cp
f
234.027 435.355 mo
234.027 434.871 234.193 434.577 234.525 434.475 cv
234.856 434.373 235.342 434.321 235.98 434.321 cv
236.542 434.321 237.264 434.29 238.145 434.226 cv
239.026 434.162 239.708 434.092 240.194 434.015 cv
240.551 433.989 240.807 434.047 240.96 434.188 cv
241.113 434.328 241.19 434.564 241.19 434.896 cv
241.19 434.998 241.164 435.279 241.113 435.738 cv
241.062 436.122 241.037 438.663 241.037 443.361 cv
241.037 452.019 li
241.037 453.32 241.056 454.757 241.094 456.327 cv
241.132 457.897 241.177 459.31 241.229 460.561 cv
241.279 461.812 241.305 462.156 241.305 461.595 cv
241.305 462.003 241.1 462.207 240.692 462.207 cv
240.513 462.207 240.36 462.194 240.232 462.169 cv
240.13 462.144 239.926 462.131 239.62 462.131 cv
239.313 462.131 238.828 462.156 238.164 462.207 cv
237.449 462.258 236.951 462.284 236.67 462.284 cv
236.185 462.284 235.821 462.182 235.578 461.978 cv
235.335 461.773 235.086 461.403 234.832 460.866 cv
234.18 459.564 li
233.414 457.854 232.737 456.513 232.15 455.542 cv
231.818 454.98 230.975 453.436 229.622 450.907 cv
227.937 447.728 li
227.937 449.184 li
227.937 450.064 li
227.937 450.27 227.93 450.524 227.917 450.831 cv
227.904 451.137 227.911 451.481 227.937 451.865 cv
227.937 453.193 227.956 454.93 227.994 457.074 cv
228.032 459.22 228.09 460.509 228.167 460.943 cv
228.191 461.071 228.205 461.225 228.205 461.403 cv
228.205 461.658 228.153 461.818 228.051 461.882 cv
227.949 461.945 227.757 461.965 227.477 461.939 cv
227.068 461.939 226.589 461.965 226.041 462.016 cv
225.491 462.067 224.974 462.118 224.489 462.169 cv
224.106 462.22 223.857 462.156 223.742 461.978 cv
223.627 461.799 223.583 461.403 223.608 460.79 cv
223.608 459.871 223.57 458.249 223.493 455.925 cv
223.391 453.499 223.327 451.393 223.302 449.604 cv
223.302 447.792 223.34 445.953 223.417 444.089 cv
223.467 441.74 223.493 440.131 223.493 439.263 cv
223.493 438.088 223.455 437.232 223.378 436.696 cv
223.327 436.236 223.302 435.943 223.302 435.815 cv
223.302 435.355 223.378 435.043 223.531 434.877 cv
223.685 434.711 223.889 434.628 224.145 434.628 cv
224.272 434.628 224.527 434.635 224.911 434.646 cv
225.293 434.66 225.842 434.577 226.558 434.397 cv
226.838 434.347 227.119 434.321 227.4 434.321 cv
227.553 434.321 227.77 434.334 228.051 434.359 cv
228.332 434.386 228.703 434.397 229.162 434.397 cv
229.75 434.397 230.241 434.628 230.637 435.087 cv
231.033 435.547 231.46 436.198 231.92 437.041 cv
232.303 437.73 li
232.61 438.292 232.979 438.893 233.414 439.53 cv
233.989 440.412 li
233.989 438.305 li
233.989 436.722 234.001 435.738 234.027 435.355 cv
cp
f
262.181 437.117 mo
262.181 437.705 262.129 437.999 262.027 437.999 cv
261.875 437.999 261.702 437.979 261.51 437.941 cv
261.319 437.902 261.083 437.884 260.802 437.884 cv
254.673 437.884 li
249.923 437.846 li
249.77 437.846 249.195 437.884 248.199 437.96 cv
247.318 438.037 li
247.242 439.071 li
247.216 439.454 247.204 440.055 247.204 440.871 cv
247.204 441.28 247.229 441.816 247.28 442.48 cv
247.331 443.093 247.357 443.54 247.357 443.821 cv
247.357 445.354 li
247.357 445.762 247.369 446.081 247.395 446.311 cv
247.625 446.337 247.97 446.349 248.429 446.349 cv
249.961 446.349 li
250.115 446.349 250.421 446.324 250.881 446.272 cv
251.544 446.222 252.119 446.195 252.604 446.195 cv
252.809 446.195 253.524 446.234 254.75 446.311 cv
255.592 446.349 li
255.796 446.349 256.09 446.33 256.473 446.292 cv
256.856 446.253 257.226 446.234 257.584 446.234 cv
258.848 446.272 li
259.512 446.324 259.972 446.349 260.227 446.349 cv
260.508 446.349 260.699 446.337 260.802 446.311 cv
261.032 446.272 li
261.21 446.272 261.338 446.33 261.415 446.444 cv
261.491 446.56 261.517 446.669 261.491 446.771 cv
261.465 446.949 261.453 447.173 261.453 447.44 cv
261.453 447.709 261.44 447.945 261.415 448.149 cv
261.389 448.354 261.351 448.475 261.3 448.514 cv
261.248 448.552 261.095 448.57 260.84 448.57 cv
259.308 448.418 li
257.393 448.239 256.141 448.149 255.554 448.149 cv
253.383 448.149 251.787 448.188 250.766 448.265 cv
250.357 448.315 249.91 448.341 249.425 448.341 cv
248.94 448.341 248.633 448.341 248.506 448.341 cv
248.021 448.341 247.663 448.328 247.433 448.303 cv
247.318 448.915 li
247.267 449.375 247.242 449.784 247.242 450.142 cv
247.242 450.447 247.267 450.806 247.318 451.214 cv
247.369 451.622 247.395 451.979 247.395 452.286 cv
247.433 456.845 li
247.395 458.76 li
247.369 458.989 247.357 459.31 247.357 459.718 cv
247.688 459.743 248.174 459.756 248.813 459.756 cv
249.349 459.781 250.178 459.794 251.302 459.794 cv
253.371 459.832 li
253.805 459.858 254.468 459.871 255.362 459.871 cv
255.899 459.871 256.601 459.846 257.469 459.794 cv
259.078 459.756 li
259.691 459.756 260.202 459.769 260.61 459.794 cv
261.019 459.819 261.325 459.832 261.53 459.832 cv
261.734 459.832 261.855 459.871 261.894 459.947 cv
261.932 460.023 261.951 460.19 261.951 460.445 cv
261.951 460.624 261.938 460.81 261.913 461.001 cv
261.887 461.192 261.875 461.403 261.875 461.633 cv
261.875 461.812 261.81 461.934 261.683 461.996 cv
261.555 462.061 261.351 462.093 261.07 462.093 cv
260.789 462.093 260.559 462.08 260.38 462.054 cv
259.691 461.978 258.299 461.939 256.205 461.939 cv
254.928 461.939 254.009 461.952 253.447 461.978 cv
253.013 462.003 252.298 462.016 251.302 462.016 cv
247.74 461.978 li
247.331 461.952 246.846 461.939 246.284 461.939 cv
245.926 461.939 245.69 461.895 245.576 461.805 cv
245.46 461.716 245.403 461.569 245.403 461.364 cv
245.441 460.752 li
245.467 460.65 245.48 460.535 245.48 460.407 cv
245.48 460.33 245.467 460.146 245.441 459.852 cv
245.416 459.559 245.403 459.016 245.403 458.224 cv
245.403 457.457 245.377 456.207 245.327 454.47 cv
245.25 453.04 245.211 451.661 245.211 450.333 cv
245.211 449.771 245.275 448.149 245.403 445.468 cv
245.428 444.932 245.454 444.396 245.48 443.859 cv
245.505 443.323 245.518 442.838 245.518 442.403 cv
245.518 439.441 245.48 437.488 245.403 436.543 cv
245.327 435.93 245.696 435.624 246.514 435.624 cv
246.718 435.624 247.05 435.649 247.51 435.7 cv
247.918 435.752 248.225 435.777 248.429 435.777 cv
250.842 435.7 li
252.579 435.599 253.919 435.547 254.864 435.547 cv
255.962 435.547 257.507 435.573 259.5 435.624 cv
260.137 435.649 260.814 435.662 261.53 435.662 cv
261.836 435.662 262.027 435.738 262.104 435.892 cv
262.181 436.045 262.212 436.205 262.2 436.37 cv
262.187 436.537 262.181 436.646 262.181 436.696 cv
262.181 437.117 li
cp
f
271.354 440.067 mo
271.827 441.293 272.279 442.365 272.714 443.284 cv
273.071 443.897 273.55 444.888 274.15 446.253 cv
274.75 447.62 275.178 448.699 275.434 449.49 cv
275.587 449.898 275.804 450.409 276.085 451.022 cv
276.66 452.401 li
277.464 454.201 li
278.204 452.746 278.74 451.687 279.073 451.022 cv
281.563 446.043 li
283.286 442.595 li
284.18 440.757 284.78 439.569 285.086 439.033 cv
285.571 438.037 286.083 437.111 286.619 436.256 cv
287.155 435.4 287.538 434.973 287.768 434.973 cv
287.972 434.973 288.074 435.139 288.074 435.471 cv
288.074 435.777 288.01 436.186 287.883 436.696 cv
287.729 437.653 li
287.627 438.344 287.576 441.407 287.576 446.847 cv
287.576 448.048 287.544 449.503 287.48 451.214 cv
287.417 452.925 287.359 454.062 287.308 454.623 cv
287.257 455.287 287.231 456.27 287.231 457.572 cv
287.27 461.288 li
287.27 461.479 li
287.27 461.786 287.193 461.914 287.04 461.862 cv
286.963 461.862 li
286.835 461.862 286.689 461.876 286.523 461.9 cv
286.356 461.927 286.184 461.939 286.006 461.939 cv
285.903 461.914 285.833 461.85 285.795 461.748 cv
285.757 461.646 285.738 461.467 285.738 461.211 cv
285.738 458.951 li
285.738 456.347 285.763 454.814 285.814 454.354 cv
285.865 453.818 285.923 452.822 285.987 451.367 cv
286.05 449.911 286.083 448.737 286.083 447.843 cv
286.057 447.613 286.069 446.898 286.121 445.698 cv
286.159 444.319 li
286.236 441.561 li
286.057 441.816 285.903 442.085 285.776 442.365 cv
285.521 442.8 285.278 443.272 285.048 443.782 cv
284.665 444.549 li
284.23 445.392 283.733 446.381 283.171 447.518 cv
282.609 448.654 282.124 449.618 281.716 450.409 cv
281.256 451.329 280.675 452.51 279.973 453.952 cv
279.27 455.396 278.728 456.538 278.345 457.381 cv
277.681 458.938 277.297 459.718 277.196 459.718 cv
277.119 459.718 277.004 459.59 276.851 459.334 cv
276.698 459.079 276.595 458.913 276.544 458.836 cv
276.366 458.556 276.085 457.962 275.702 457.056 cv
275.319 456.149 275.012 455.351 274.783 454.661 cv
274.629 454.201 273.965 452.912 272.791 450.792 cv
271.871 449.03 271.398 448.111 271.374 448.034 cv
271.118 447.523 270.773 446.669 270.339 445.468 cv
270.058 444.83 269.841 444.268 269.688 443.782 cv
269.611 445.468 li
269.535 448.072 li
269.458 455.619 li
269.42 461.595 li
269.42 461.824 269.356 461.965 269.229 462.016 cv
269.1 462.067 268.947 462.086 268.769 462.073 cv
268.59 462.061 268.449 462.054 268.347 462.054 cv
267.504 462.093 li
267.045 462.144 266.713 462.169 266.509 462.169 cv
266.125 462.169 265.902 462.086 265.838 461.92 cv
265.774 461.754 265.755 461.403 265.781 460.866 cv
265.781 460.023 265.768 459.22 265.743 458.453 cv
265.666 453.742 li
265.666 453.027 265.691 452.28 265.743 451.501 cv
265.793 450.723 265.832 450.026 265.857 449.413 cv
265.985 447.575 266.049 446.285 266.049 445.545 cv
266.125 438.344 li
266.087 436.274 li
266.087 435.381 266.151 434.871 266.279 434.742 cv
266.355 434.666 266.445 434.628 266.547 434.628 cv
266.624 434.628 266.738 434.653 266.892 434.704 cv
267.045 434.756 267.236 434.769 267.466 434.742 cv
267.696 434.718 268.015 434.704 268.424 434.704 cv
268.909 434.704 269.267 434.73 269.497 434.781 cv
269.726 434.857 269.892 435.043 269.994 435.336 cv
270.096 435.63 270.186 435.963 270.263 436.332 cv
270.339 436.703 270.402 436.99 270.454 437.194 cv
270.582 437.884 270.881 438.841 271.354 440.067 cv
cp
f
302.477 449.988 mo
302.477 449.86 302.387 449.58 302.208 449.146 cv
302.055 448.763 301.825 448.048 301.519 447 cv
301.289 446.157 301.059 445.43 300.83 444.816 cv
300.574 444.051 300.299 443.145 300.006 442.098 cv
299.712 441.051 299.54 440.373 299.489 440.067 cv
299.106 438.714 298.85 438.037 298.723 438.037 cv
298.646 438.037 298.518 438.382 298.34 439.071 cv
298.11 439.914 li
297.931 440.604 297.701 441.465 297.42 442.499 cv
297.139 443.533 296.884 444.408 296.654 445.123 cv
296.501 445.788 296.291 446.624 296.022 447.632 cv
295.754 448.642 295.543 449.337 295.39 449.72 cv
295.339 449.873 295.313 449.963 295.313 449.988 cv
295.313 450.167 295.396 450.282 295.563 450.333 cv
295.729 450.384 295.894 450.403 296.061 450.391 cv
296.226 450.378 296.334 450.371 296.386 450.371 cv
298.608 450.294 li
298.914 450.243 299.348 450.218 299.91 450.218 cv
301.979 450.256 li
302.31 450.256 302.477 450.167 302.477 449.988 cv
cp
309.256 462.016 mo
309.256 462.118 309.116 462.169 308.835 462.169 cv
306.69 462.169 li
306.588 462.169 306.504 462.149 306.441 462.111 cv
306.377 462.073 306.32 461.978 306.269 461.824 cv
306.167 461.544 306.026 461.084 305.848 460.445 cv
305.618 459.808 305.464 459.232 305.388 458.722 cv
305.311 458.339 305.189 457.879 305.024 457.343 cv
304.857 456.807 304.711 456.398 304.583 456.117 cv
304.354 455.632 304.149 455.083 303.971 454.47 cv
303.626 453.358 li
303.498 453.078 303.402 452.905 303.338 452.842 cv
303.274 452.778 303.166 452.746 303.013 452.746 cv
302.477 452.746 302.081 452.759 301.825 452.784 cv
300.178 452.861 li
299.974 452.887 299.029 452.899 297.344 452.899 cv
295.007 452.899 li
294.931 452.899 li
294.777 452.899 294.663 453.04 294.586 453.32 cv
294.509 453.703 li
294.356 454.432 li
294.305 454.56 294.139 455.3 293.858 456.653 cv
293.781 457.088 293.653 457.649 293.475 458.339 cv
293.423 458.85 293.309 459.271 293.13 459.603 cv
293.079 459.679 293.015 459.858 292.938 460.139 cv
292.862 460.42 292.798 460.65 292.747 460.828 cv
292.67 461.033 292.581 461.364 292.479 461.824 cv
292.402 461.996 li
292.288 462.149 li
292.236 462.163 292.159 462.169 292.058 462.169 cv
291.292 462.169 li
291.062 462.169 290.998 462.003 291.1 461.671 cv
291.138 461.479 li
291.177 461.288 li
291.202 461.211 291.24 461.097 291.292 460.943 cv
291.636 459.526 li
291.687 459.373 291.776 459.104 291.904 458.722 cv
292.032 458.339 292.121 457.981 292.172 457.649 cv
292.3 457.036 292.542 456.104 292.9 454.853 cv
293.207 453.78 li
293.691 452.197 293.998 451.086 294.126 450.447 cv
294.663 448.418 li
294.917 447.575 295.071 447.038 295.122 446.809 cv
295.3 446.043 295.556 445.085 295.888 443.936 cv
296.156 442.863 li
296.386 442.059 li
296.641 441.191 296.858 440.565 297.037 440.182 cv
297.088 440.028 297.273 439.499 297.593 438.592 cv
297.912 437.687 298.123 436.964 298.225 436.428 cv
298.403 435.815 298.589 435.355 298.78 435.049 cv
298.972 434.742 299.233 434.59 299.565 434.59 cv
299.693 434.59 299.82 434.704 299.948 434.935 cv
300.076 435.164 300.204 435.445 300.332 435.777 cv
300.459 436.109 300.548 436.352 300.6 436.505 cv
300.804 436.99 301.161 438.203 301.672 440.144 cv
301.979 441.216 li
302.004 441.421 302.425 442.672 303.243 444.97 cv
303.971 447.077 li
304.66 448.877 li
305.375 450.895 305.834 452.12 306.039 452.555 cv
306.933 455.262 307.456 456.896 307.609 457.457 cv
307.788 458.122 308.075 458.951 308.471 459.947 cv
308.867 460.943 309.09 461.505 309.142 461.633 cv
309.218 461.812 309.256 461.939 309.256 462.016 cv
cp
f
330.688 434.857 mo
330.752 434.985 330.777 435.158 330.765 435.375 cv
330.752 435.592 330.746 435.752 330.746 435.854 cv
330.771 436.186 330.707 436.415 330.554 436.543 cv
330.4 436.671 330.158 436.734 329.826 436.734 cv
329.621 436.734 329.232 436.748 328.658 436.772 cv
328.083 436.799 327.387 436.799 326.57 436.772 cv
326.417 436.772 li
326.34 443.706 li
326.302 450.447 li
326.302 451.47 326.359 452.765 326.475 454.336 cv
326.589 455.906 326.659 456.896 326.685 457.305 cv
326.838 459.348 326.915 460.497 326.915 460.752 cv
326.94 461.263 326.825 461.595 326.57 461.748 cv
326.314 461.9 325.868 461.978 325.229 461.978 cv
323.544 461.939 li
323.416 461.939 321.322 461.9 317.262 461.824 cv
314.887 461.786 li
314.632 461.786 314.504 461.531 314.504 461.02 cv
314.504 460.842 314.529 460.497 314.581 459.985 cv
314.632 459.322 314.657 458.812 314.657 458.453 cv
314.606 457.79 314.581 456.628 314.581 454.968 cv
314.581 452.746 314.612 450.371 314.677 447.843 cv
314.74 445.314 314.823 443.413 314.925 442.136 cv
314.977 441.472 315.002 440.578 315.002 439.454 cv
315.002 438.203 314.964 437.258 314.887 436.619 cv
314.198 436.581 li
311.019 436.658 li
310.813 436.658 310.712 436.454 310.712 436.045 cv
310.75 435.202 li
310.75 434.998 310.782 434.864 310.846 434.8 cv
310.91 434.736 311.019 434.704 311.171 434.704 cv
311.273 434.704 311.401 434.718 311.555 434.742 cv
311.708 434.769 311.886 434.781 312.091 434.781 cv
320.25 434.742 li
326.915 434.666 li
327.962 434.641 329.034 434.628 330.133 434.628 cv
330.439 434.653 330.624 434.73 330.688 434.857 cv
cp
f
349.591 457.056 mo
350.918 454.795 351.582 451.955 351.582 448.532 cv
351.582 446.438 351.27 444.505 350.645 442.729 cv
350.018 440.955 349.137 439.537 348.001 438.478 cv
346.865 437.418 345.556 436.888 344.075 436.888 cv
343.947 436.888 343.609 436.888 343.061 436.888 cv
342.51 436.888 342.031 436.978 341.623 437.156 cv
341.215 437.335 340.844 437.603 340.513 437.96 cv
339.67 438.803 338.961 439.575 338.387 440.277 cv
337.813 440.98 337.237 442.021 336.663 443.399 cv
336.088 444.778 335.801 446.375 335.801 448.188 cv
335.801 450.333 336.063 452.331 336.586 454.183 cv
337.109 456.034 337.946 457.541 339.096 458.702 cv
340.244 459.864 341.725 460.445 343.539 460.445 cv
346.245 460.445 348.263 459.315 349.591 457.056 cv
cp
352.253 439.569 mo
353.186 441.306 353.836 442.997 354.207 444.645 cv
354.576 446.292 354.762 447.588 354.762 448.532 cv
354.762 450.116 354.514 451.955 354.016 454.048 cv
353.518 456.143 352.451 458.09 350.816 459.89 cv
349.182 461.69 346.82 462.59 343.73 462.59 cv
339.49 462.59 336.478 460.126 334.69 455.197 cv
333.898 452.976 333.451 450.499 333.35 447.767 cv
333.35 445.52 333.822 443.381 334.768 441.351 cv
335.711 439.32 336.956 437.692 338.502 436.467 cv
340.047 435.24 341.637 434.628 343.271 434.628 cv
344.752 434.628 345.855 434.666 346.584 434.742 cv
347.312 434.819 347.969 435.049 348.557 435.432 cv
350.089 436.454 351.32 437.833 352.253 439.569 cv
cp
f
373.627 436.428 mo
374.84 437.629 375.715 438.765 376.251 439.837 cv
376.353 440.093 376.455 440.361 376.557 440.642 cv
376.659 440.923 376.748 441.165 376.825 441.369 cv
376.863 441.561 li
376.768 441.752 li
376.704 441.804 376.621 441.849 376.52 441.887 cv
376.416 441.925 376.302 441.982 376.174 442.059 cv
375.293 442.519 li
374.398 443.004 373.773 443.323 373.416 443.477 cv
372.854 443.809 372.395 444.103 372.037 444.357 cv
371.31 444.855 li
371.156 444.983 370.913 445.149 370.582 445.354 cv
370.479 445.43 370.377 445.468 370.275 445.468 cv
370.122 445.52 370.02 445.545 369.969 445.545 cv
369.841 445.545 369.732 445.455 369.643 445.276 cv
369.553 445.098 369.471 444.957 369.395 444.855 cv
369.343 444.778 369.241 444.625 369.088 444.396 cv
368.935 444.166 368.749 443.968 368.532 443.802 cv
368.314 443.636 368.066 443.553 367.785 443.553 cv
367.02 443.553 366.419 444.146 365.984 445.334 cv
365.551 446.521 365.334 447.767 365.334 449.068 cv
365.334 450.27 365.365 451.232 365.43 451.961 cv
365.493 452.688 365.697 453.358 366.043 453.972 cv
366.387 454.585 366.955 454.891 367.747 454.891 cv
368.768 454.891 369.483 454.253 369.893 452.976 cv
370.07 452.439 370.16 451.802 370.16 451.061 cv
369.395 450.907 li
368.781 450.806 368.334 450.741 368.054 450.716 cv
367.568 450.665 367.326 450.486 367.326 450.18 cv
367.326 450.001 367.428 449.503 367.633 448.686 cv
367.76 448.277 367.887 448.034 368.016 447.958 cv
368.143 447.881 368.334 447.856 368.59 447.881 cv
368.717 447.907 369.018 447.952 369.49 448.016 cv
369.963 448.079 370.709 448.162 371.73 448.265 cv
373.838 448.57 li
375.268 448.775 376.225 448.891 376.711 448.915 cv
377.145 448.941 377.438 449.171 377.592 449.604 cv
377.643 449.86 377.654 450.078 377.63 450.256 cv
377.451 453.423 376.857 455.932 375.849 457.783 cv
374.84 459.635 373.672 460.918 372.344 461.633 cv
371.016 462.348 369.701 462.705 368.398 462.705 cv
367.224 462.705 365.825 462.335 364.204 461.595 cv
362.582 460.854 361.121 459.475 359.818 457.457 cv
358.516 455.44 357.864 452.695 357.864 449.222 cv
357.864 445.188 358.478 442.091 359.703 439.933 cv
360.929 437.775 362.308 436.352 363.84 435.662 cv
365.372 434.973 366.828 434.628 368.207 434.628 cv
370.607 434.628 372.414 435.228 373.627 436.428 cv
cp
f
385.367 442.787 mo
386.848 442.735 387.997 442.634 388.814 442.48 cv
389.988 442.276 390.877 441.995 391.477 441.638 cv
392.076 441.28 392.377 440.718 392.377 439.952 cv
392.377 439.441 392.109 439.001 391.572 438.631 cv
391.036 438.261 390.391 437.979 389.639 437.788 cv
388.885 437.597 388.227 437.501 387.666 437.501 cv
387.027 437.476 386.133 437.462 384.984 437.462 cv
383.682 437.462 li
383.451 442.825 li
384.295 442.825 384.933 442.813 385.367 442.787 cv
cp
399.731 462.016 mo
399.731 462.067 399.668 462.156 399.54 462.284 cv
399.311 462.438 398.735 462.514 397.816 462.514 cv
397.152 462.514 396.73 462.469 396.553 462.38 cv
396.373 462.29 396.239 462.144 396.15 461.939 cv
396.061 461.735 395.99 461.582 395.939 461.479 cv
395.863 461.326 395.55 460.886 395.001 460.158 cv
394.451 459.43 394.037 458.875 393.756 458.491 cv
392.402 456.756 391.229 455.185 390.232 453.78 cv
389.619 452.912 388.482 451.418 386.822 449.299 cv
386.21 448.532 li
383.566 445.238 li
383.414 446.771 li
383.311 447.536 383.285 448.456 383.337 449.528 cv
383.414 450.243 383.465 452.095 383.49 455.083 cv
383.516 458.07 383.528 460.254 383.528 461.633 cv
383.528 462.041 383.375 462.303 383.068 462.418 cv
382.762 462.533 382.404 462.59 381.996 462.59 cv
381.817 462.59 381.703 462.514 381.651 462.36 cv
381.6 462.207 381.568 462.041 381.556 461.862 cv
381.543 461.685 381.537 461.569 381.537 461.518 cv
381.485 461.109 381.46 460.509 381.46 459.718 cv
381.46 459.207 381.473 458.824 381.498 458.568 cv
381.523 457.189 381.563 454.782 381.613 451.348 cv
381.664 447.913 381.689 444.83 381.689 442.098 cv
381.689 439.161 381.651 437.45 381.574 436.964 cv
381.549 436.76 381.537 436.492 381.537 436.16 cv
381.537 435.777 381.594 435.534 381.709 435.432 cv
381.824 435.33 381.996 435.279 382.227 435.279 cv
382.736 435.279 383.234 435.292 383.721 435.317 cv
387.895 435.394 li
389.428 435.394 391.023 435.662 392.684 436.198 cv
394.344 436.734 395.174 437.73 395.174 439.186 cv
395.174 440.565 394.662 441.638 393.641 442.403 cv
392.619 443.17 391.477 443.693 390.213 443.974 cv
388.949 444.256 387.844 444.396 386.899 444.396 cv
386.567 444.396 386.389 444.383 386.363 444.357 cv
386.516 444.511 387.525 445.864 389.389 448.418 cv
395.007 455.951 398.109 460.012 398.697 460.599 cv
399.387 461.288 399.731 461.761 399.731 462.016 cv
cp
f
412.679 449.988 mo
412.679 449.86 412.589 449.58 412.41 449.146 cv
412.257 448.763 412.027 448.048 411.721 447 cv
411.49 446.157 411.261 445.43 411.031 444.816 cv
410.775 444.051 410.501 443.145 410.207 442.098 cv
409.914 441.051 409.741 440.373 409.69 440.067 cv
409.308 438.714 409.052 438.037 408.924 438.037 cv
408.848 438.037 408.72 438.382 408.541 439.071 cv
408.312 439.914 li
408.133 440.604 407.902 441.465 407.622 442.499 cv
407.341 443.533 407.086 444.408 406.855 445.123 cv
406.703 445.788 406.492 446.624 406.224 447.632 cv
405.955 448.642 405.745 449.337 405.592 449.72 cv
405.541 449.873 405.516 449.963 405.516 449.988 cv
405.516 450.167 405.598 450.282 405.764 450.333 cv
405.93 450.384 406.096 450.403 406.262 450.391 cv
406.428 450.378 406.536 450.371 406.588 450.371 cv
408.81 450.294 li
409.115 450.243 409.55 450.218 410.111 450.218 cv
412.18 450.256 li
412.512 450.256 412.679 450.167 412.679 449.988 cv
cp
419.458 462.016 mo
419.458 462.118 419.317 462.169 419.037 462.169 cv
416.892 462.169 li
416.789 462.169 416.706 462.149 416.643 462.111 cv
416.579 462.073 416.521 461.978 416.471 461.824 cv
416.368 461.544 416.228 461.084 416.049 460.445 cv
415.819 459.808 415.666 459.232 415.59 458.722 cv
415.513 458.339 415.392 457.879 415.226 457.343 cv
415.06 456.807 414.912 456.398 414.785 456.117 cv
414.556 455.632 414.351 455.083 414.172 454.47 cv
413.827 453.358 li
413.699 453.078 413.604 452.905 413.54 452.842 cv
413.476 452.778 413.368 452.746 413.215 452.746 cv
412.679 452.746 412.282 452.759 412.027 452.784 cv
410.38 452.861 li
410.176 452.887 409.23 452.899 407.545 452.899 cv
405.209 452.899 li
405.133 452.899 li
404.979 452.899 404.864 453.04 404.787 453.32 cv
404.711 453.703 li
404.558 454.432 li
404.506 454.56 404.34 455.3 404.06 456.653 cv
403.982 457.088 403.855 457.649 403.677 458.339 cv
403.625 458.85 403.51 459.271 403.332 459.603 cv
403.28 459.679 403.217 459.858 403.141 460.139 cv
403.063 460.42 403 460.65 402.949 460.828 cv
402.872 461.033 402.782 461.364 402.681 461.824 cv
402.604 461.996 li
402.489 462.149 li
402.438 462.163 402.361 462.169 402.26 462.169 cv
401.493 462.169 li
401.264 462.169 401.199 462.003 401.302 461.671 cv
401.34 461.479 li
401.379 461.288 li
401.403 461.211 401.441 461.097 401.493 460.943 cv
401.838 459.526 li
401.889 459.373 401.979 459.104 402.105 458.722 cv
402.233 458.339 402.322 457.981 402.374 457.649 cv
402.502 457.036 402.744 456.104 403.102 454.853 cv
403.408 453.78 li
403.893 452.197 404.199 451.086 404.328 450.447 cv
404.864 448.418 li
405.119 447.575 405.272 447.038 405.324 446.809 cv
405.502 446.043 405.758 445.085 406.09 443.936 cv
406.357 442.863 li
406.588 442.059 li
406.843 441.191 407.061 440.565 407.238 440.182 cv
407.29 440.028 407.475 439.499 407.795 438.592 cv
408.113 437.687 408.324 436.964 408.426 436.428 cv
408.605 435.815 408.791 435.355 408.982 435.049 cv
409.174 434.742 409.436 434.59 409.768 434.59 cv
409.895 434.59 410.021 434.704 410.15 434.935 cv
410.277 435.164 410.405 435.445 410.533 435.777 cv
410.66 436.109 410.75 436.352 410.801 436.505 cv
411.006 436.99 411.363 438.203 411.874 440.144 cv
412.18 441.216 li
412.205 441.421 412.627 442.672 413.444 444.97 cv
414.172 447.077 li
414.861 448.877 li
415.576 450.895 416.036 452.12 416.24 452.555 cv
417.134 455.262 417.658 456.896 417.812 457.457 cv
417.989 458.122 418.276 458.951 418.673 459.947 cv
419.068 460.943 419.292 461.505 419.344 461.633 cv
419.42 461.812 419.458 461.939 419.458 462.016 cv
cp
f
434.933 446.693 mo
435.75 446.133 436.158 445.123 436.158 443.668 cv
436.158 442.11 435.839 440.929 435.201 440.124 cv
434.563 439.32 433.63 438.803 432.404 438.573 cv
430.489 438.19 428.982 438.037 427.885 438.113 cv
427.885 438.829 427.871 439.365 427.847 439.723 cv
427.795 441.152 427.731 442.174 427.655 442.787 cv
427.553 443.681 427.526 444.689 427.578 445.813 cv
427.655 447.307 li
429.455 447.422 li
430.145 447.498 431.089 447.536 432.29 447.536 cv
433.234 447.536 434.115 447.256 434.933 446.693 cv
cp
437.863 437.462 mo
439.024 438.79 439.605 440.782 439.605 443.438 cv
439.605 445.175 439.235 446.554 438.495 447.575 cv
437.754 448.597 436.898 449.305 435.929 449.701 cv
434.958 450.097 434.103 450.294 433.362 450.294 cv
432.673 450.294 431.511 450.371 429.877 450.524 cv
428.932 450.627 428.165 450.69 427.578 450.716 cv
427.526 453.065 427.502 454.661 427.502 455.504 cv
427.502 458.824 427.54 460.624 427.616 460.905 cv
427.667 461.16 427.622 461.384 427.482 461.575 cv
427.342 461.767 427.163 461.895 426.946 461.958 cv
426.729 462.022 426.531 462.016 426.353 461.939 cv
426.275 461.914 426.059 461.9 425.701 461.9 cv
424.936 461.9 424.117 461.952 423.25 462.054 cv
422.841 462.105 422.573 462.022 422.445 461.805 cv
422.317 461.589 422.254 461.25 422.254 460.79 cv
422.254 460.229 422.267 459.718 422.292 459.258 cv
422.33 456.04 li
422.407 451.521 li
422.561 446.106 422.637 441.881 422.637 438.841 cv
422.637 437.922 422.624 437.373 422.599 437.194 cv
422.547 436.633 422.521 436.301 422.521 436.198 cv
422.521 435.534 422.662 435.202 422.943 435.202 cv
423.07 435.202 423.332 435.216 423.729 435.24 cv
424.124 435.267 424.68 435.279 425.395 435.279 cv
425.599 435.279 426.123 435.267 426.965 435.24 cv
427.808 435.216 428.689 435.202 429.608 435.202 cv
430.962 435.202 432.251 435.24 433.478 435.317 cv
435.239 435.42 436.701 436.135 437.863 437.462 cv
cp
f
451.097 445.736 mo
451.633 445.736 452.131 445.711 452.591 445.659 cv
452.744 445.635 452.986 445.621 453.318 445.621 cv
453.676 445.621 453.944 445.635 454.123 445.659 cv
455.004 445.736 li
455.119 444.587 li
455.233 442.748 li
455.311 438.994 li
455.387 436.045 li
455.412 435.662 455.464 435.407 455.54 435.279 cv
455.617 435.151 455.795 435.075 456.076 435.049 cv
456.331 435.049 457.047 434.973 458.222 434.819 cv
458.426 434.794 458.796 434.781 459.332 434.781 cv
460.149 434.781 460.826 434.819 461.362 434.896 cv
461.644 434.947 461.815 435.005 461.88 435.068 cv
461.943 435.132 461.981 435.24 461.994 435.394 cv
462.007 435.547 462.026 435.688 462.052 435.815 cv
462.052 436.224 462.014 436.913 461.938 437.884 cv
461.835 439.672 461.784 440.897 461.784 441.561 cv
461.784 441.894 461.707 442.953 461.554 444.74 cv
461.4 446.682 461.324 447.945 461.324 448.532 cv
461.4 456.117 li
461.4 458.978 461.452 460.727 461.554 461.364 cv
461.554 461.441 li
461.554 461.723 461.503 461.895 461.4 461.958 cv
461.299 462.022 461.184 462.048 461.056 462.035 cv
460.928 462.022 460.839 462.016 460.788 462.016 cv
460.583 461.965 460.328 461.939 460.021 461.939 cv
459.92 461.939 459.587 461.965 459.026 462.016 cv
458.311 462.093 457.161 462.131 455.578 462.131 cv
455.502 462.131 li
455.144 462.131 454.966 462.016 454.966 461.786 cv
454.966 461.301 454.959 460.344 454.946 458.913 cv
454.934 457.483 454.889 456.437 454.813 455.772 cv
454.761 454.802 454.735 453.856 454.735 452.938 cv
454.71 452.555 454.697 451.967 454.697 451.176 cv
453.587 451.176 li
451.939 451.214 li
451.25 451.252 li
450.484 451.214 li
450.101 451.214 449.795 451.201 449.564 451.176 cv
449.45 453.589 li
449.373 454.482 449.335 455.645 449.335 457.074 cv
449.335 459.028 li
449.335 460.407 449.36 461.237 449.411 461.518 cv
449.462 461.824 449.417 462.01 449.277 462.073 cv
449.137 462.138 448.971 462.169 448.779 462.169 cv
448.588 462.169 448.454 462.169 448.377 462.169 cv
448.173 462.144 447.828 462.111 447.343 462.073 cv
446.857 462.035 446.462 462.016 446.155 462.016 cv
445.045 462.093 li
444.865 462.118 444.202 462.169 443.053 462.245 cv
442.465 462.322 442.172 461.965 442.172 461.173 cv
442.21 459.679 li
442.287 456.921 li
442.287 456.359 442.299 455.836 442.325 455.351 cv
442.363 450.907 li
442.363 449.887 442.351 449.235 442.325 448.954 cv
442.248 448.366 442.21 447.601 442.21 446.655 cv
442.248 444.319 li
442.273 443.936 442.287 443.438 442.287 442.825 cv
442.287 442.11 442.363 440.629 442.517 438.382 cv
442.632 435.738 li
442.632 435.534 442.67 435.394 442.746 435.317 cv
442.823 435.24 442.938 435.202 443.091 435.202 cv
443.589 435.24 li
443.921 435.292 444.355 435.33 444.892 435.355 cv
445.428 435.381 445.951 435.394 446.462 435.394 cv
448.224 435.355 li
448.505 435.33 448.823 435.317 449.182 435.317 cv
449.22 435.317 li
449.424 435.317 449.526 435.458 449.526 435.738 cv
449.552 435.79 449.57 436.294 449.584 437.252 cv
449.597 438.209 449.603 439.339 449.603 440.642 cv
449.603 441.459 449.577 442.557 449.526 443.936 cv
449.45 445.698 li
451.097 445.736 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (\600\755\750\762\740) ()%%Title: (Untitled-18-01.eps)%%CreationDate: 18.05.2019 19:21%%Canvassize: 16383%AI9_DataStream%Gb",KpHfNrqs\e3gdBR[;'AUdJ4eN<Ll-_r?q:KXUm^5FmiT;[s.48VbaHts<=!ErKnO)6H[7\bAel3SXa[T[CS'Zms/]d4>W8uu%H%*d,oSg5_\G3G>+*K"j.CL`)7bI(pF]t'7gF]etX\O'l;tsL5AtG>biCZ-%5-3@?IqS?FEoh[W0t2!A"grXnZoX1e0B6S#KUG?[%olV)I5^3-d@/"?H!K_r<f7PBb^c:NV<aM=,JFqaIa8PM7f'RV&]iqK4q*)10D*'lJ6.deG*/7Y?kj[IB>g*o"PB+Fpis@M]/,7i1%T7IRqAmVnXd%sJI9V^'dReVsDd_,o/s'*n@s1$bO2uIQ(b`#!>m-PO-$A5ND>/ml,WZg*^A&_lm72#8SX`gJp3U[IL#VR9SNHW"j%$]0^pD.N%XMIBZWU&H4h!csa^\n,GRCg2MrNoagl>rIPM*r`*lJ$3FTL?31&@HQ]5]n>&=J;]HTARHMeh=&t5cKf)E#:jm-j>1G?%\#NjW0TZ&7oeJ7*_4,mpK>V`m2!fcq[d&;%b?Dp7`2+:K`btTbLuP?(">AM<o<@nB<k+lNB#_q0=l%Ef^?0!Kh)6S>S;\b,,3JHH%fH!&s;-dSZ*_>>7:@5F>>[+J(b_fmj/>l^C=u@'of>r47MoO"fb)\3*G`dMpY89+9U35Lpn6?QL/c5Hr-TF6S2iaBh)A:6_1;8tB%?p/cHq.?ne.g&ura4>bSs(([bHXV,,;1j@qM8(&9J,;G//efS\2"B$OnZ$<_<R^$06%HYZQfDI(a2,M1#?s1u[W7l\OCS,N[dec^%j24+JmJGPYpTYH^_r'+H:r$+c!qn/Zn4KC)D1Vbk#(bfBmi]F36,7nn`OoM`&'r<uZ)>6PRL>&K)d=I\p`!E\:(gL>L)AlfCkES`%Do>jXK)6`ep`'6"N:8cd`,t"$&L745GiL/<&LX*4WQFaA/&VgFA"+T+R,ed\S8$2HA1HPVm`Cjfl?Vd02P(pj/pS^Hn3:`Cpu--2%M)iXZo/5YIIUXhG:NDi%_L3"\r/H1LG0GI6bpu9irl.up+9#k)ZBR%KH%)8\aoJSLb)bU$YE,ZCXdF!h/rVfo*`pYQid#f[aY.NT%s'Zkb:.cjBLV4R@^5D^EDf!D`NVG5&\1dj$2Mg2+U6KJn4%qZ+JYcSnY`okOD7FVP'UAp%(Qt[iG?u:gS`aRqiQ<H:,]:8<CaE`W%dCDJKkC:-bekDBAjuLnF7gS<#bAXKLgh1%mC29nRP"r:KZZJjNO6$n!a"ent4m'&GEm+bnOea8rNi=2R.b?36j`.i/Y&!Y?5M7OO%ih'ZKQ2$RC=Vh#XJ+C@.7IZ'(0E1$^Y02=8TD[%,pi"KBF*lnR0#q&Q:]?^,oAB'cs'&SV()[a7o"S(Zs,K>>T,.B8H]GbVhoo1$%>Q2U6J=g6b/3=,X_8Uo>:]3V`=mhh2dI/NVfK3B^;4f8_^Xi#Ik.X#!qm3tW-2@"dC@lAc-[d*7+c[!te,K9=hJ'2ci-do6H.^lX%EWQ)_SqXrD]D-aJ'775Xr69^in%fbcnJS8W7uaIm*K;(J0An.noRbN^.iK?+Ga@aOrZp4&L>iOf;O=p.+C;t!-hSa2"N6G@g+I-.%rfrLh#5B[c[>en6=`-]iJiKDC\4$r+2#`eg*SUtR?h3cJk%LW/k&jT]:&Ei$Q4$fM+_qYm#1-V]M&&8X#UNo+eWp5c8,6_ap2Z1Z%YY7>6pIGH)ahgjQ5!mkpV,fk:(Dbu=5ubppQD8_+DuhKon\,k%Ou14/#"XG^4.7173Sd)^'OKr6CJ8r&F*YtHiAZ57#-CWse0#ON%q)g"G`(1p?EcqF<:b_Lfan#!n=#3(tpSH9B1jVO?@8%'T!rO'F&P/g.g;FU"%r($:B\-q23T`<jbta9%p7R40aa(i%`#M[iO`&U1%i[7WhB):W1j.cGmr]u";,k--0;,)k#!RIM&#([d'nf1[_0HRT80uk7=V$b8^r^\m[BUDOq8+SgEV?>[b+pF5(5[[t)Jt=$)_6d>I%U`Uh<-kNSI&W#'7J8>>B[_]LOU.E2`O0ElXlk4cab"&g0X5W*H7/$_k*,BSX#G@?-P]GhDkrS_JCR:8#Mg4[]pX+&WmXk]Y9X=@Y%a)f^@2412s;fs(,]1'*>UU;Q5k(jkjPPgFbZr(n/R-16IUT=VkFJ/Pj=fnp1Q3!REBP8l&5P,'7^ic_@9&_hArgL2fimb?ll(jUC%)#G+*Da<0>g`+B8ane^`$9:?63bc:kBH=^`D+SZ*7a92-Th_jg[E1XH[c(sZNBPd4)TVCPr3'LgO(!Nlhg_qU^j;)T)8I>`m'EH)%,q!Z&3)WKE*cDL.JY1+I^'U%.JJ,hK#S!?WF8Y3sfO=X>[(2U6llRZ?"s7RV8-KTF=g"("h3!i:"F>DcLP80iK7d&V)uQ:>/\oA0%8-@T_O_,bo4Z*VOnBFgrDHP(As2JgX'4h2oJ;T'%7UIR\^=['TpB>lc]Rd`s8!lUaL42BC5gq<BR?JjiMY9jNI*8uq-U9IW`aH,L%.>kbi5s:/%&),um7F4#HjM+FDn9iD/?sZ&WpK2;(=;H;,`q)W\LgVq:%L,+pC&!B4K*gGO]bSVMD;`0/rX0Z2nMse[aQk"=`QTR;%l>cI98q7<#_92YcS;r)O>R\U@jIPjH\bNl9:0PUc'M/.0[YRtH4GI^Jh/q:rT]`N]oUj,W-=\kH-&cLB^&4DZg8=0MEfj[RAcZsp%MVel'LOZLMaGC`VY)Okp?5/TL3DjqXl5YlC=fOk\c[ii.1/(+Xe@A(jKX,P9.:JGL%q774Il#san4\AI:K7eD+j@glZjoF2LA7rW%kEm]9;&YZi;5%rr$62>;cN-8*nK+NpCgSl/"mQi\5MJ*+;WJ1uj\-/`J9g-mZOSHk&J[c=LKJ"XM3_VH.*K%f2Q(Op,KD[1&N4Kj%/7;HZCEAYA[Z=;e^Vq$4%mG;SbSeH@r8OtK/F0UN^hqf'2^gIQ2>.TGK-p.bk1[$r`*1:Q3DojVaV71EA!3*2/Qo\p=hoodBoCN#%Y<,u32dfjOi:sgS!Qh"kCc*o@U`(N@=*>3l;=b]sQR"!nOM0`q%7U@;b;KF&VT=281Yi$]luNAZEP!nU/LXb"%MT:*p2d10)>3/b%SA^k3P(Ij'[\olH26!A;HXg2$3@J<A$`c^0(#b#\2T$I,^XGBeAJUDoO48XSajLgB98XcYG(Jq@-.Wm[:>+mJQrDP.jQE1A!6S4+%KjJq2dIu6WY^\KK]fFG"Mrc97D&9Yk!uND-?;O@IN#>&jpJ`+;k8nIPU3._2ph1Cr298]9$N<?di4Nsk^/i&5"5@5n3V)I,X?38_%%dMbJ^C^!`g5kk2M36?F#sT*2+J1F*1*n@oG6Op_=?qq(<W]B)aobfRgI1@[[Lr7jBI&\3l.1B\`tLO+Yn*+bSnU)KV8NXBMd)5$%q_2hQh4Z*r!dWQf*'J8K(Sf-,7?e"GlH0f&jb6L9,()jqY3-SJVP;te\erQi=fXjVNO')sqnOtQ<+n*T^>b$Ki7M/d2(/jBM]aNq%NY=[JMKq>D9,Q<oHNmFl)PA'X/NOa03mAZN:Ls>:QW#I#R<#.ODPJ"<JOpe(=$BAHL3r!WSd0!ORbZjBZ3pcG_`e-3VV"gDg^KU'%iG+h?EK!Wh.1YeR7/MF"imFWT[2+(?F[2r2(/S="$bdB$S4h"2Z8\`>b)`Ig]>p4N8H1j;9*E0PNXmK(7_m/$l?6^VaSQ3U#u&R`%4KnuW't+VC7u(&+dP6i.OHl!1IgTE=P6;THZK;5>K&dt98ST^:i.+8c31?*EYg<YEIq43Qm1(Oh9p's6YdT<A!(I/0Hcgai`):Xf%-X6fr4I!+W<oAC6=:4s8]o>S>Tf);:\tgbd@@?Bu$JoijQ3m<FLH$725*sJun[In,0A=#k&_3fr8n?`"/4<LXBNK,:(#YXS,X#fW%<Kjg`PQ2bmI"BVX!$R_r#]",6?>ChT-,^bn:7!_\k!,t$-gYtNePM<&+[cpG)T0pNQGc;I*QS@n/J/s*$MeM?Kb&r]adct-Io%B7%UgEO.'3m-WVW/3UEapC7:Bhs8E]97oU-Q>HNmMiA,C^kR4D,cRVoH8RElS9eB:_S5!Nj0;)XNT/dk0NY=h@N'43.?AAFIe7nU;eQ%F:LeBagboh2PBH3=GY8VTN>Zafjl+:B0Dse-l8#;HWYV\3XtO`$ruK?*tRC9GohYk*-*"'_T7Zu0N_/9".YQr"&[H"=_>K6Q]O^*%2k+klanq!e<tmM0Wl![A>=I=Y7Z"nr0K*W%7gGJ0CoJ3rZe46ZJa2upGo=WsgBPe&_YB&rjQeGXNcYJ@A+LEk0>.V@0_/Uo?-Ha1%e!RN6`*&)(ROM_HeW7&DYe:\fK#&(TnqH0Mgf5/Vd6lWgQ?LD"YQP+R.1e^k,)L$u(5;cW++u#6!'@R+k_lBs,rgM6;+o;,,Mo.@%g+9g-]AAbL_!'KY$#R.gOG%\)ZMJBM;,.KZMApA'B<EbFpUQ15p(Gc3X;"5Z&DP,9CH>Jh&1?Npb!Ua3,&IA$CNrRKQLm`iM`eF2%/J]2J0s]j]iGGp@EBM%F?^sj_JmafrRGrE*:Ts+(N/I1>hHYR]0jLRZ;SZ[YPaD@gV:!I`r)"T?<5;O$CAl4,:@\Ua1kfC@KApYi%"eMY7)Ns5pJbZ).H&UU.:js\)98O'"8CWbb29J4r"#!BB!@<[e9FG*cRA8Pk>HqF"'VZc>7<K""_6KDT[YtL3eMKd;$nMg#?`mq(%,3o6a&Z5X#1@DrXE[#NCoqU*J'%QO2BO:Lki*Hod)niPmXFRQ%g-#"sU:stY=TE4,29fQd@I!nFl(lN,C'KgH`ni6U*9EB.kEBt_%H`3cS]7`DaSI(+A;'thO-;fb5#jdEqU-u4h;>Z2M!VJR\39+%)s1k3,,i*!X/1eN>)W28<]T.7c<]5%e/)ZFM?KI&`0\0-][HAj;%R=Jn2f4BnC\r[jFqh^]U`k2W@-<tCd7#;u>'oWhUK!H+c#mNVhfHK/n:tHlFA,8402Z-gO,:)bCKcL&(ObW]L0,lOg?(_V'`*C>5%&9mAD$(i1V%.3q==;.D,-B2&$p4+l+DGl1JTe>aoaBTkN8"<@e#W>-O8NTb+poQkT+S9j6E?4!K+[3;fFYcX7?Ga20#QDV##dqUs%q%htLHj;=%1K?\1[%&cHg.7\lepi$W"Ye*n,kdfUo6Z]f`Y(:dGY5L5$Y_;)=A1lXD(=6mGL-)d[rOq#ZS?n=nY;Hn.oj%DnG*>N%01)Q_HrJ,#OY<@3d%4VW@?d/bY(IH,N)p4''XBX>99pdH2h]u75Dmd'cLWbsPBjor)K%)<Oj;^9(KgfuTOlA8nU.iR';&8or/(<,%V1YDCKE$Mpg\a"gD<#mZra?[0+2sADbTH?nT00p\B!LJGcVfb/go0VaI?F]TD[]G*(hJ+nSn%_b=WgfJ"ig9e\0[@fY-4fg=BJ=b%G5bs\jM*.h_`3h:Hobm/P;o.lC3Fl]YRA"O2sq9=3M/>f%`jp&s+EVjEtdS5Wcgq9JmCc[NsT=u/hs9j3:L$&a?!./NP.2@`DBhF%BAg@#Zkb4'!5DCgM;O?Oqm]FdLR_!l"6pRu*r)iF8n*^q7:H;ac$"V^9%GYungQf+qR>O6j:0H?3#'he\2pt3Zk.C+?A7#<1-D_Z%@<IU24Dn$Hqb[t[nEI0C\.2[aPQca9VN@kBUtPN6+E;.HoGR$&AmZ)YOLLo7e6mbZIS't(mJph6?arj+6]6P3EAdGm/0Dk[mpAE;%''ICooP""AT8pdp@PPoe5GTS3LnD$E89sW[V_3%A]I%;VK_JT\5d`oIW<Up4d5L!6B_UHm6p7UbkRiXu65(!(d&u:OjhNK/kgea:%e.V7MK@'_$(A`h-%#d8%p0e;Y<^_<?]Ve;TDkT9]OW;X(kG>PENY'3@diLs<-+)H4q+#hjRn6^["ViIO;5k?,#=T]d^3CL*#*f"O%aLap5,dIrdc;.:ofEY'@+C^1Hfd[&a,7U8S,LDb7pmcb#\Nu'sMI*)4SB["V#G`8Q!S@W,V1EM$Op3<Xno+Ml5AW4)VQprU872@8%ePip7h)Q>h`*!8`6Zh19p9LnlMj-b7LafXFdc)L$Ck^"c^1k]*He9g.Y-/;S$hta_5Y_q%StLgpFPuqaTi*8:d[T9c5M$^ugBsL&%s&<>;a,1^Da]#.*rBcb;P+BMC0IL>JJPYb]Z(sp)n0l%#`>&`?,.)sSo,+KpN40:Oa&,4*mr"h,\g4KG"bg4VJc\P;Lph@K/'`-_%&gKd.;1s'/daFYAT>\i=m">:(7Z%u]!8a#(9,N/Y;LsT(UqMo'a$!n74,f;W.FA65Zcn8VNuD1aJZV4=_Ai-@>fi]Y[)G$Zcp18#%&jtcHS@aIEV&`sXb\'Mos-&sCRa3%*-%U=p:YSJLJ_*=*4-I!:<ZeG`kGT_0#L4MU2(HCs-?+'fIVD2,5sNG/[KU[fLbmsWX-/D[%P#=j%_*OhE.LKL@T,LSH5NG`fqg_WjGu/]f`LScW*I4[(NK"t`mT/7>dQgLqr2-9BQ&dn63C0GG-'#LV2L(IoUQ7\?J>\e*Hl!.3%NY0;R@Qu"r2pr_m5M8FJ0?77)9>1p>#dOqt1f2Ac*nN'u.q#f:pL-LrO?Rj'aFNoO@Z_Wu[iCarR-$er*;Kgaq'33XN&bpg]?ImJ%?MoEfQ\ZZp,]>(QM0>4gAkD`P]YS92!>t(j>L+TbAt?_X.E8>hR31NB`l&@]We:t:Dom55I$%'J+f&(o[$;Jk.M<eoI`:Ld3JK7_%,.`S>LV^U#')QU!A!Bt/U_Oa@K58=`&*4ruI3:<qgLj*Nr<fsH1HfnHImNr<(d#R^*OZ5S7":mJ6hpr_:lf?"0rH5alU_K-O\?a!%#LV=XLiM'nYT-E\-UbmYE&B/,*$]_W"\EtnKY.I>)&J2O32S$Jk'cn8VAu-+Mj(kk*Md7c.H[Fr!imD@B<Ah4O9iqWV-bbCXok9o%OZ&J#H8li#)_((_dN0Z^L!WZdirg.O#;;K0YV\m6j3u&$GYa>@L^G.%)0+^CF+[Ph8tV%cA,?hj9:uB+aXT!bUlUU;$R$$Xe.CH4%&`#+bHe3hM589OcZL3gY)E-K\`6i\@:`/+L71W?"V.Tk_id=_JaFRn'@qqDt;rh'=$AVY!N!GO=#@&;1ciMnN_8npf8J.a_FME\b%C<Fr\46e0INC&Z+4W)"ch!#!Hi/gOJ%sg)\8=j!oIWK+b'D[QbQ`%#KE:'Sp;W./jZ6Esc8SoQP4-1ErjC`j_8/=J5kTlCc!bW;>%'X#YD0Y3T63%F#3j>#s5kJD?0\L$s*a?!5Sn+4(#H&?`Dgb<+V@S^EQQ775'7H_D;s7=`66<FI!+h^-T5WuqZZm:dZn/VU?Q)O`1%?1TfjiG,buS)B[(WM4"*L_H=d/&`-o8@lj>/L\(a=dk^IK6U1r%&H@P8QGjfD"+D<4K5#dQ>39G0d[dRqe.gnic4$E[9Os!H+d>Z%=m@;,l6uN<L7g2sCp&FJi,^\P?:Nnjfe(WUS,t/peWP54-#PDGD<DoMEG>_C%Cm9;b!+a5*+uL27INGT2p_j?da\ur*j6F`f%BSP%BTMCCEe1hG8-T!plu<H)QXp#.hk06\n,EX/?sYS0942'MX)0VIjAS+&*i:f.'p@,KD)ao0Sr\[GR/;H9rUWSik#e\q\Nl``$g@4D%eLN=/GKKE$nNEQ9-a#eB#-c?[IDG2m`"QdJBH[uD$bmgjb]o1G:kEnFNVGQrhZGWb*hHpFo+>,p(>5_G#<s:VhB/M65B0Xk'X1;W%c4+n0XgF`*e]Qs$P!_;_!DA&-kJmCi]H7hVY7]W$-)/=*%\kF$b,$fk^tj'^J:/g0(p6BW-i/#N))1'-Y=I/pUd2Vc'fADPk5f"D%GgJH(Wr=a0kfq4fR-M#*e5u`A@X/O<(7gEt^1?/<>>h(=7<9/g+n,5[("-@G[n#W;D<:E:8/m--SrBmN3h/H-"Mt4kV3"VENg"ZK%o6Ed#!*_jm_W)B+`;5.Y/6[JoM*?qW:S+Y!]KA".qP5d>W1hk;`0s5D806A]kp.?RIrlWdr1T5!R=QFtEEOgr_D8W=>cC#Z;!p<3%+c_h./.8%qa'UG1d"(AuB7a9="?\s&MYp1JgI"%P@h)?:NLoYS79#D7Lol:l9d65#`#^jdc;F-;.2r62c\@n\j-fG9b&a@@.B.@U%jJS4X[5IoMake7G,Y"$ME?3.5@]QHm<8t54AN(I;/hQY`Q-o:P$(l<Pbk.%G4saY0k:AhDiSVjBSta\JIZo(R51P#-:V"B>>)pO;%;2&p2rh.R<N[9#4&hVcaO.?(`=9&/3c;>?G+!nBAin^>VraHH+b&`gTXEBBg:#s@ua,o/7m<KDZdck@XX)7l\YP`TZ.,D/gd&Bm`%;"7uKr1,DkG^i6CM(sEDEE;#fh?7ENn4gfuFCQs;4Z[W-VFi!)7R+k;!R<Lhr6_]NVVeGJ#'8Au/t9@kNDB1eK]A@T#="1\kHKc5%\3hIuBE]i9V_gCm0EQO:KdD;M3@-j*L`+%t?28EH%N)*(/B<F-NOQrJN.BVJ2(5)hQ:NAF"$RTXpi/G3o5d)%JGR-GJ=g9ULs?1N%9m<%gYTCR>kt]"B3Zoc(fSLorVDI\2JWMJ!HSnFTkqAWF$AgIA+6`c%$r>$@%\P+5=^`5#-3a$XJcMuOS2sLk/hS`jfmcqKK^W2T%XO%_*^Zh=%^11I(7kJn"*QAk+!FoBc%Fu8s@<&+lMIJ;!TQ:gSrneL#r&u,?h`Ed(f//($8i80I>=&RCnOVR8lRW";YsVca%&1CU%-k@?n/4FUj[ZHW+3g'jMNRhN)p#$X.m!AF*NRhO^kNldrdpe-djOg*lbu>((%fa[!F6lsuR%:c(()KWg._[`q^D0o]I$mo7^.r@F%e#KlPq-*E]XrN,.IX?WPN^S@=]kB^t=qfdo[.&[MGXm,R5$Zh,[/01Wk"0>s.9C@,LRC)0V:Y"^rYJTk09<la+87QaoQ%.Z@Ad@]%!T<FF9t";Bhk)l5:bR%0$t"[ZoV_VWhRaVrZoX2V4$uZc+(;k5<ecSVj^pCA[bPRm+*t+sDO*@%Jk%'SepbE"1/KGA4,0RK2!f>=%5TK&U9a2r3cp5,uIA2@dNT4'Qenmf"X,t#8VcTqK_h4T;?J%fRCj`WjVtmV)?d:G&:;;.A3Gc+gnZo]V\.l9Edj#.,SX!?Np%TE_%i[g.>:a$1))EW3n)IJ#-ClUim?E]oCb3cN=A^j*mY",hg[>TkVE2+I4X5.Fjr\LOk$qi1LR8UEs7W+/':Mb+AGI^d8gT;K?b+2]q%ECsL68Zc,!WZUkK]eCd1X3npG3bAlIb3b:4\p"odbCaInqZom1C>;lk-<kn(j%BVq[Xq[':fphZ^1Pq3<o6'tIF5'LppF5)i/@KT%SY))uXCmjuC"/VkBa%&UW?(_[+g>C#@5Z[$PQtAkc>*#e-Z%db,I=rj<]7OD^Nr*Ve)c90?.0SXB3#ON^uf@:c&ZnYc].q,<I8@g%=uFJ4C'9`YB$2ue_c^)'4mPg46FOLJ/6W_h..7qBMUDe;'>6\P3aRZ_Q]>;X#*$N%_;V$>>ku_1/,sku/'i&Sjm)6>nrZ*NK3ECY%$J8rN`DU?fZM"'bj$#Gs8iRQ6mPBh&Eo\ad@k%\RYhQ@ZY\pc&jf;6ZZ_q8P>jd>4-iDg+Y,+spJ``;ZP;*fGB#!lAdOY>';]'2U%mA6T+C`W._&4oU8W(YD)Kub]>8i0:Q42rgWT<Rse:,4r%AdIB2:S@S21ZY4Zmo7.U%c!u:mq)q(h7Ng")S<4umB(Qa.77c5*J:l`%C`;89F.>ZiYedh9?(bH#9A.Wj<VR48THJ@AgoJE`,dT[1R-"_(4CO[+9UDA*=oZTsl(h74pp9so<U7q/VO9uCVC1f`/7Y-O=S%Jc%Sh\JGVKp0<c^8TF`amnUN%#2G1S6D((tU^K8@A0E9e>koO0F(P<j&n1rf?KfY^`MQlhYqjklGV0="T.kC1UXARWqVFIHfr8fDFTU%bJ-W5Y/jU]Q2BBTXk_-]a(c@lfBG%j9juYRZ^K->;n/%V<VVbWU-Gu-W-*./%=8`kr>M^)9>]p3.;g0D3'7OKC"6FY[D1&-B*kSf%pfUBi3>9Xi?*L2EdWbSZPB%s3W0C6>O_?o0ndDQ@%k59[O&LmN<6E^ul!ah+p?Ug8l(<."))bE$1Yh$]nOedAU"/N'aqm>omW"el%r"XTHf!WaWFY1l'B/Ieb$ouSts#5B!s1?,r@'<RGp3'@L;Z9A+/NaRO\1?A322XrQ3fKL"GW2JqIBd6OqBG]nb1!c?0eQAKT,"2o%DUQkO`?>TQZ-DBK@8C8,\.XD)FDE3j]5odId`pHMH4#ROIME(ML2>k8413pJ,OD8BiEEatoPqjo]!?Xa7s>`pIG"d\4Y(F>![Z1b%G2\<\pH7f4L.Jpl'S`DaTGp>u5IZ1=H'2MDDtNjNP1_fjEhcFgYLq;a1okcC1t"7V<Qs7l;5)O?k<!,I^Zi@E2t<Q"St1=?Br>4<%oi%fNCcCAXYSg0qWjR.5`Kor"8E$GP@HMbG;b5>T1^ALWnnWC%BDDD/l.1'%,6&TjOQL.g-HsgG\1]AOD%1PBoLGY0l[)G`c)iZU%C42,?D^WcCb$OLuq`gg]fC!nEc+0H+NVL`!qPK))AmKhm'ERDT]+]Me3SXA#d-@1KZ_oZ:mkCp+?/4Jc<%(Y/o&0=DSN+C;^1)h@%plD>rcHLXH'KDnt4-s6`T>'D`3%HqW@Jq=MdpqcDlp)!P\9,+OVsa[m(p2a<=6:fd[;NT_Y(ZSaKBM@i20'Fk1(6$gbAjC8$S<V'%b7&gL'47Zs8`*DK<jLOTg:!FBN72Q<ZgV*NpT\=[`**oF:<Vga'RplM<>s$+WoU(f`U-hlnR-\&4o:+!*J^,/0&e/4OcYc1]q4M*%;>i!BrAY%a'XGU)1r_d;]DSG^e$V?Y-(=Q3/USI3"3n$BP1?'T?fanVhrmkgO];ukg0T5bEOr5O;`lI^)dW=*4!CFHe(IU#f'l+7%.@:^TS3\NKdV1R:==n8FK>m+^.n,?G\q6cFl[P7N:0.Sfjh5[^S^ZbV=)\771Fu>:pRtKf=.Zm!S8D>2?;W[hDUo_?big-0Kmuf=%(U`8IO$R$edOR97(dn]NB"e=#56c+=`QC$s1UH@n,E>(F]Q\%cGV[eH+N,!9KLhdq1[d*%j["^e;;R6RKXg!t@YPC[<,TK;L_Mhm%%mnJN6Hfs,gsgrfqTV//OiFiSXCo0H#9d"'0_7$dofNMBL@VZ#q)@X_7-+UmKLg[3bU`8Qg4d%#k;^n//[Z2#,-G4l#C*(*2Dh?/%n#-'OI.G'1+T%d8^_KRmrL]ICgHI+81F/!0B3"'iGaoK@YZZI'aUNMLmN6kAa]05!M`a[CDP/<q.-Eg/TVc3^2c+Pt2)e?5BqS'=%!6bPD\UD%eq\5b=cHXhn4H26poC-I3T'#0LDOtIc4K7'T8!gjf3\+2)e*i=3*ZJ4&%8!<<mXJ,%VIMd@OT2>8gursAfNQ:dI^"g`%\=_o"S'ps"O2#QSmFD1Bl[/<qc_J[sj(qbL[1bH%@rFrR-BG1*265\-XZ?CZEp>raG$+/Idl^;hBmTSf9X"E42l9`.q3*`]KWamf%)gVi_Rm24/rW%b4@FB#Q,9WjmnnSbd\82Vrkj*thd;AZ\A`.2A^;K+p>fcho'E2&Gq58_V`N7!02r^rFIl`M#lslN!hKV-R8$u9(%nXhhC4d3gV<IGq#Y^a9Y0]QA"Z[72,I.;HM=2P!H?Di8*)=:DoT8tM<.&=mAQ_044?i%8A'6WQj<<TMSQTjiQN4O+P2OC#Pm$uD7%eX9QQ<pnI`B8s-^_?4$fVj95N\/$^a:H[k.3r?;M;g,nm([$!JV-:Z^a)\n(3K2b<h6FWJ#G01tYg.GDa#iheNobZ/EX8rGNo`e_%ju\n/5"3+=4-kBgOnDcfnDKn7Trk4#Ice8,1Jr4\d6c3-QZBf53T$ZL?)TYeXdu!S]4%D`"HV,-+\4s@/mY3#L@olYn#;])CStf.%\@tkWkP@nCCp<jHDBuG!+/F6SFe\EfqtB9_\DK;t!&GoZajr7_`FdXT$D"m0c6Otco5`9lS2;lHV9LDeprReUBf9]uo+t63ju'!m%DZO`N9o5'dp!ZYQ2V0*e$eN5Xe4s665AI<HfN[fteb)t@g`3p44"iMjq.GUZ0D's@p`j(07VR2Ep=Pjp9)3tE7_^nM%9BJ\P7=^s%b#,6;:;;]!_,VM;-ut-Y/#&2B,h?@,DI?=NT#f5S,2[6m'o5"7J**!j%#U@d\+EH8iqP@lal+:BYjn2$YOlDXi?%UE`Op@KY?f@f%(\?A"]QQ$5?/1+eKr@sim6VLBW.Zn/?-Gtf1Tt(XX'Jt!#]T_QR*7n]jZqlDf<FshOi2KVZhp57=8oVBJaq&%>HZ&m>fU(>;qteE%^Ern0Q9M@YjJQ,VXPT+i6QTE\e*b=RIIM&rh-%GBgFLmqesbd9CfX6Ygm;;8">Qskll&)p-FLg\]<N5IBs*";Rm0s9\is.A4U:/2%PY&95/"1kb8=A^t's@%g1:ceIK<oU+p%Nt.V%GZG[cZgMc^E\A4MNWG@SE0gijA"CGOn\$9:)7b9-7faeYW:%X.hhbG,TP(dLCOO%kaerHcDFne21A-,rAS3S?f9t($GpG0%tCV/IgoL6c\#g^&(3%HEN0TL?)sh_%4%BJI]_*nJ\tWXlASHemdg>C:!Q:2FF-',;T*KT%&\b)FH]#''.\c(8'(Fe+)!d0["??!F_!Ip0f<c1K?/J7>MP\WL!Afm)?5kbn<s&@_C$;Yf@9s98!t1Jt!p9=A0QNNcou^tYo\@A9%kbM.[oZHhCX]gUgXP@S0$09a*N(N,TSfG<-[80T7BE$j1>'Bbk4-%M?0^+2IqdHgo,)7"KIehO3km(I_rPhK,TH@lcX]=+^3\J\.%6*Jk?N2tL/"TrRa=KA>c.FEAUe`J44m.mtd`Z)[nHZi""gGXQN8;,>i5'UW;glVVL>hsHkdR4NlSQ6th+er(>JACfDN:^:&U?:#A%/:RTJQa*Kf:OTd:W_*%7U&:%1a^Mr*gol>`]1uqD1]cR:k(*&94cJKWEFhaeZ.j6[e\fd;oF3cMPQlp=3MNRUj/-52N1M4cZ1?R2%6PRQI8)nKS^=h&(hR#Q4RafXqO./t"eo"_1HMXV,GnjMb6=3TcGV(_K<*DN4RH?NY4D1+nHt/a(c#]b-c?-a@VWkq^:!B#CcDdS.%Ou5tKL]3_g:"']C-Va3.Bq@0+PGWWRFAn>LqZ\<?BlKFe9il\ZqXmRP;QY@j';r=A<qWgu:>s$,@b,WgSch8@18!I15+>Zur&^+F%koKNiBCF+6\A*!=FW#DY?O9KZh[KJ\-O*h!4gkiO'u)MJmC6K*S?HQBe7t=#[GK6;1^1a6mq8ZP]lUO'^KE,<$\;qs8(+(co-tBG%G[2O'8P/VYobKK_k4_Np-^iYs<np(bhPFl-'lJbk\rQ6CRf4-,n`mDHX%@5s9bEs-G.;XnqYMhgS\fO>RbF#uelon*Yl3ZbHW05,%6)C(uZq<0hFC_6jAa&hL-fmsf&t<FtH$X_/eYdgYiQV1_eF-PQJH]EDk.FmSS8K@MbH'_XpRrg],d*PhGKUe*Z*3,ej_nfd1ABZ^%jM1`]X6+'`3Ed'QdQd,"1JF!s%/6.*n6IY%IBGH_@iho!,F3fqZ-3<9hm%n<TpaLd@_(,qIV7.VhNSrPT/sGB__Q@OT(ROg$bkfa%ROFuP2OApNan2EjgNQ\bDU%=la#sr#?+N%c92Au=cEG+KglNbBj\Dq%ed0_eFSo=P[+%Oufl^rurUY);G*TcmKk["QZE&d(B%<6E%=Sf,qZIBY&m`&imV4"s$lfQ?m:DJ$O(9Z?K_]Q,0f7<^ID?8@Fof)%?,ragH[o4@^EK,-/Dr;9Yk:]Gr\ue&Dg<-TSUeul?VE[@S%VN%gOdDUO0^."-_8CFs]i[3F)ZD!jmB<qbI]+`IL?-<ANhWd4qUe%hjq)9L>\RCO\\=)g\^8;DN=IC4%cKp_s<j(tf"9),2k)uuo%Go=(5?BIQ]]3FdR#9>TN:H.Bceh?7+%.=C.m2U++r%h-K^!8\@Zcn8oeT*gl)`t6'7'!WT:V;I2*n(&.r#c?r]9BH4e2gZ06C8Ko%p<(E)pc-`V4!QPpZqY5J8QhHS1qpQAn+<*7rG,pYDLa!Dh2IZ1WNrlgQ_d??-2ltpV>O=6;4s-Tmj('_PagKm'G!R'*LXW<a>(#P%dnM86>kBY&RB@Pa10577cDq2%(Nb6Y=0MY%1PuPIjSW9>mlHg0-RQUT)b1ZbgU_Q-C0%)gO!)M5aO,oHEt="uVl-UM3$4aCRd,T\%([YSpi:E4=Vg!Y%Y3djC5&7V+DUKUL'hc(aQ+1/9H;RiUC5mC"PZP9:b69K`qhCq5`0PO/cdFuO@d1Vm3q1+q:#3-3psrp#1G&<1%BWc!9GffG,h8m5Z0>p@LhYi*lG2UP&!<&J9[ES6da3Rqd$K-.*eF6ad@?h>)!mRIK[3V+:&YN]3rQg\Z*?A(ps(E9(6e:d5a+.,9%laXC>?VJdh&I6q[D;0h!]'1+k6?GT(*J,-:j_*H3dc7'__1btm4H(.5Q)f8nHJ%P;K[JX2i8E=XTb@dIj-fO.1CQhIZbE:uQ<<(n%a*m1-m<,?]$,e%Yrbl3V^9CZV-J$ULH:STQqfakIj*"qCErMQJ.Qdc!_p<])H1je\1`CQk+-BDulQTN;$fk.GC5>O4i)eD=FIk**%r+m@^l8[#f;bTIi3+d-7emb].Da8DO/GI9pMasi=D\.-j9D)SK8!^ApcoVoj_'=V-1f:IQja+''1UA&"#jZ/q(6>iHC;/5u@oM4*%S8d5eP:=BV1=3Vfj`\5`:/flSqRq3W).l.*>3B=<GgK<IHf71PDE54Ge&e]ZLLo]'/m#(UUG^3Mo7>G6gTB<t.p0/\L8em=%b5_S%b:lMU8upfWa>tq0PO%sHRJh.B%!1fci@l0rVCDn$hJ?3;!L:lCVq#]]Cg-/5!;S;Na_;Dq,rF-(ca:k,k\%K77_^#3+=nQO$3PXB%caCq:4<+`MeuI)#/l>^(Prl\><k2/R6r2`E4L,F>nA_oY(pL;pR'Psj-OcIngNGp"4NFm)H[JIl=hrOaao\HKN>A1>I5.L_;JQX$%k)XQW5c(6m^HIB)_p4;sEsRAd.91/sno5*rB<j.sA[g6OYgZ&fSt\?4HE@W,7b@;DXS<L^07(,_EethXP0fI9@0KQHb]11"VPB%$%Aa/7HYZg?O1A`4c?!eHI-orNi,,9,hpA/W?)IQge\<hIa_A67ZX[u5TqE>G%B9@M%S1;tn<K9H2@D*^$T0cHoU&Oj2I`(qj!m+PS%7tm,AS@d&6d>r=G]07h1LUIJ\<qD2LdS9X^9rS4\kgXDSRao7DL=;ae7&uD$J!4:>.UL.Q1Aau\7RL)c%T#bu_!1WnXa_#]s!8s<%V,E4AWUR*"&N>^-:Z^ka;Y7@=WDst.?ElmCHBirgf4nQm-2Vb(\CN7,6cM))<%P.2rc,V2R!KbA17*"p['Y2NpC)E/.oq:?]iM]3%[b.iJ)8hJ%1X56-C&[=M\lX`Mjn[@:9(d(->!W"/h5`qX`HA)P2!ku?c[Fo2UgVKTHPpMfT3%"DPc]s5j1*VAs1]MEoNl]UVc,N'%BHb9AB#*#^OlQBWHJ.nT4*tp<=1s8VfIL#HpA)2`nGhT2m`6SU)X1-<,D6DREUi%"^XqoJVN`a@\DT,A-eU(1:]'8&0XKAG.ht:?%+^Ybt.LPm=GkH&Z:,e1Cg8uFR^t>YZluXbYA^rRjkIKuQ?a%Y0hh7OQ/.Jb>Jt!S$[g/8R+ddm(iDujW4i40ks7@MrL\u'WOUf8)%drGtrJb=_fm:)EbN`*Edj_h+sY%+K2[T+7d@Shle:0m0L\f>jt[VWKSD]P21qdI*Dn#AKIBM=s3+t'Q8[b>5pjiR9GQe1bJV:DQ"%eR=nX<aW4[M9EJ6Y\gi.qHg&MV#$Y7N$m1O/]/Hoh"IPl>I#N8[:u_]kHG^DQ&sOR,)o[>;IVqV')0pSi_\*jU'cB(Y%4/<FVrZo%eX@a@@>.m5_o9^0>)^r9R_Bc?Lo)V%QM(g:P6i1(TbEJHSkpncgibH)!s=T0X$/N(+<e+sj2?UPgXrcJg8k/cej72K6E,6eU+I%-%X&H1PY][KZ'ij#i_j<'Cgh@SfcZQ`2e\DDO-"l4k?Z[dc21;Wc>%U@t?/T$aljIVG7i99T7<\`]Z,"mL+B`Qj45!d>VTF#@Qs!1Z%2XL/&fdcG7[bK=5;j8-hZuM[#7bcER3LMcT:+o(2;IjIZ2QX174D@NW\UpTIa]B5+PhP>USSFJYAB=`e^U02:03bP;,0)UAbs1T3%V:>^Zn*qa`GT82mXP?0Wp!1G"1c53G&/o3A-]XN1DbZ6Y79O#pnah,@K-QMXK7=pNH3Rr8/4/!'WlAnEd)=t),\=Y&;'"YWm\CTE%\6RNFWRWBcVqoVKFnBn>#r?e*SSn.shlKLX>V%[@V)`kPo%;ImL-=6OR(*uh'nL*d*F4/rMQ7Wb2!nn09gO:f,EL$=M:DRV3mK&h%5C0C6&nB&25k0d8W$uV-5QrL<!nU"WQb1;G?DBV"#7i:)#"eK.>?[(B95]K^AIK(sl=R)&m8$Y(Q=&2-Ni"&cO.]6&49=nLboHc-%'K`OTc5>9.E5]]"7nGN[9Mo1cH=s;`2p.]_DGl,C;.B[ea.m+D!J;(:dKIs0;oD9&"MFph:*;_]CN]UmbrK5ucu4``RNQ=.\3ddI%Ce81dH`d!@45$b\](HFKb%TRM.(;5S[OA%,[&d\s*>^7,`b.n0E/\I_B1bmqEjOGf@a1[DKALQ3eXhE)p1ca)5L%U$&Qa6YY(drC%?6*q&(0s>fh<kEAJX6HI+(H-LXbl1Mcl.s(17_?X?rADC)J@`5Cs?[,+T+&cWu]po>'&^"-q$X_a`o)V;Bld1F*tW7!/8]@$;7S/%#MI>Un/)e1EXrT8Vko$T0D@ZdchoK:Qop7J>&cMU+YoXd$+ThlEo_1%=X+`(/?3]R['j&:7qnPT-<Nj0EuXLL.]r6l2-Nd+&Jn18%GE\$'E=HuM.;S3DEPp>2><?[O`#S"[..F>q]+aN<L@<stnY@M9+?U$6:8HDbH%N=eB@S@#X]oMk.ha>H.7LjidSeCeN==LV<QR3j%3>4MQS6PZ48=?)j`+`\:J?%2hL6-=O$)sCt56m_F2"*9G-R6AdhAXo/p#rb$<haW?9.$g[:!%S!a.o"l![gbk:^W\7cYICe7a:PH%b=CQYAUSCmV"+q$MMX>'X\[;\Ct/RZmrUob\<Cem\V0B!$Lb?^[ir4]kc5D0%a%#Qk9,;_G!4%q7r_gA.:F&Q:?H+,q9mO+-P32B%+GX!XCYL?D8+O0!%c$>h\[PfB)0R??NpQJPeSJ723irSlq;4n1p$f'6XA4k!fp*X6'0op?p$YrEr(oGNMfmd8*V.01jqY#/5a!A4%MpFe4=YVfA<[r\9i^E*6.CL0!s%=HClh*Gea&XSZ$\iJnQ&ua'iqPoe0X0Y)YM?42fT'#_g%)@GDRV"TU2oi'nFS`p`T\rb410gk%FQr9'pl[(M_G'DLb_W>^"!kg;n_MFHB43UF/cS*4Pa`O9i-jr=WJLO7;srYQ>d\\oAmgY_=EZUo\kD)#mk/`U%/[B]ca:NgAQm=e%#Spa?7IZ\Bj]XH=CJqX#_RS\99H3YC!mrg;(62<"1H!l7-thgVlLkl%NroRO[0l@kFo.F[>jZ^@8=hscMs'3TJA^<,19Hab277>!%h`SrkA$Y,@Slc1!=$!b_E)h%VHBc$)L_emt_S=Pl==ha]9TIUAd".%5/R#H!]kNgpTAiEeEs^-/4"?Cg>&I<@T0=Z?nE$ECch,cU%:TcQ$M-H/rG'(qmaeB;GmSc(X7BB.`!/5H_O20?OG;_ns)fN7G%V)iSa&rOKX1]9>r6GZaO7\4`%:`*3Ql.Ub[^!K,4)W.iP;B?,%8Fo#JY*6Q;NA_Gkn'jGJUJk/Q2*Ptm4LZ]e.G8p,9ZeF&i4;kB%PW`E3:AhANTlet[YY]h8)CI,8XK["Z':9,<J>Zq2^.qMbmN[_%5ekF<HAqQR.46$a"3BRHb(.]M+1[P`2ScLg`QRWubZ[*-7CDM;V6E8#rDooKN69.?%ff6A\=I6EU`du+G;q_N2iaBh>!5;Z4.uP/%!%k<DVGmAfrks3nH`Dq=8*M+oGFFL+,`#GKs#=!C*E.ALf^/0*OI0'+i]XLRM,"uEO^^o3-g?_E8:'q@GIRRAMRmbP[#otbHl/DL%RMZtu\IOmong8OKFAo"ndB]N+T44A?lG0'4L;Xj2EUHb]15^l2SCA#ihDo8l4eL8P:$/FcK>R>jB,;^mXl>o(Mq4)YG<\:HGl-^]%HMQCfNd:B\8q++QeMpbpD;NtQDCmNt/(D_pmU+9*V^:NOg?._'a3Uk8CV-5,4l>Vu.rJ0=SpQC,A_kb@DXgs$FBSKVF8\c*_</aX%]=ZaEAumU9DQ`HblGuFV^&7-D=1aq@<d7H>4aL?^B!_5,LSie-^5)O>@^*B)Ib<p#^O=C3+'+\KNRht`'):>:_oL&nISdENHCOq8%^\;n[Z$<#1*02*+0@rF.hn8g\.<en8^)9/7g2?<Lk/M]9H#p*WD*0@%0D:$pXm4$F+qZ@#$L1SQq>Aggf/N$aekYdK]u$375u3U&%leQ#=hu1:"n`8P2*XA"d/UTSWdXlC]^DFA[gUH`(hRC7?#:k"e]S:XlC4B[>s0hR(;QABQQ3q9UdJ?=MdCf?1s'kfi_p-'3f0LSH%5C!*<kK_b,V,BLtDmb@sPMJ$d=k?]tDQ!3[f<s>!SSGmQpuL:(kM`=fDYN)WG?k1Hc1RV`F(*I!J+IqAf<!bC4FHdKIFW1^H;ntA%eaA9^lVt=cLZ`H!1h*;kdsV=/F74hN>>qT*eI&?gi33.XdF-0XR'4,K%E@?)mc%heHfNE+d^!e8JM5b"SNDng6L2h4NAoCKCW>n8%cSY"Kjrtr?fQhE@=n9sclb$sVSK?t?mlN$d1uD8V2?!-;kJc!B`nfS(_[dcX`PDphBG>3eYc&T"hR;YF_oKTJppT_$oSf7UQ:kS1%0]TjO%AN_pHhdAUC"Xmu3IN0mH2D8b^&%-8(ZJu4?l8?DhA3F_U\mloJC!`eoVG(TfI4*4B&C`IO,2:n'q\UR#No;;G?Fe:Y^!JM%m!G^:^@t^c3I^pAj(\&IEUN=td`_%V<I(/t1echVcMd\?%eQ`L.)#NSU`Y_TV)BKo?d@]J]R%$X<&3fgX*AY]WY.I'f^eurO700b%AId\?$]Ci+rSa6Yokl/0lu^NZ>AMRB4s:D]G-0d)o,]GIbd[L'K;;0bY0pV(M&D4=/M+%hI+2L1MKM(cmFZ4DCJ1_u300Wjf&lg;%mrn,<Vq3";jT$YC\kC&XleFhZ+kX'gfii9T:AoT*%$p=imha9>r=>`7D<!o:lu\Q$E:;2#Zk+QS7#]s(gsM-Wd^HFO2*alaQ7[!(%F3CZ^bY[cdHfJ8sjd5o:TQ%3sC&50rC/CiehNRIL_1Sk;h0JWN*o#rH55L@jH?eW#^`!t(@27bEin!p7#ZJFj5RV(:-YmX)_lFeo%=+P;5]rh"qA)DdGDS6m[aSL(hF],/\CCXOkQ&g:3rB&b0A$"8![CZmpjSes(?I']WgA.rt-U%D2G0GW?Mn9M.H:QLTmbmD+EOGLR%.Gt5%mQG]5LX02&Rr8eGb<a6sokn2Xj.TNM'To.r>&M#-K"K=^45bDA03-<4hj"k:K%.t[R.#L:[gV?gdCn=a^&:35pT"-*bhkS,%h*67JbrpE'cs0[P9Xq`a[!CllI9G5$I]+W!`e1nBPMEi)#p6An"@r3)SIlcJF.4>OP^PZ5<H'%`T-la\dea&)dB-G`q69DqW;,X0%./(9f*^5&6Quk30Ye8X?e7u1eLtXFsE`d__m-.-H;6oZ><Q+"k6'Ic[52TVhf6=SQo'0_dT<@pap;#C0'5F]KU%ql=[aZ_AYA.Bj%VH7j:D<LjB+25F8%']<"$I_fB?nLD&U1IJLI("-#O<)*P\,6.GooZrL"9dal9C2`54kYU/hhp1l)riJq];.%i)l_lE/</ZI&Ba"-%*]rQ8U0%jX#o<iAcn)O<6BamW5O[bG(a]G3XCrC94\-d%jP`[S2i'@O$]V[gnVP\@VtY36)SLS$^HUdZ;KCeNS!&XJY7qU'4[7_K%+\2?kMf;6AC'&0(^k`"L&2"P>N*BML=KkWLr8V9YVZ]#i?2Q(n$V:iRS6,mP'(I`69,a*-#5h2)-*F7t_CX^MA"$MI\@&AH'oU5=%bi10`M8f*68k<tN3+M!26m^M_E,GnYP"21eIDgN\&BWJ$I0n_jNt[`:GVCT:,pET?P2n+A%S,S;![U=8MP*%S6Np;?P]7iVde+!0%3h<npako6.8I"6DT8<#W+'-;._Cp`haY[_.1',XJhg$Zc&OM9X@gY9qXOVb'#5jr>r19Nrk4VSGT0ZTTX?GJqEeeS)21nV/5@7OJ%>22/jYf'jgPh;f3C2kIXl5`(@>hA[e4Y49lpJe`0Q+rQ&6AZ$RZQus7_BL91*56q2I]0&S\do+jZb1>i6GNC>a(A9<qM3lLB:f.2%6[:p0TnejT/1c+L*R-1</>$%`B2?6Gl7Db+0Xoq%Gb$q[D)Y&tG?:,o=6m]"^Y"iD`W#fqq;M^h59>:"]e&7=0SU1e<?jdHa?VHe%94Fn()t&%6omY3b['O,pkre`%C4MiQo^d7og"TR>-]=8'?9I-1^'m(Io\4NZi3kj]UYI"S3Hpj\3FHqPEsE]/F^KV.T+t..FUqMg%HQPO!9A^*sDk"c6O->d$Z)Q*eU7)M0&rNW-LA`b!1+7TuHW6qlF&pmg)N1L)h`fD<-BGpQmXDQtMd)%u,8%p:e3Cu@JL$/iDGk**%4G`8'O,KndpRgpXYKY$o+]*N2YAj4)I:9PWpsGPg<K^+6>iZmC4r_Fs0N]0W#CB7'r%P*q#E&i!/Fu1fQ%b/i.dfK43KFn_mqEdt%M`C]37fUUtrU]M]!>)7p%)*cGp5</Dh%N?"987%p=jI>.I<FlTVh$+IAZR/TrVEO=o(q=2(*3]Lj*nDS)G$9r^:[G7fl2Am\9gD7%YMA'Zk6H3_;R?DR=S*Q(i;Uae?`P83\$EW0J$l`l\@cam&.*gcrF53FMh<rSnU=JELkWNb=*)^ba*ZP.Zf?5!,7i?FN">*eQbqFR%>AF`kD]KiianhM2%VD?pc_!FTd!kF/f%Dp^[!]uf)inmU(SX6H[T77p2%W[a"]G4b>j['#DoCGGHY2nZ@W&0VmHgm/:Yq>Nb6\[7%c1P`<DaXAGFt5THbM9p7oc*D^;9.=:IENuZ&-j7.oo0MOmY!3C*IDhXm1Y]^=(#!9Q7lediilWJC?rp0l`]bgPp2W)f5Ijbo_6)]%%UYR[_ZXat/bl\e_J5[F7+QXfJ?c?Bf7VYr3/Q%XQA8@be\P-uYGkP:-gRsJ34ZZ?@k0[/WkHPA:jYu(P(WXYp%=tkIkVp-IfK5[%n;&O!HtCr97=4X<7qY4ci6,VCVdI[9='%<3?@4hq>h#Hg4(oBtBb5r9V>\)-/$?Tjhj!cG(Ts?`?bR^I]4,ba`CIds^3sOeRlBnt%Q]Jt@,m',D<rQ[fquEPLn!5"YE)%+.(!@VTP4R:rn)!3\g[DQCPGcI!RqqHoFXX]NS@e[=$]F)N2jW>_:MFXaGDhd@''/;j$LmN%%H806Ngneu,\[-)-6'tMsG51uY4MCWh^3^-Gm`Ah4,H^dPG]HnK=]d4,\"<>8p1E`&WNoU?57fH(b2hgH3>b`q[bG)9nKrIi]8::d%Y7*(5@qi9UiqIM@ql?@@C1"Uei:u%3^_\<0@<_?W'dRDc!<agC?3a!dB<-ZK)NVWlJB=^u2SVJUK^f6,<BoXe[nj@,dl5GO"tYLR%m-q4I/&>-,^HZ[/5Mk3SiZTNGMG&E'P-6gO'9JRP&'j4CQgZlbgV,k1RV7J(JX3J5WqBb9,AOMbXWDs6DXq54W;.P'"bk;`cQ*eE%HG8h'nMFbOHYmikjf:Es9X-9=;FLBqO"0T^K$k@*kOoEF^CSN-SSk.pk]qAn/QaPc:RlW5KboG%:SR("&cTc*W)Z"s[k%?&H0_T[%)e/`341E"NBWm#aSL;&Kdn`8*"Mo\H=V.rQcMFl^E[SiT4.e*KXdq%/3)k59%n0>;%X&Jn;!:)\h#D0[#c2mCFM.IDSW(4,A_uD%%^CGjj4*M28^PAFR?bZ1_<.c0fk>nd.S:@cMYdjE)U%pEeG^/s`6<Kgq8&ObP.[:R'>rKRjcVJ$RjQW5.OS]G0io]qrY[bZ66T_:c%nnS-p>j3s*qYR2)oekV,,kKaB-Kk`XQn$p!BeCJsiRoFhZD8l2Ri@FCDo#N+S(c[16\P:,HbGu_p&=[NViO#EpJPEL_S!f89A**#%bPCi>83]]u<UZI&(4*k=XE=TU[Wr*UKF`Mo`1$,MH4eq^^XpXlH`pM98KU*B;(Yffrj'+J!@q@U/-#2<1q(/8KNhg0Cdh9th$Z-N%%pu]X'i4auHL^brD:.8>g=ZaPp#^*@LCVB5E$)R[em9%k58BeRgK<Q6c$4B8&sW$PV-kmaIp4]#m1NP#_c>ksOF*LA(>F"P]3J\_%Z9S#qq`pXsqe/X/`Fmr7$XbQM$FI(nhg6G]C:tkMH1O#*ojCpX'_XEXnI<hbo.-cu'2KLsI'@^bP=tYsr?D!=2A_RhDh88\_:!KO%kF[0KE@31&4[02fgD1Wm\)HSKRK$[6\gYE<p_F*:["juh&+1-PnFLaC@jQJOj=JsImM6Rr5=)'-3NQ_7c?%Q7rcMqSHi+`jM*=H]%Xh4L^2uniJnp]pV#J59ArlO-?+nU+C<D8gQj]Z:M+/kUV,Y]SiQPn[K_2jKB+))MkH"@]5#@!h/(:QJS+>;o+V/^E4p^Gs8r/3lR%g7uSGg"CaZbe?3o:o*fiZePm/gg>4I%'gWlQ.W1eB&e4$=5J`b3+qE^MQ'd2G[^gAbI?L7IRqIX\)"3Y"A@(LI$Mf!X04_C_$fqk%_/]@*ZUMdBI@>*0p:_u<dcT$PGH$k4J"^$%RN#g^rRK*)gd1tJ1$ha':3!mCl[mm62dh>^-i!Ocd2sG2]Nj4D#Dt[JmbSi+DAcAt%IVZ>h3c7)dRF:Nmmb?'ao%39`q8U=aMM%3MVF2M%?G$A8f9C^\J\`&6)o<:0b/k5Ln`b\p&9;^(O<0h6kI8aMGJW*a43Uq-4CgL7%Be)2(2/+Ue?pV,qHN)[.^!5P[oi83*Za:G)2X!'f)s-AH#),OChVIR'EoroV7,u2$lgC\W<eR`K4&qNWjkQmA8)PO@%:(j348kbZ%rGcU_5T^+]&>2u4f3WhbmK[+6(_)]a1YPP&TSh0m0X$jne8qM)U3?MJSAVt8ilU$M*N/Y5pF&#$B3,bQe@mK+!]R\$gpJdG%rabs%i?2LOqb7_*!iqitmbM[SqV,Y`3H(tQ_d`c[cu#-,D0GB_]3TfmoD*_fh"YnOAf/Mb?S-6E-Z(OZT2qMjj-Ou=p;Xg1,Zdd6#"QAQ%/&CA]n1_BjkE)FBKoq5.*k:@WPqrs5>Me*1i#R7r*?XG#(/O>0[/oS.)(oX0+tq2a9!G*Z]NA:3/]bf^a,TORDJukpp:T-u,tilN%o3M+bMj6X)]_J/.>&cLF;HWd7Z<`@1PLSXn2#\U_hc.mH/(rZZ$eZ`1724MRi#[>q\f):[3SKdH"VJegQ"&+a4U;"4GX$\l^9Jj`%P^sEB_8%)`&$,6:%CV"#cr[^JpAJA6lr\D4GcFk=EW,BeTX(6HleHr)pT*o\qu(RnAO[U$mqqEWQ9XOUhfk#K>b!*LJa`P:",]8@%ra;XKr%?b0D0u2&lhs]X/(r!7IE#)I@ZIB#4oti#'&7IfYF[q/d,t_&k\&fEZm8cp2-qm-:nBS8f6c%Jd+$[j_4nXHH1S*8jl4Rf%'2?Gr)n0tQc1dDA\V+@1f3K=44),0Z(>Sk-g+8i&5!PjkdE)0l0_K]%X2B]srG;@(mb*Bm?Hdg[!cY>Bl/2L"]mOQ9qW@@oH>p7h%Ao.O7BUlt<CVXd7a8&mu4U^]:Y.'a"E\p&9fug_:G?=<Va33K*gA<tsDKTaqeoo2ST#^URdcaaDs#pt]D(Prf)c9cA$.@SCZGiAi%GAMEaHLJ%8j`n=nV[2,t:B\%Eq^sZ'#ii=P7&Bde]=IoPV4Th#\4;X'<[#@e>q+r?\M/gUa.o"p\b45?c`cqXF8JceIQm^H5e__E%hcuG!J\B^:K)X:Y!9$<o=pj\8mC)'88D.3krATbC;`f+3=5JE\9".jlX(T[lq(Md?D$SYg'H[LDf*euj+7Fcp4FC!$?I\sXBp*hP%D\X>WO:sHg6b*0mGRH%"Mn8_6O/&2[P.,9CklGL?UIoo\#p6(_)m<K$D"+]*l3QqE`$mWoNB60&CS'.i]kjOqQa\<_44Ud/k8AZ@%KQ<9FqMKfSVrtG1c,'9e#7pdpkj)Qg/>'5QUaOM-H/IA*HjAQ9>NBhtqE]r#%gR##b&(d5MkARRNsY*ZU1aBsN/'q=^Ki/]ZA_5"%f*3G#]W6[&P$?;P)c-7b-X+O_1V2OVkj9T4)kjma$VSu-"*j8m([*;^]b-;bID&nhp2Sh3BZhCCNhH&\q=Gh4i6d.B_:Qc@qg5"I%e*#HE,s.Ra3?#TB-*,^RNN[JUY9(DO#@I/`H_+[*.oC[!?a+UFfBV"[StW&\2AYdrS+Lii^&iV&<ITfu-a5EZCO;N1)>'(6ch$CZ%B'B"J(/;8c"5c1Mag_9%]IGN!kcd;_QY4uteh]T;<t#>l)N_>"!];oPfUAA91bWXV/qA&abkf%fA5(b')S55`TZVkc6!))^'d/SE%#)7E`d1h\4[B^>G9c^h!IO6,[[%XC8H-2opW3Qsf/cs$@aMC>R=ofO*kT^t-_g80coJCsQnQ]P(mQ.5kb][7TNdM"tKs/Da*;J\@%"V&`!g88`&\@.ZFI1&'6!$*0F%TjU;PB@>T!K^r+4[V"]L5p1f19m)TlZR(La^F?%<<EO]9d?\V0!qsdXPjb?Nh/+&OFP0UOS&m"%I2"U^]D>:R2_657De:$IZneLe!^Yc0M?Uq?%)Ca'6GV#c"U$*(\L^j:!jm>.X#h(l@G4l1"*A$LKI_/(JM<L+"3E+?!usG=<VKqd%L'+3]HIfC;<ikL;a=+8N;cl:-/Ce1%iS#'T1EF@I+RWn]\cCs&BjsT"?:P]O$^PB*/Re0Pf/.Jp"/t,Z]+>X..'Dl2(:42V2*F%e%fUsr!e3SpC&7igKINf%#eFsXa#lp&&(ZY9F.-@c%RTW]NXiq&B5RGn)Xt0eni1hP:0Y_0#b+N@^9Z+p55V=.8O(`fnO/2EqL_q8C%(/1WAL&qF>)]f9FAub5`baINW7Srm``--Za5Z?ka"&1]^g]:E3#6W@p>[0c]W<>LggAo0S_JqY62c"L71rIDGXpMEq#"Sh^J-M<2%4[E1m+*hdl^d8:MQfT*X(18Xo%*O/9_&*MM=`4]O0%h#_K9IT!2aHjA#::9R>bl_j7FORLE'0f(!eg5\W'MbPpDajK%,)<6Z83mS%A@l:^=rBE&S#3(`/H\\!L%61BVL[a/aKGjTj=u4%).bW@LhODd3i`C7]Z."1g;Q%md73%d,d;g,Y%=l"Jo<E+">LJ+c1,TqJ]6?P%U76U4pOLI7(b&9_>lgYi!+Tj"::0Ui9*o!1W'%eco`5fW:!acAD$1\?h_K-PY[n`[!V,eIrCB"9MAu^lU]Q_&7>["S4p[fUM@Dn'%+q>[5b6%Q8A[rBYQYQl,..)O])OPIJTr0_1NGU>"K\R_^_$H7R!kW;Y]9mJdU5*>r"FZF!#,mTZ,I_f'Z4@_`&];sdCG&e?R"D[d%`"ma,%8(?MK#'1@+EjaBY>#16Jj"2&77;bsOD%8M(r8n(]gb*uYQ][d3#PL0J\]u.98hOn36B!kZ"2Y_XDK4rhGA_`L^Qa:(e\8J%Asb(4%+&gH)Y=.i%3HS(kG^][gnk=:;&LqiWU,[s#"Y-D^oYps#3^oH3Qe-1Jrtjo>LY.B.N3%=;8iM-JtH2WT6^0SiPB;c/082X%k(0D>(m6nn%`1sAR-*/uC.8IV%!l'OAj^BkT>%-85j(rG,7L6KmHYhj'i3<*OMsI*!s$h&7)e_>Ec$8+ZZKFEA.jRHaMAZX.PT$J%?U3$\%2OSj8^SGLTF(%Pgh8O3l(`3LSgq0>JdMnUg*0p`5r@4"9Tc1hR2P5*I<UbY&r8ngQ@j`#/s4'bKYt)i2;j<V8-GH?jB_m>%Y\kA5<-#2KP+[AVl(j:CP!BMRK:UUG2aMWo65mqA7DKakBXAA-;OmS%7#TKLl@L6+9I(rROdrqCS!Y`o6puk/6!lI52bhb;\cV,Q%6'<X;!XC"[Xdoto!BOlrhc#@dX9sV'b69+u3e43s;tL&Fmi!0.\W3G:5k?+1o,TT';*,1g*SXI^;a=emll#nU$^QE"Ils0Nc4El<%AQB+(RiSU`DAV7CNAc_G\OmEM)/):PT_h+Y"UMasEC:n$:gZWa/jpZs%(8l(_I='-"t[(i+aB_%pe9</';NMh0e7F,J\Y:A_fjF@%O<oGi1"9>P#eNR,MqTU>aO,`^,naU+iG7ML+Gb!Q!&bHT:gm-e.53L*V<AR,`Utp8E2AVY+ClchTLN?se.-:S.o\?-$k[Pi`s;kn%l[Z6?L4Zg;%O)K\.7#?`dF.#t0`lC&@71EOcst>l;=bo&5j<#/@%`K3k"k1AHnDT=#\uT\ZBK&)8#^8\9AGPLgJg[A5WgLhN*n9:%&&rh`=:j;8Qt%Rd8eCWRf+tcP0p%"siAlEOV42"'<?U5X=dFrZ%J99H:QLhd5md2DFqJ'.BF7;SR_U#8XQDi;VMl9nP^$6Jo#.Se%g*o#&d=uZ&9TAE'^e8iF)eF[[)8]a.[kd(XQo!/Q+ABAG@7A1h]S-Cge3-St<sYe!8]Ju_60'^tYtZ+"!_Bd?oF)#$ba*dDo-6ft%4C9@t3'Su_1PInWIp&J:VX=aL%0<Y&c"pH?"\?[]#1p]R&jV]E@okp$-aQEjJ<0(?9_WCm_1`pgU4@F9n^r6AN^i>W0F"mD;q&Nt%,OtgJ=AceaJ'0ih+mT.!%5MbPO&HB>g)ALZ&;H;M5o`[ZDRfn%NgaB3a>%oK=Q8mg_#Y(`nQiG$^i[L$bWJ]h-[Y;cA5!#2n0;JY%%#WaNjS=NT/;JqF&:e5=!bmm#!m'H=TIXL^+>R?[<OZhmcF1gXQnjan&>tqYhiT$V1[&]3a`aCRKHO2P$054&SCR7W<mY.0&6M3O%LU1Fu60UASDZSG-50i5_]aOgiV9Q>kEL<&C[-]KMLfb-K-R(*n*66D0L_:5_/X1f'`%hU>)$B7K0_a[BVT[D'ZQN\Eb4\5)=Im]%%(LJ^f+It@t@n&u7N6o?AL"[cp]V9eSA[+41aMM^:E9`@;ab059b'B!P#pe%nIG]%LM@0"J-k,8TUdL"f6RMs[$OGPmCV-63&D!Td%lf_<piF<l>Mo%(I1!-hRd[8)-/s0KcUS]9_Z=L+i=USC?!:&L?IEGUKRu*!=mK,@&b9EW:9MS9*(P(8#7\rh`M&PYCWWM87</cEI%,[%_e*\7?I,NgqQj^U@X7^Ih<&qX+*:FDNd/L^^PPZ[N+98E$WSX\T]^^4P_`+7$qNk-jI"V;Cc@h<6d2U,ZDS24&Ca>^)Y#(l)\%M$_+UN"0Cp*$6Cr-d0$Z;R)[Fe$rK\FRao5#,7eq>QWVbYV<M/W$HnZ$`W-[DK2\[bH;D4Gkb0IQl[$HgI,Y+Jh)oR8PN\IfiS;3%&92ZPi(.i#0XO@o+7gaK,gh52!onhB[!W-O+aIQ7<d-ZmJ`(8oMX,+Y8H@^#TEtnp4=p29C"%*F,TmlSCsDTt2*acE3W`GqZ1_SY%YV(R./m&_eQ^/L4IAe?OT8Ic1R>k[E(e>B>bGPYU(`444c!WudpX"+mnV.GR/^;9*A-=BDr4'IQ1XOQE(*K^RTs@0ROqnG]&sg6?%3sbqG`$O@Z87@-g))PS$"F1+PK@H#>:b6&'%!!X+W3Dqi7jIb;3G>6[<\-r?*L9pa+np]07+2fhLkU*gYT).Gi^D-0>@VBP5aGP1%%+#(uf;F7`ZV;&iX9t&l)*g^@0F<KG1COD\g)_\p#n6DFK&K0*Q*(6`jdO3g@0@e_ZifrncPm[Q;%"5!XDK(79N[*_C066odErr-%c\R*B>]?;FD3[X7JkQW%&;#!?bH2'^751!\,S2@h[0L8"a0i1Q3\,ag$P7>l=;6U#]*\t1267tll9I/0Dud<Ukj8YKK=bMG&4*H!%fHtH7!Pn:H#.[tOAY:8uT!*3*a20MC":!43)$c1I+qSt+.,p/8ZsqMSFWO:FeJJIjO)1_(V;0+q!CD^G%E:R<"A'u`"1g`^Qbog=%.P/(jlPN#1L1a+$Z4-jTMI@'*;fDj^O$jgN/f6N6"b;p!1(\JGCo29&"e9.RNK`p&8Hc'?8fZ=?Y%g>KVc'sV]cTMX1WUpm5hpEH%Il@Z*0r@:!8P01d!uGbc`7B2AN$/r$aE<!?Pt-9M0iSRU.16Lj&4s&C55Aba(d%qQ/Kb_bl5W>,&1oS&+Es/g_l=`/$r^4M($Z&W%cPgI$^;l=FJI*T`kD6rJnt;ql)K!)P0&oPGj2l.6!buE=TnB,0%'j`p'-Iob!1C3D5VUq+0VU?4(<rM_((\F4!eE%G/J&7/:=>r8%Ada1r@'$k0A"s%?Wu;<V6(Z&".)K:96,KcMJYWIkdE"q>0Q@9$haY8SYa:Z9&R5F'OAeM%0,UkY.^40V9';=%3T;ZXjj;WV0%gpI%!*o6&#c*nh"9a_'r/LD%9Ga8#DDBN1F=bEcOG!Z(1,2)28dH/h&>\na?-N)BO@qj.3WRO$W!b5h>`X"VL;V-[;3L9:&9UEEcj/;C%VDedT$n)/l(cBW;P]N/uYr\]g"G7hNJfA*STR`(p)1sc,5o@sMW$c.f"ES*LY\^1']+Hm>K\`I)eD`%chfLU6FtkbWBNr@4nC5Eo%&.-0)7+]DbfT-&u"TZ)$B%[;S;0!!DTXl:39]@E0bBn<5fENUg!F[Q<Jj`=lXD;4[Y`7hg,sjXAqAFrA^hE`R#<.'l+XE/Z!*>M(%Cp?G>HYFo#:Oj=$;W2_d#*K-(E@k7.b#k*nk2+(=S(&Hf-Am8'RD)&O"EY>$&/PMEOWB$k&I>j-YoF5U=\*(R\0/nt-tE>FS=:3B%dEX6nb4^\6Ra!qgJ.%nK+:,M/KNKLrR`KK*.[IoNLilsa(Sh^F%1-JEN^R5TGRPa0CCri:#8/q5_.#?_fF.M?Y;8,RnN%(%G=_[G%9)p-<:JtYR_deK)?P-T$AhsGZesLRkW&h*)#a:)hFnEZ@1&*e"JZ,r?+;:L_SS2_O67sCWA6L=6)+E=:EJ%&LbQ`Z@_m:ToE(:2r%2Za$u*^Cj0FVI@MqmeU<6FIO"+VnH%(kZBk_\W-*/oJj"59R[Yac/J8_Kg#EG@7b^g>cW8mKobSnj5Rr3$jhU5.J%RXZ1eQW`t">%LH2(]Gi^qbdfLB)abIYagiDp*+YFm]e5+[Z!MMk%eB^'fP9![mjYTT]a?Jl)LC.?%Lg`o,M(R*YdSE6gN2`"2dCq9!(06,'V@!_u%4J-Xm4IVp7V0,WR!MZ&/*I+jpWu88Hm>,=gF92V3N\/1A""D5Z"slYgN&C_oMlDP4ENs9=@AKbn)0TF:J:OU8FRh_N&YL(0K60;b%Jc"97'Jg.1ERfds"Nhpk%#PnD*?If"V)IV3NK"+sp,408#e$eL:kT8JEsW\K!:W[4fU`kQk9GmA/#*HMNu=.^-X0GOXGirABYM>M%$rb^lBi>(FgQ%uC!(+L9gF<oP"GAmTAK_*'cs/%F#mMjM`@Qp]-t'XmKAaRG?i[H[f2Y:95f=QR0NtG2P/([sB*CKXL)D0jREBH0%Ve.gA@;@Ee+jn@b'+BI(E.]@WJTR;b'09\S/:\,encfX.j&fb)<gdW2#EM^.e>>2d5db>F)^(`ugCm^q'5]k=P]WRSdl;m10L'r(%<^u-5UbJ1dF&moIA2HP:bm8o7!@&3gh;eIb#_oik#*M1OUZ6lHDMb)*JG:t2B3N"o!&![$+U3rL'8FW=%QZA^KYp/;=SO/*+X)ZE%-8J5jQ/d,lO9)f2(`)-uNUp4&o_Flij,pA*8;E3';(N-=$PRnCTE6\:an-.^aLm0*!@u)kN!7X^,ps)6*I2kE&tH>$M<D3!E2$HQ%GRYk\'geb_CfFkk)@5Ae3"ZQA2G4o'I_fZs!7u7QaTNgdZ"uTHKR(+:LkAY@8Rh7n1Tg-HRZ8md#=P-h6"$"`/7_q!)[qCAErH=F%_h>^>)5H,0.F`2t$Cn=5Mq^j;kT*#e#\4@G.DgnnL^F"%@,.S?$"Uk.H&eF,"GG1u2mnpe-7&\L7EQDE9[B$c`N0IW,N\U*!o+DS%LrM!]"/`ZQr?,-")*Q[a5pG51;:[SrfX`LA68?D5QjL-b'uR7tA%771#r<!CkdI3bcqOQ:#5#s"Q&_^l\-ra;AVBR&Abm1G9uNq=%K_ZV>9,One27Z?>E!V.]S[R:7eRX(81_tFcKH]_ZA997V)V/1jY\YajOREIkdS*Hh36qd0!f65JL:Vu1Fc)q4"uohR80Z;U,72gQ%E57n``LrCJ=<+f++qfK1Ga>1-Jp+,j.<Jn%$$bFNV:!p%#d&Wq,)/r'U5U?pMP_$eYbN-)1KY!#QXHt+Yp&\b3$Q;8FAJ>GKP7I&%[b,1eJ1)-e1f:&=M!n8N"/7!_Oq9e\L+pYL?j*/W7RDQ3/+bjD<YU^Tq9\6]_&P%1PfJD\SG/`a`@)KF<3o'\/5BJ^AOW:cbcR6b%&PE9U_0)LJY\`h&42a=s8pK->#M#\*:r;_?MQQ]sBF0J3/HI)1:du'1UWaO2)P3DFCfRW]&a&AM.Zsd_83sWRZ"Ssj-a"mAHpei\%(kM/p%#8"hOb^qtrWr"h>j4Gkrn,Kf`L1cs,pJ#K?Jl;.RrJH5<L?Jh7-GD:!>o^W$pf=P[dr4)<g[@qTN5=6[L>?rJ.PKA/I\^d%?BsX[n[$VPcl+HjXgQD"AO;gE,g5?JM"#J-73EI\T+V2u,^tJ1rt#QY`#8q2-mBmE]8F[#==ak;UZEgGX9&]iKa29("7bfb3ZUNU%86b0A"Del_#5]I"$^:d%#hW*u]*Juui+FK>1[1."(I<3Viqn`W5tpoF/?h=q^6*pWL[iTd!lM.B`%\RKS=#0VKSSMgNWN]Q$t%Y:%!sKd.FaRWhCcjn5&CXQ@6=GNkA'!a#8[B-o(k=R1J9F"f.4bMknCTJ<Q9inASg_DO/\naAi=7n2@.;kL-j7I42L6I'"Ag'CV]/8[%W\YTgT2!i\9_Akca`o]D2$tI\6O<meC7ooa5_';>/BQo8gVQqI(]?mJD$nJn!Z-"#W]@.:)5;J"TYdO"?%`%MGishiFLSecDj#nV%J<(].1(E!7+pH!([-?N=]g'"<2E,`hL&tAf`Q)EnSY2\#6I\TsA-q\.!TK>.0SH6^i]:$3o.6#.0^ZgCP;kkDRh0[68JI!"]A,-b%n\GFX-?fl>n[oM^$*XmP1q\*e:&maTJqW()%9&ecO'9Yu>7;2JjD8RANe`m6EtRk)iF3cJhSHE72ZZUPQe=Pn#.T,DC#7,_P3\?U%]4?;CP_!d^5<P*=90%N1IRnqP>]*LLF)Zn5a25<'ac-FjP1YJj86Thjc\14.-lU2J*W3B,'_HNR0MBHgD4fUQA/5TA_;RMu#D->-%.V)J04>`_"/u9li[pWMNMjYC!"O3^(-!0*jA)<p&T\CWS<jlWPqU%88&G%N/fa\hOE3C-T1'e_6QN9fCRmJ[e0G_?@J")g5islZl%ZI@3BRMNg)m^Y=6"U7dIqu>>r[p;_:j>u`9l5f00!$uk)F.P2P.rn43"=tCq#dmZ6`^[5&gi0ABd;5,RhqgB-&MsIb&(SAZ6kclY%+M-1'bks9[0kS@[&Sc5"ZG$lokH<XLAJ?D.e,,oPcfR$[6sUGcAE;.8]tVJ``P7]S6=O8GjN@PEI3L7<#:7u(N3iZMW\i:`kh)NW%=N<bk"Y6"L*"/'W]c5h@\Ua$&>*lT3CJ;jYQ](bPZNoR?GQEF3.ZF9M%F]1T;pU:mZE.-`$bI\A>dW5k2%Z=Ie)=-QUK9S944\5a%l4k!N'f,97m@s[UiK!9:s(Z('S9]6$WR[WY(+0U=5&'l3P0_*_RZk'lreSBH`j)bfYZSQ"CQmrjJmK=p?2"j6b0B;OE:F\mZrY@)%Z8We3`7T&<An%LqZk<CA*"5uBJ6g\%ACenHp3DRlR`9b%cdeKJb5Qa1SJ+"8EVPN1XmO,lJtI'Jqra2f2E7EuUuA(p,MJh.8+Z/u%m)LIfPNLZO]MVAP^4*eldV8Rte5B(LQe'7[34f-m<K;U)Z3oE1E\_ajX4_(DR4(;.4t4H`n&t&Dkj#p.M(g?</$ci$qHGV!$0MYp%S;u)R[Dd3T4Z[5P\YQ.+;q9:VlBmeoT>n/=@pK6!D4gItk`"mpMq%Q\"*f99#JC,6V-Mibg\U:Un1+Ru79$!KNgjF'a=CbU](hRH%GOM$o_j17Ym+*o'a=2QUZJ`[^F!oaI,G(jCf`D*2ZBFU7YrX(Uff^u!d\&.#iKP4J@$pf/+t%,@B?R&<p<YO]7A[$-gq'"rOR^6,%e$I?O6;lSCg[knJ_dc"\]44/Gh4c[ojLLL(A"DNO<$I%Imk"X@olDq24*bD.kh@*'\1EM6oD6^#><4*k%a0(01@nmBon*@i/iSTN%mfonBd!NA<"GM9/KaG"4hBrLrRl4q`nZsWZe[A2=RBuA<H;ZE$aQ!0/r1&M/#5Ifg.tgF!b+$=-WS+:*`2g,eh@O++2E1NFD;J7R%UG`@'j)#*;lS*GAXlGW"T@?b3Vqr0kdlUBA:*`c@j1@$^Y>nfAONh`YLb17EqYhY]>WQrKcC&qo0'm9hP]_:B]%0X<jXr@SUcFMp%B=-r?'XKqQ"^!F>-d/B&h5CYsNV.rQ=a[s[EE/EUSK;lm*WF2d-'mLh:@3?"@-8r]9KV>O1NRKd+s^XAU'#)WEF5\*BEM6UGqo*\%=Vmg*?S0q-nU9se.*$*-4S=,[cg1I#M#dWi>6MR0in:gfPW+K$6EEOXUP.:q-u(sa?CSjPoE0ks\rZUqSHYQV'L<hq`IXB5WG4Z3%10J<e<c(':OS(3_FY$"dJ^lBJKGdKdg?i$A$pAT1eXXqHeEBj5qYdAD<,DF];!)P)q=.dF'd&>]en!"L%@GVp#uPN/:uN-Y`9?ih%l7P3t?9L>lluj;PfnmhE>l9.YkJ[2j^4fQ#-OqD69H?<H*_[:Hd*gVOi;KsPSsO5-R3MlqfG+HVbb'#ch7(Yl"9[cX@g=BXMX$;K%ZlcQL4eDC&;>1U8!81%`g>W6L?<dO.[sttoU]/m%>%KIsRh!'p<]l;oZj8O22:oqC/=+OM;IDi>Uu?,6NlW[$dMYnocJ0\+X/_C\%c;24T4bfI84l876@+0pqIHEnn+YA?QS/bf\:<$O>U-%J%8a#L]*pK#hh#>`E>4+OT=-d#!;f/-MQF[VZI$jGF`dT60pNMZ(rNDh:%o`&YuqP,$]h`]%8Gl:<r_69cD5=euig%_OV=ciJ,@j0%>I?MiX+D2(H0D()'lfdq$h(eW[EXml7'EoH>8MhV"GX2%@4&cLr$Hf<B%>X;q.5+NNE_/5b3I18O%Hm7a>m/B]uK0Doq.MerbqOk#/9[Bd*3i&e)e#jgBp%ci='ZC8smun#M98^AJ&i$#sNTL'jR0p6m:j(a/%L3&"@pE6&!$J)dA7ZI>SI?Q6`"UMU1dko:%LonGL.)u_9/EJnGe^l,c0U!ogl.nlC9*'<*G\Y]K,gaXU3kGq`!@$12mpPkCnf#e?%HBL('D"//JP)eP!_k"@\D)X]'*]kNcC&6-C1P3D:8dtQLSnI%1Ne&Q4"h#H`"rD-@HCF:11[@UE]J71EDFX0-95AFe`?p/7cb8u0%Ids<cT!>@O=Ijb[5L*D'G7t/GLeQ6JRYK%Om(pI2K]og)Z<04s%80?23KlY9NK@kld#0('`*d9JfQl6<FRm?@MFKtoeB3$k,$T.r%YP5Bi]/ch,\\9"+CPh4"n$QiIXRf:WM3RopqA.[K.+ObA;c0k3_u"//a=*fu=?5M4QkT@?W%%k780SNa,H5/:<FFkf%/>6k;NQY]%8@6JISYX2F[$g:%6L"qC-7`4Pd*1\)9D&@%=-=;Oms.cUR>VR-c4:\7C6Nj'4!B1PHrf"R:YXuQX#P]*a10X^eD9R<1R-r3oiCGE%lF&^I[>_qGYr[KJ?$[&+gc:uuLdmMs[&NaZ3O!K[R_0JNDMS<i#YLFD>6\`X8M=MdL^uj*c5Mn9;kB:Y7QuX&&b9`jS;t6iNQCp!%7SeRI3Daar;ci-S[qZ;QkI"*GpsQ=sc2I@We.eY0S65.4(>%'$%JnujH-mVCWdC?S_BQaXbT:[fPl:EojE`hsUNC2(U,19H-dQ=*%:J8i:Ep>7RM^GX2pakNeloj(28LF\N,"+2,^UKo;;UEJZMFL]tgW''<TCH^#k8&BSLH`G'L>1$9MrNu:NV%L^JMbW/XZ4h-A-(*%%j#qH,PJPbaR#22oh+\R,6aaf-NHJB"X>U'#-m;T8CM#=hW\1@8euD-sbPMP&Y=s"PF1uoS&L,8#`c$iU<f9`r6WD!dP`LRUK$b7;%@-S5IW^P$(Etr_"Yf2Y:K'tJgZ-u]bA/X'ZX>q&HiEZJ9@lt`LDitj@`D-d)p:dB+h+?ZQ*bJ&taY.HrAc_40ha;Tu^7]MRpC056%38g?);]]"TP!Do-$MTDX!oPtQef,n$RL=9nCT]A".fJ:7;(uTn#$L73`#\9D?I[Q+7\dsL+&fA_k;J+GAa1e\nn&SS$HjMI@\:4u%Cg_.C]Yo5\V7f0\Df<`knP![mhb_B.cZJ$lglrQAk+n,.r>f%/L8Q@F4lF%i%bIbIbn`Cj-jU;g0J2U2k2@[<lP_j71.,HS<@LG"%q$>e,6h6,WWtE"uf1/?HjNLrnVWEYWp\W8X<!Xdq<&ANF'&S#uN"'2@C`Wg0VMP^5+^5="V#:WijRC>F9(mi-j;4dR*d%qfG'X`?%-61[Xf&t4jq\F0^RF<%Q+(S2Gm(.G4Lng.MG.ET+d5ErLI1]O]?1[p?9b=U/%aQ5TX'R8oEQjc/99_aK-Wq"-Y_3I(Ss*Tn:#f<g%UY(_tK#5qMFgK&8cBSQ30Ka7c0+fBC*!(taR,PP6\*`K`.!UguP-kgGqG\E[7H.l'>*Hqm""XVG>-sh[6U`9>;<O$J3lHlWbfR1b%HH"aVa!?l8M--Y@Gn2M>pc;3hU7fbOhM=dHPBhG8AD<.&Job"QA8Qk<A7P;ad6T=ce=rYb.eZ7>@ZNtr,(>J+B5B=a&ZD[!"#mjW%mRO\9coO`58FTV+U"D.GTLH?44]QNo@j*cmXNEpt:NH<GOA4,:8*A_@4\252?J&hI6&#4?51`cBq'[hT6<]gF6!P8*V)Hp%*9i`A%F@/)Ua@"Q^TTgt"OgBOA[mCqb&U^k5mTPL/1Tb3<mI>"A^M'mTU$oL9;\Y"dVc[HmUS8<\k@:hL6Bt&Xp8E7X2'#VBor2Lmp.lU)%TcqbAQ+_o^Z,P9W0<3I(Qs5D*e`6NaUt=kFG.Ik0,+hknUg=7n"sArq/M%'.kg>X?[FPDdO(N^`9cuhe:u@Bi`@;K''6D4m8kK"+%I9W1QX@J:QJj#^3YCkM7g9o-jc5B&Wn(M8i=ge8D`V":r(D*gGlUpmAWe7oo>5$K:@3H/.q<[N=1G5aHlLile3<%%>@,74&MnG9\%4!t_[9,@<2XlmI./&s!#;[;(#,J(j%:VRRaZWraaOtPCFY\ipqZWP[FaN3shVT*PU@aX&d_0FI3QT;deXQZB5QQC0I>B3p4Bu:`D%/q[!G[kqY5k(j[Ke+L;\@h)V5YH!BBJ7U('c>,+[\F6`SFeseTkM-ReDt0%fG10?UT"D@/Fc+9E4*!WJDE&e0=']6VkNPRciV+Qc%-@l;8QIN(WO*E[-.Hc%:Ip"lu!VH/61Wp6rrnQ%l[(;'LVH[j)P9#MQ>qKgZR'=tJf;Vr%o_V];SL-5QZ<_TS?Z*JP9Tlg&L5'@-%$H^lm\\\n>("-#'&ApTP.e*_$F&pdeFfn:a9Blu;'I($mn;+E4An,]nmki[Qc&/X-:SnHC/(3."-YR6F7^^NaM6kRp)o]qBHjd/B%;bL]X+L-,Wo(9GaYf6H)'!:ET/4>$j0G?$"7ug%[Ol4NFZ5\C6qeEP*E)l9m!N19M:WNdUHG6t*$e]"u>tsf%;J`g]hZ^nc5!;K0%[kI0Ih[>,3h"Q`oI$N2:8%]QX)H;$Kpc]\6qgC'U[;#hl/d0cqFD=Z*c3_$<k64d"`P+*$V4c:V]QE%Bcq5<<NU*Y),^0[N1GT4&%)<66fHI<c=GJf-!\]#3&DMJZ?8?.]'8e5`DX>Xd.JfMi>,!uZjXUDRk-2'Z;o2alO'CPm?W;Q#7O?eqMhf)TeMo3VPq.`3H&'CD#%+ULiYA#Vrl28#0S<\GWIdTRkmdJ('5(5>aARQXm3dZn[KqdM'Ic8HcC<ZMFtI<EtZlKgl)\pDPXNLX,>a_&9>`1=@o1\'[/+^;'M%I6Up)/M:+IqikPIgh2sq?^GJXB.'HI>'cb%8s>ouY-Q1Y$dV$5K[b9$5mP3=2%G\G7aDH*?eSp2-2JJdMg)@6`%i#L%L0+p=*3=I%[CS6;Ri:=JB]'WB&kd[e?um$qS?^7>gQ'Z?a5bFC]oJH8MrbL6>[T?YL)tUpYtr")f2(&&(#SiC,H76c2k,'>Q8C7lL:h2B[:$u\%qpjC`Io[+p5N9Br)(@T<RV^uA1m9IuK%dX*'bBe@7HruAcKk/.SCaqZb^-&qp:CRp@]p<m`I=rEecW04f<&0@hG=A)A6=ZYeEYP]%/UWZs=$-CZW+_<k-Ls?meG'"A-WI"t\t+Tq<2.&0S$>fH3F/#k.qn#_S9KHNB3>"kh^[7U<$s1ug37(u^KuJ\/Y=D+"dTuuq!B_s%aU*B?o-Ef&@)a2<8^u&eYiBFF."6<Ro`U.NVChW7Zl\boe#uNf0u8+Hj1<\ubbs9H/&^r;3,rY`',IcFjKb@Ap(E.jI(m6QgD,IT%Ji!%HdKqqjie5:o?Cj!gkjj(e&&5d-`(k4l:V-QiIJ"7)))do+;L&HkBCnb!$qSC&Rb;RcQ+*Yo4!?Y6L7O@jdc?p'Sp#_F=$O>X%K@PG7e&.&C:sV?E&974"jlU]`:Pae^J*HX'nY`0#\!%)moi<pPXf]*Op6'8+[TcJKNY00r\=-kg!qmLtZ?>]/p7o<G/D]Qaemp8%%q$EHO1lgX3CMuG:B-H"3&RgBA%g.MB2lXI2.hRY/61A,l:`>lNd>g,,MJE(':*IAkQ,u:3,tak+?-m#B8PWM3lVA&Jr$0qE3q=F;%Z8o2Ron4d=eONY#L.n>467uZ:YRU^FC*<>0dP>A_jPbjDB7YtY;-?"Rc7E"$8D[]6?2SH[*nGD<6_.8jM/jTT1*L&$qMJYb=#1;K%$`\l1VXVZG:64tf9;md\pT*+3ZB;4$*^8U.r(nL^e1jn/p!QlN2dt"(WY8$rZj\f_eVOV;enXHR<:'Y>OhU[Wo[/!j^40'?a(`>X%33kW/S^ElAQZ:D1h23o@oQ]`TZDCBE5ruHs`FN6a/LTfTF3ANj#[V7c=sL=-*J]Y!q7[3R8R#r!j[I69H@BphD6V(A^4cg%^XOGZ%SPSh.jj[c;0^\U`lHZV9#'=-sG=mLhB[TjTk928%lolYs#XH2.m!Whq:I,T/O+m.F5BPd5/>IU$rG5":V339ueFlJ`4*@NK6!AD.%2(D:MoAgt`<,]S\XO^gpa'OGdX$u*'+cV%Ree3'q,3c*a[,oA.gRpkU4I(OWN&XZ&;e\f9?QtHm)Q/4KCk8/UBTOc-q]p`=Bp4Q3%ZUB$/'D@%q)2ZWO^PB&<Wgkkk9.,4;5DNTHR#U/">9)Os=Tifugfo-XaLe_'>a.lH--n1[rPl-<%*rbs.ACCV?>FbuR85k-YL]jY%K5N+:?mIeSS\@=^%2V^l&S\7AL8k^SC3Qa>[=d69)P$440^[HM1l>allgl'lm9)S^D`a-RqI1Q;P==:$:Ia0D"UheA\Qm5p&=\"0%)N9;<3:k/X7fadKDlA#U)/blpWCb048/8b=_;-HF.T3[\N21p(e)YkG4H8uF&Ol(90akFE#2^d;)$3m*f[(6p,W9Nl!i[((ht172%338sNV)4D53m<TSSbmDNjh)#&8&*(nEjRg\*H/p-Q\ngO"&UN;FID2&f@5+mhhoKRh6ci\G<G5u]:Q_)rVJ=TO"I?EOq<:I=FhT2%`e>`QH]=-0)[t,.OJcbbeEKlQ*e^I['m;(,Kr"!<<3]R/`.IRj/gYQ0^icBidA6EO'(^r6Wn]d<J[N&lmH=;naTqNk3sqn_#nq[8%@U!(.pG^7aktU9\;QuQh3moe%$WC#-*-,C4*IauR>`c3Nfp6m%`+$I3)AFj0E65r++35daBHbt%h^<A=Y+@&qC$V2qqq]tQ^#n11%6.Xh\Z0F2jKhX0e:hc@cnXO$<p:l+,ZSP#dNtg81'!Dp<($-Ij8":Qi3"tj-31N/]U7?Xs6D(!rPpE9S9X%QDLdR?dGY@'Rjk-P1%l)1F0q:r)A$:qDf$2##RQ$)49p/MoE=)A_7YDB0Z7d*M4h4;Z[@]*V3NXTr:&[FDA.?JNlXnt:PW!XtOWi38<$VM,[:K;(l"4Fb_%X49b5[<+jS.VWX2<.\6iDN-=)Od-dd_Va42P,V2=.(#N:n4`,Z@Q)N](1C@S&Ch&fpbqKB;]K>)9=g=dgR)\_Bit=s4SB[?2p79C%Y\cWs4sPb@hSQ8/b*oru+oe)H[`W&k+Q\69>#n\))']K@'h):`.E,]'H!3dsp[SQ)^4ob11WIA=c4RY'%2h%i:SjM9T/qdTf,3`Z%&rmkskaE%G=ZsNf`,MpLE^>gc&A*I_;kI/[/1jFc_>Z3,[:Y\*DM]pWf9-u(HjO%2N4Na-eD^mV)6G>Y$Mn/KGZ7;U=ZsASLLf3g%OVIZSO3,[7c(nK$,HQ(cG]1^`2X@GH,D)>)Y_rPoL%O*t^n!WDE#-.M(gh"L]R#:HTA*cUI[dkHrIXqs$mbp"`$&.L)p^cQZ:^9X%Od&&;1CiK`)q&3)1T$<I\Mb[/p/D][FBBuX#N%n<$/RikbJg8Xd2C)gkcIHn,rb9a/E"gRH^08RMiJp(0)rV:dMr>\Hm5'><2`3E%&Z6;#caML$PE5VnS"JSD6*1RT"lf.ank##Mm5O.SV9N'c`-VHH+7,Qqng!u/Z1!rfT=*HPY^(B8)^Q8U)%,8VI4Tk9G<#CMFbp85%AKHjtCFitc(Idsl!=V\J<ml-&XGE8HA&IQW8h.H=Q#s1N+soG<BGSY-lB(5QS,6\Af^7Yhrdak''`6gaHZp7>BfTD*i`ngmDYl3H%3$snZ*'AOV:7PAWIrBb\C#f)6"`5/E1hi=pXotZ0Kg7%biiW<Ss"-(c`>A3l%UDZCGX5UNmffmU4EK3[,I+uFW?Soem5&Tn/=[$4%`>]8Y@n*aX,$HH>l-3LOF-1k8B%b!@.8ta.V?P"9<F-4M7*/b1]9R.S2LAL\4T#r?\,M9=m'!X\jiLja<INJY!g#A?MY^J*7?0ln%?JlQAnQ4eh?W$.]=("LH`a?!"Mn^IDb?ZT@'3,tD-,`eU[02/J1m@=IM<)2WT!60_I:\dSpnVY:UflOb%'Q;W;cd%]h52ZrfLiQB%0l`DC0bLP76L)sp?H.n/pr;[G>,"h*]$-n#<fWhMQ584^_\9VC0G5,i'5i)%-19UKHkhasmAX<a?BtDpqk>BcMuq(HoO^s4m9WF2%&kCs?U1KT@jmX:j>-d]?Zu3oG7V-,leCk>Zd%k^4@JMOV'4li5F/34>Eo6?n,Y[Q6W-:0pHd`"%&jBA$khFYn/W#BEUW(Nl="rgn%:/"3f7e>V]"X-ek)VHJ"?#`oMm&V72Sk_RIM]GR(VN&*_fk\n__P:X_TbuAF'J5Z^/*@iB0I3)>YG>dY;I!_(F:Uq=9[!.W[J5`o%3lEjZXT6E1[hoh+!n`Lu*8DuLEZOK49^4!dWFi-](,(h@\+%70pTa(^f`VT%n5<K)C#/)=pn9j"k>6[,.Yml,33rG74LR2M:@08Y%&s4AV9MY>N"3HDj.7g30W"lkr]#p:4:drc\:o9t#Whr=,?cjfO['^Y1a`1%NXD^8BISRRphJtiVVKfOmXV]jl&@R?!V!f6ShMDBD%]4Uo%SY@?u7?)&DQ>pB<,$lrH)lnu](7ST?ra+XlTWu[sOUb&;(El!9k_(A\W/shpXn/'62l+C>P2&.tS;!^!7Ho8Pd$^#0Jd#E#%+Jsooc:1reEoZpCY@FlF5PhYBkNiZ4`&uhl@+jn[N<pmr*[Mu$RB"W*9EJJd3=rJ^!F-WJdm9c(.;].C(o5rN3;n`+T^YDm6+YE)%,>9qG3U^lLC(KB%A?D^/l5Z@9SC'oj'f*5Ng<1E/:!qg45,SrRWR"jqh;LS=G_u=U\gNs2'&Y++"22&LVG5;mGnB9)88;*`+4@?g%@Nb7kJiG()*FK=H@_4He("lUc.uVFu?U9\p+nd5Cc1NtY=NeOScct-666(cBVN(G5-_ZK^O&UR2R<IcVE8%>A\##sTL]Jh\N"p=&%7<DuplcHoN+Fpb#p<kj_(I$EWd\dJW-:7,!i[ARf0)V08js)3RSdn#h>tJM)A96J@&NZD%l<$DpZ2Z(NMea.A)*M'i'Hl3MJ^T;k%,G'U2Z*)54gaADCXm\Sl>_ner\PJoAjnC89Qh!<4Wo*87a,_3uWe]e%(m-iU$F\ZB*Z-aOj.[aH?[r4k6J<?"k$gId\_,tm<7o+Z%8L:+l,QNS[_J2C,h@EbVm\7:&E@*;99j,b9Q#/-HW0%cbTRsTldQZ`7#oTF4!\756[;DI*VG*j@MmGub8,U7J7rJbU*ghA.11"s)%,sEKhLkCmSfa&1f[r7t[JVonr@bSFE@B'AN(l\k"]-B'A$(b7^0dJ-G;V@cr(GukGN@:)KORM9!jM,]H\[:HZ4.ntq`$ID,V;3b>%8G]I?*I6,i5Ld3:^<g'cL:$V(&EWWrXJ.K&-_b[m4IGc:OKq;i7r1%49ei/f;PT4RD77fmM3(5HRY@j\R#8#s22$Q.6N3IGPZp6V%]e'TqPpKnFXA(RJ%nDQt!RW8<!+bmG4$Mar;duW2c:o?G-mREVEeuH,CnR7H>H7<$hnUcT@NPj*3`^&Nk9((.4ghe<Xg<`O!N:Y&%S*%ELK81Hgp#!O)jsG]<(5J*6HJK<hp+1bC7ge<?,r'.kqF:`L$-)C^\Y^CF*$00ToH*29$Ui53oUNlhO&%tU8;+uP3al*.c'.QZ%m@("2=\(<Qj`H`29foDgCMLL#NOJ;EqrqGg2<F_oTb\#n3^nk+E%$J0<C6RUat5YfIse#4>"Fi?!fu)#5'eQMpehONd?qMRK@hCJ%F1VD&$rL3bnF4MV^pc%S'*VDc*@+sYM^kNmhhB@l&g`$NM\fY.;1[a9P45E3$2]CT6?P\*ZOM,)Lask#Ea*HpBOCnZ.D(-$8u%PG%-T`f?7R5>3L'VHrLJKAq<O90MU1RhSr-=&uX4TPr#SEht;`5#3Clq/Q[VA[HV`O'Kd^Rp(s/Oe,P/e3EFib7Ieo*$%&a:0+Z--I)%`j&":e7F-L:f<M]G#Sq\_^*bdQgt1u!;hB=QoWDPXdbC<0QB$)jhdN5XYZC#<^J:((o\RuYH9@li$B+u/CqlI&?Am@UXF'4o-(Y?%=bTc!gW7;u.5k,?9mJ$=bbb.cG?n5r0KE'(p;`njj-Q9DWP19\_6S\e2oZ^[C#g%p`A3-^MNtl[La=#T=[s`gWtc7YF(Cj/^PB=]%ddWNDE4i'jgWj>6*BCJ;,#$K1T2NZr;F%uV<HDU4,fS84.i-MkIpKAR*YNXnZ3VU#;LM^M5g9bY/:hUA\'fJ(NI$)R7ZL5NVGL2#%@2J,[)musE`rmbhZ'^QS#nr1g?2&EfT#,uf0AQD'8D,Sd)9</t!p1g''+!)NWJ[OB"[rg$PU-"9D'<PVUm5>F>E6?ZPp0O]bc6r8%?E+[B(<]Q7I=l^sf4i\]V\L,mNW]L6*N8WH[p#?H\&NQU=sEltI>B>jirnJB:0MZdC:]-H03k7\8OBLj6?%/AXcYL$laCJWpk]mq%D6sV5=JZ13O1OF(rsIDfg$I8ET%M>l)Z?OSrfejThmZ5q6nF^k5m&B2i;a%L]`;T_h7N%U&3#*5%W0Ai(,mss(6D?u:2tjuKR2kf%s!/&C7.anNC/O%:Oa%0]3at&Ff\U(a(M6)o@GVK;.$HmtKR-RV\1re\K*@]0^scPb3S6qj+pkLMT7iHY/;PSe.u&])5@'LN_(a`I%>I>K)g_rB3jVa\hq`?Ik8.Dr^[.I(RHr5Z2fsNG&h-A=n'l`h^T:hj:%0sts6-0as5YGPUHJ3T)h3@#H2=,#a:b'VLFM9A)lT!AN%8NV'0ZPN.]k\(0k<%=RW&u&1K&kWO5[k=h%"\)Pg"kgb\E4Smo2-1BdKH-ht,opCH"&41*&]Qco(g8%cHk\Ks1QBmHhoOq-dm2l8%(1AuF8XgBaCTPp$"f5ND*>r0K<36>3Rg-XlQnR`+.KZmG&\r->T(L6L4b9asICUsLJq7KHe6."LV:bjrF:a+qOs!?*)1kMCW!),A%:kBJDX/?R:M(8)]rJSe2Ik32i\m[mRM,r']cE!oiG/FU$brDC_VOMW(q!CCqU&3F+$4dH*&+]+PkeV$j@n8IXA??'CQ/n3AAd7JT%XP1RZU=+3f*IQFn[ZR=2pN(_=2Bj1!D,_?o$AnJg(;K:*0:f>7/l.XI6k@9NG-MoHVFF7:>ZaAD"5>TjL+H_'aW]5&JT^b=0L0rG%9n:U!'#acX"*KeRq4qcT1uAtH:&K\*@bK2/?H1u+.+-;1/Rgf@jl$!V02K$7+=dYo.%g[,?,,_t<[VV^!mNGh0YI[RYki,LoCPHm%'+(4l*fjNAo-f5PIK:;rTJckGEeJ@jFgrmUiCRsm$6cQmT\$#PR(eg;L=[4H2:Nb5&:Hm&Ls9.8!M%UfYs@c(8j^VeR3hE3knsjt%\5N->5@4qV0,mVXE7FlN`42+p\44rO@cmmt+t*:,_LlG+D1O&Ab0Z+LSQ6\E-9sKMW4Fd7'dngH8`sZ_TbMrt:S]nHLFG+,Oq/jD%GsKQ=@aD;X:*A5Y$9k\GNU/Mg&F'V:-;qbf7.;6!C\OrA/,KPiqcjVN1I9JPeFV$;OAb>+3E<GBe``*n15SW,P&i7EUMenG;kHuu%mIP;G_e44/hRfBTZLr]L'h.9t#[+@Nd*4X;TJ]Gs(ObJlg*i0QiP2tj,oGO@8A7QcO;a"XimW'<O:q7=;T5''J<<g&\feoeKFV7h%#!(]M.P38g@qDKZ/s%_Y`I#rGoED>'f<g_:"YZo[_6L%re=bGRTAU!_pkDs'[OR@e4!02Xi!rnen@FIZ>4RUJ5tO(CMGD@&'V0WE%4Qc/l]e5$rEM.R>H#"M,R9&p&!#\6=(@*OpS4HG2lN"L<Ie"kr[9FK*n84a2RP.uCWpO_EA#jg:A9iSYl=qDI'D2p=2GNkE16=u'%<Ds]T%CO\_8WP,j:D-5FC\bbYd"`4^0Il'V3A)f\9UJ=-Y-XpfQgabJNB;L2qaQ`>NaHnQ;SAKZqjg^DiqJ40,Z3CM.TBcL[)c/t%Pc<V<iJgWGKU!QE/P,tS)?5pFV7B["A@@T+oe%_h6,u9]2Wm9<*=H5_<q!.hi\[E(Sl_CPG[;^DA;o:jJom)&j]G'*Q7tW!<aTke%H:"5jF[oUtbd1)Mr:r&;\87I6Pu_2oa=TFTqbop<JoWK?1MeJ%XRU,-^bjM2MHj=<dDVb\/kG1[?Z'ZG0b`!'ljDEIoR)'+60AbV%G[9-D,oGf#!1/]%e]1d'<"Y`d^Gn+b(&k-j%20)Ok>o=^MD+3a($!LhMXo8=@UFQ76p!(7$#N<nR)nq=61I4N`=iou:!<s0=<]mZ%Q#9p"QH84Nd?0lkI[&FrB"cJ&`#4X_C4k4c'%1%226*\P=c%o<_-]GZE>q"Q+ag4'0f)O2`.:l;eD;XL`/>Fc`\,?oo<,<2KZtn.%;a]A!kLWEXZ0Kq)@TH@Tk5qAcm/t<FZ<i3X)UiFD7;!0tP>qeG-\f#BQ!VOO:P=XlCc\QT3CZ]J',8o\NYAg)?K(J#C=oL=Y4X2+%jg?rU\eIHQWare'570fDr"T%'@L,M;"OpR1%8:J11MofNPI.Ph^O?*O/8*joqM(Z:eK1X0)UBHKA*N_"h?GF0MnP\<$1+FoL&#'l%lj<?1XNV9mE_T'iaO#70`=c.lG&]%mqp.Qu]]u-TT)GC'Z+e])[d)f9.f^9<$RghrSH3kVeCL>F)e/G(8O'^\:]A':<a@Z2K`X$k%7P%T)#Qt<05l7hZdM%5lOQON@`%`Ad'P3q.`.7k'dTq7cW?16^2>ZpD\c;ge%$EF6kRF>afQkpS7>R5>ZL`gF1lppS8'NVc5<6A4%8A6kggD"H*(#m+TdJLi'=XA&fU=":rmo!&4`&VNT$kV)=L`Ka.pZ^!Wl;#qC@Q5J:QnX=26*qq[TYbF`4/Iq4R3AZL<XB2k$@_OL%*sAMX:PjRSb>C<QjO>aokJ>J</V7_uPq(J+VLhK:=67H_]N2G*PgeMr-MJF8&kmQ@f"mU3XW5_,J+(iQ;_hL%).[g5c"W.#-?@#e%CtFk.)Dp2Y]JSfL8]JBY_;^I8-50&)g8B=j*!ap[[_R=&k]\LW]@mihdhFZlUqId;\[;$8YC,"u>"pqN9)IG+gqfWG1Ljf"lm^d4%LaWot!FQn+W4T1&Zr"?NR,UP4nnhJ[VG->A#t%^%9Xm/GE^ot1FO4o5R\l$RRY'sb]%HF'/nKcl\$bes!N9Uq4Ip3)<Lg,O%UD%)%j!U5ec#Yjj$H5AOUcP:c*"1T2fkjRP2NT3*7WhU8MLJE'/k)E-(-/Xb:,,3p>eDEHqK4]%<VheFPP][^]JlDN-!^cse"3#j/2>;m%/X.SG0Sl65!rPWkQG54*/,3UDS.:@<#_<g<AC7E"<7Y!YPi+=\a)%)7"]5S>.2#^+e"etB6uJ?'n#X#r"SX>%c"*[5eY)&JWY=U!%h&X,?DC]OrPS21@B`n^_*/JA'#ft*p7j'4d,##[2KE*6.ht[l-kg;q'o#WohDLc7RY>(KQfZH'P4h<K;>mGaKpW;/SCj`4j2$G:Z%Tl,'^6E70B'4M2+#emU7K7,2-PZahf[Ln<@$O!O[IW"EA/rU7>=A`;7fMeafAiaG`=h.>q8M(!SSm*1k1A]Xd<q68d27GI[ESK6Y%`$ITq$Zk)>68?fH0d[[A]RRN2hcbq,-USrf7\g$L2!MLA1_6RS[Q2Z!U;#0?:LRgD7._`*N_t)PP1Mkd7FSG.qIP82e2Ic_XS@>W%9M"Tl<S<2gZpKrA:TB):/[a,35EtO,,-s=$-"OE]7p/2Y"A(IK#./oBGaos0K]NQEE7-c%X/!b]ltI)tO!B$0ru`J[[Ka&;[$C(B%D&(3Q+C'a+iKJ%HQJofm>'`WYP2\bA@A[cb\OF.FeD;HZ7p]R[ZRf((^^^Kqn.t=f1t69"$Irae?9qB3Hef!8dY0%i7redif/M^O%\Xq-c`_l/6OV4ug%aPF(UX!(p,tV*7S0^1]%Xl<'SP8\hJEPUtd`*,g:,TF#P.=4.lfJFTL\nT9q`=7J0GTdGl!68ecoPNr5pAr@%9$LsjJ,/'_Q!fO\SY9l)C%%?'j@$.7mY""B[-jXgQY*gGb_KJDb0>ROp'h'E[mU_,No.*)mMR0l]TIPaaW1ED&PM5Wb4:AUEl3a-%Ni*WGe$^]j)pcE<hr8C;khVsbR%iItI)94,ooh);h#I-o1s*BLMLh4kq!N$\#<;n.,?9'-09[ec[WeO)"K^qk2*%m9rYtJTn&LN,%Q=KI/('2*arTCA[Wnk"c:s?O]CH^Tt4edBg@#-t=Okm:ebTAQa%,dI2@`,H,5lQXS?O^9_<FV^IhC"SSWoS;"geFlndsPOp,_>rd%3;2q*SmM,@KD(D-p:CRUH[Tu8]@+$ES-(3=<[ETe=\/D!l8Knm3F="pO0j_@J'U86G0a!sB<g94h<l,"GGMeH&"57<qf];L:V]]S%QW:faG'QVq<Go_dQUo,^WW?kF'WYodDb)!FCW/iq6c^k=W<Y-E@S5mj:ukb(7ti*VFt"->]SBmqEi^EJ+NT5kRd<GBHjgK0<&QAI%/;O!Mqg,>[01b7=^DO*uhBM2TOSfIf[-Ih4*pT.Tg/2b$=cc?K_a$WtbC@]iBHbJNTT"-+9f`3)=G,,t`.o`IW#q$Zj3n97*&WWm%UkMZ^ZDC_(9jp47%B9]Alh?Z9h)NW\&UG7(2c99EL.T5^-01aAEe,9S;I99\&DgA;KH09No]XLaEtPpEO'Ia*dZ=%.BMb+KeGPl,%q2O!YiJ[>K'Q7OD)lqMD?8"dJjGN#k;)jblUdT[n5KbMWX:D\uDY6gM_.R$nE#4dsnDP;Y]/A.^Dok`7keArbnb'tk,\qi6*+bLt%WZ<d;F/@AdR)8a"g2BK@Rp6r:*%j^GRoTJG)C#BXGd?O!JhT6.1r+Gk4&`;B*4fne+OHT%8s\`*-5+T"3?r:;cuN=SPS.EdS1CON%<YpJ5R4V;hl27sp0q'>*n(RfZpJ;hYZA2,"C'kW3"KsSNCt!,QSb(#[Gpk^78Nfuf!9Z3oR[TS!(2;8iB4%KRbG*1MU/L1f^OL=@%3"<(4(8o6S&Os2WR&`RF1aU\QOHp>MbqWqNbBi@cBcKJtM=$naYYq4(s!\dof^9`O9dJJp2e.c>R&dfdr!e.6TSRbqBeDZ[_X,Z<%l_Lh$XI=('q5AC6SI4bb<&#DMHflsp8"^8nr^SQ/0Nq$I,*cnK,*YDTi-Q3U$)b:J?-@%\nsC:eiXSRI8!0eT%nn$N>OOWFe!EaK%\>^H:dlJ517@eVBMFa?D"$GeD;A.G(rhStk4*K*NN^Z[KD9G,r6(Cab9+<R:ijM:\(lEql2MfM.f;MpHhVf^T6s%Y=j/iCP0Lsa6%L7dnM0;U0'PTRd<R\f=l&7d9XkbfoYc#C*:MtnXd6&-r[`05;-O>gJ0:%G,*-i^Q999WoWD!rS9-CY`#F#qL.P564!EXI]X/E,`>%Q>O+]3?*eB:qVQSS;-D\I7'QaIG!'mQZ!/=+/Z^gQ;Yg%c'tID*>:nNp:I<namrr3!-Y:heg,!aXn98.N'\M1H\CrF2$9WX%%Arm%9$p,<,55=?1&*ANURfbWRbR*^XmqSM'?9?VhJfd?:VL?q?0.pR\H.87XOc0n(e]1O<6U"WQBi5<l1Z*Iqc6c].TPHumJT"m+2e!a%21.SDi,=)4m[\g%jgnfF8gb9hY@P&?=-2qI`(A((D>Bm:I72&W>qKlg8$&l!"qmqFE)PXed!>M9hH(:]*I-NW$!HRl0(F96LLL<a%;tIt@;YlqbQFt0Un1H""^::@W(SY1$5`2TH=-<O)K1ZH0XYI#QCk7t@ID,^`dO.GF<OBeAQtBdH#`mUjY./n9IF;,4D#Mj],3#)X%J60+T1NIs@YW$p;JlYjWE:d1'<r5;PmraVj:bOH6Mn>2en,5e%rZ3"p-G1.Qp,;ae@&EK1;gC5.I*@fhT.#1:?ZC9ii"'iUp!%m<%O?h;N6\_l@KBUDd[,o3O*W-[Mg':C7[`0)[poUTa&d6R!qHcZiD*8m4#n:R3>[4LV@`2M3R]\670_)!"[B#YYdo--2(]sZoGU#Tm%C`t2L'I[:YBgLC?)g!,lJYZ_kDq'(K'FmN"^_t"L#a6s2WOFp`d]0[oVldj/?uju=16cLa9[<3XpfQG%ml1n.T7FJPF<T,QUr=R=%JJNs2K:BO=Ga9V&[iApc/9kTm2sVTX8ZBgR64k@T[ah(VfJ7+g'Cp31O=_'lQ*ZmAU,!gl#,#fMis)8*b[#p-X-7a<[8Qd'M54`0%aC%L,+Q8uL`F_!^3mAXsK[=-c(Htk^e?@KE>M=8iYgc?#\Q7Uo04WGlH_R8")IW/V7'o#A0:%"0D+K(8+QrO#6o>UICd]&3P:CMF%e&$U8J96D@-tnNueg7+*;'?S3pTpHN,%<JV[><%[d4&`\c3_ieM'#ql84@2klHmqb7%$fM-W^OI@b91s\O;tf1V:*(G&dmeCtc+=%DsZ=T%>N\CV\MA^?Lk"2pZg_hRm$R,OD<nZ[ni!ALHN301pJ*kTiu:_7oM-$&I-XE&Yk)Qn??*b:$)A>VD;e+/aG9L)2ou/hJ?>I%L<m;no1UAO)9@r%(@kX#U6(6FBli@.9;\S`l2;h'iTn^=]Ardh+Ij6m0pEk4)aO:aJD@d[=H,XRJV=fKZpoF.$)+(=,jOcu!-g/m%+:=/LQ"0\a]!K:sOJIQ''P*kblboe7/AX=a!HEd@-<qpr]9#(kF\pZ0YX[Xf+;-7@NuMVHKSO?W>U,_A-Kum@\.2%Ean7XT0^6$E%2]$7iPJ&emcppVO2Yo:)IXNGp`b2U6Z#m#>Y<7u<!G]VR0<Qb,GZBTu-u/88A1tt9]sQeMhu@"cCZXEP19#.2.NHrUHnKVLR=!9)%(EAt5\s%0aPTRL)cB^]PS^+*DgS=KmiLrr"j`+'&HFUTsc8?=>ImK)'8XO0'A]l(Lk7JK`@=U+Bgk8.XOG/4J4n6F1KN_1(C\5),%g<Z+3j:f*,38QS,jNs&1G/_!B&pu;hJr;M/DrhB-MM$-Md#p_0q[TlV3^HKk.]'^U!cYq1^S75'H6&D6W49;:C-t+TP\Di<?$DiT%:kK^kAf.+2a%n_KMVXD9CIbUAGd9[>e^tKhp;'/rh,gH(,ENXWQ`N]=7ML\#Tkot%8GSIlJ#fJE]\#Wl^NT"XQ",P?2aS):(JQ"c%YQq!2E(O61Mb7rX9P0jIflXh-eo!&U`p4>JB14N-E0QPfe]]4W>@O#1rhrV"[kQ\]K3r1?m7'!\*4Cnd`^i)-qh"r1j*\d6nD[=U%Q/RrpcKc:dp1f4P@`WT;+5uML8c#79RHENG'`pVU<ifHoM_=#4:Hqs`Sa8l2Yk%&'Z/Y=*24:2Q4a_&ofDNKSk2fE2Wo5WJ`U3%=%Vj^+uMRj,cU#*r41mN/6;ij^,-U'GX`B/SIS?/,q?:50N\dV/J<,miFHV[T'cA+[;/jdAFpj1hIT;!ab52,'qk<pNC'*b-;W3Q&6%M\NZ:,4T4u,$91T?X*eXmQ`>6,cM*e5E%h2Z+3E%l#?L&AXYDi4kq'X#e;r`_<t7T67t?0ERH(I[&$\HiikCqDl7e;<KAC^b"bM:%a?%co-"n0'j__$ZB#h#W3mSbJGU719H+VaMcQE(EU:K0V!O4m0W73+RRS4n]H:Cn0em3Vbs1n?<;E=R8pfSt.*[`156.#jW9_sT[%ju@7K64fh`9:f-RLe:Ak04D2QW\CR?NO:ldK8A.#o8h?)?;C;OF*5u;j355YakHOVZFDC^.DoUdZU4I$l?d'(KR3MAq.#]VBHU>@%=4k$bEN%a+/c2R%S.F&h<aOD)<6iu5oPHGpkI69K'+_8]+Ut9d`.RdWi9)ALjX4>9m+I\kar.Mi(:'eM0CBQ<;iW]TpFVIfSugD0%U*1fX,LM[cq'9*KV+8.<hkEhl.^"uDO\u0KL:9"FMOu_qaE$6il;5,s&Q$Zs2S3p)?`gj_M%IrrMAiXC%YgQKMC_'/`O8@tKt;Nk%BaigXZp1O6orS>nb,61650/]71U_>:N&/5m76,WfE0Vqu@r7EQs1ed_9QUi,>nZV$XJrqZ"EXhEF7O\q0#kMqmJ#bA)ZH36l`!Xl%[!9jr3uM>eeDs=<NE&no+Trqgb>3E5.^s^(CB%700f`T^#E[kl^+&(C"mPk51D08sPR_;DXF</Hg1NhLJ#JjB$Kql*OXdHBiG"E>%I7N=#&\p^a8G^6p;G+F6Xod"H[%9gXY];K8,K>GR-"Xm>mr6IROmu%^8Ksd8&j=\Jl#d^*aDH+kU:UWXFm!YW*?7:c/EXp6S\5&m%P<V'M]<r/C0aeN*V0Q&R@c!tMX[`gBWV**p:9^!4(K:!:T/I.qL)k'uj<i<+RD;3B2B\f(Ng#$E`:5#rGsJVR)c5#"-V1BUf.n66%>YZE-IbD;tB/kIl-/PJu=K`!e8CQjHq&$YabdULGKhA^KY.BSBV[on,b@7huh&*Dk#ha1`$$5Yh)"*r0<J"/MhR*6Bm:sTAWa-U_%e*-%5Shu#hP_Ke/"0W9]>Q;B=ST5$&*Z`*uP;]a=,1YrG!a;Q>^uWhqY:dY%(SF^Bq/<Rs\7L544$j2qKesn7>BrEY^B=!'AeIXg%a=X9-f(fhA`%8h>+<EA'A9"UQ(SP!]>!THO6qe+3"raJ[/IQ=B5TT:fK!r\HOLL5JUV!t@*%Aj?TY)U"a<)OMMC&X+FrBXteQ1RN%"QFR')'lcF,Dj7@\9sS<T$/U>.=0Fg8k+EZ,h,Pe5`;#X@gFBZ0:UXhgpGJ:$DU$CX`6f)0Q#bW$L7l!0Nr]/VMF4rZ<o5RL[QA:%b_(5m4hH\/0#'3gW.V*"8cC;'^uRojIUrsW,A9ppMO+4F#;;o605GYO_XNDUB+G-U"V-MS5VUo]A'VTD<cZFV%#d!!GtM!:6;4na%jNGk*'nE#Gb8SY0Nc@1j^u"%oG<!-Pf>S7d(PKK^%;,I@Emt>h$h:p,+=O8AgWXtGf`9SO\0dh'ShL2qc=tF%HSg`'Ycn/MLeGqu%f6K=b_<XtpUN\WJE7$CQj+*s0,c:alI\e#haA1!?@cpNahkl,=Wi,X_e2DItk=Vq9ZQ8ZP"a^8BM(Qu;@0@l4jBZ8$!6tt7%>pd@%*!o6,X'tPYMXYA+j#EDG8ND83!;"9pCo;'qWM0s9@g_gG8k*jE7+dXJO&2V,2VSc0UH>@qVdO.mNsMPXC?IX13feaYKmir%oYR&5%U'[a%Q/cU6"%`kNQ>Zq'6ZA6SbU3P@[?(+"KWErEZK4;Vlsl=+a6GVh`WeIGiL#>kp&CRmp;bJ4>JAt[6bZk;D'1)k3_QR?5\bL>%jQ2F"q"tlf7rulcJR''nm1k.J(oaps;^u^(5^@%hG^011S#bt6\EFrAfGc&#N-k"!-,_Fj>g1Se(P%=0!!W>8'E.GkG+K?.Xi7\m%,pbY"Q!jrH2O1Ja]<m:TQ6R0:^L")U'WdAMnDcqs=PJ!R4o'\S<h+*o>";,3L]m&^fR*_+6C]`Hc3OaL#`*@*gd@NGl%BU=-)pk.%Wj1-&rM3(:bWood!B.!H3=kHXOI:UUGi)\A(=&72Ho7#dZ`prjb3%bIab&3B<eBIE;4X@c5d)qSHdnIh+^RBjYB;2I,uT42V,TcR%Y]7BP\7I6nR[oU(_M-T`I%l2\GU^sGbtE>2UCGEp9(GHjFjhm_fKo'CWoiN?I.GJ'%IO\!iaC:Qeb/<?[d0.)F!.?k2E)'0)31EA%*Y%DIE/b:l-a"$o%<GUdrW/LtiR%*nI0,9%a@#*?I-;4o-rD-mLdAF/M(XK/5Y9Np4:0)B`06.VHrBQtM#4qUQ_7Gh*ngZ5-d&=W%a#N2d'r6QQ6jg3'BAM9/g.<F/S#Sl9Qe;pA"Ocu]iTYuZaK96eSuGtp/!4GCLQo<o/>t@?jn\4F/)7^=`kXE,,+\2b=@a"cJa-iE%PSDjX\(9J"T<C'NoEq%9a_iEbkHj:QEdE2HR]G=`.dW/ZZooPh\i@lNJhQb]1NC]!5D%HDXgcV,CVK_&?_ml_r-W9nQd2Y'&WK+@%c[EcXXhbb7.q[J\n&P4^cAi)=T_6(-b&BCMA9lLkADmXM6h>mlrrLPe6oe$FRWu;OBF;JTRh`'J%''i:)MX'pR'FRR+t:A#Olh8/%3n@n_/<LpSpH__pP91I9d#_E]U*/Ofp3maj(52^VE-5=#=NDr66bgL8KsmFK8/L.G<kT:eF)_\dY0rOr\<fPU#,uP0TDk+$G.g@r%5U6CIe9[>th':#ODGO2KABU\E]t/0'XipOR8Ir`MV:74f5)So7\)ub\X=2D-Us<8P5*HPcIsBqb'+L&a.t%!"1a`'N=,gqAfZuFP%R(L,50i)^f>pN9m$JG/fMN,phWOl]BP1`C_L<]"mb,1BY$`T?;A:du3<3s%T,*.`55)DuJ(t;<36#8\/@j!C6Z2f5u(F_A-+`d#p%W;8Z2eB9qOAMalfR<$t]AQ@+p-'qJee#F#5Wp.io)D1I7-MF/P7GYU6[)7Wu_HW((#!e>B6pF)D-*CR1DtFf`TZT[V5/c//CVO]r%-/K0sYGIc9Eol)mY8>"Vo^jZ%AgRL6/p`O'a.E=L..>iAHjbHlc5-o,dVjnL\K6L_BU-k8>?Nj\k0Pac7qEOTE9u)B:+R%koh\\O%no$QmDDL2)(6ob/<e&7A=3BmdVS89_@lGm<\1!q$+oS&0Ia0jqWfX@3U81U$^3b>0=u/3AZ<u[%AKr)!>@cAt<Rqc`A09_&l0gFL%rjogh(@5D&J81<(Zc$(&c*FefK!Sd`]<d@eEYWl\bE>@Ioi0^XVWW*b"_=Q&$RpN`D5ko2NVu]Gg712'qPO"d-*!Eb$B=[sIn8N>%m]pHC3[1nu.]FLhDSVN9Q!@'p'[arY1<#BH7DFLO<X"V>%8Pn6o]HiR[&s*o:"F.s'jH`BRu8&q&D'cXiN:UM"qu!I"ne*K/-[C=%XDA\6"g7clin4I71R4lm>DZF`*`"gImpg_q_(@[TeCL-kaCsIdWX=i3jh0%HdS!JUbqc/Ln62_&^7p<)-F]kOir`@Bo]:$=T5GYm%"/B(A<&R:/*ECf<Wnrjn?f]MBmm6V^?&o]qiK2$ZC0XrD;FL@2fd[U&/bK8\GX"mhXm4'a-^IT4<`1.%64Aol]F+qU7b^,t[rk<S%#1n0>YUukQ@5uD_V">;NPXH&Cp6S.1UR?B)fnG?=N]k?o/V:A(?h2BAY+d2q1J@"b+:kIL#?\F-_1%'I\l,Tn!I!8rn^/"U&L[%F%Q+a#>\\1Z0,shR;LXEG&GK@@"(Yr*?<jE_%,!gejherGcG:$&*'dRON<"RY&)^m_0Wf%ml".S,d'H&WZQK]W6#t]=r7+h<HKuaBk%,A[B]Pn101&@DO+A!npG<ndk=:t=CIs(hoZ>JiXZ[308L616.!`)uP'$i!gD^ap1FRk-[sMT%'HVp%^#Z<BKBAtLdp+tm_H;MeZ8%Xi>*10-.mXe:]CmRE:VU0[i`r;,k9(##t]"[^H'Q6UPSb(.MJtYbr,%bKP*3Q+_9(%),C.Y_E9*BiU,9"gfHYBFCLK1c<W\PcBM7%+tcot8psp,P&,<MGe1?4CSAiu`^mE(n[c'!s)gDm6F+KT-mYf:s1c#45#\KfbgnA'$n15:WI-_f.RWc`&q[0"%bE/nUYib!aUd9B%i*7`9S<p#RgtTfU[OJr@*;7)N^UTr'DC=TBnKP:5#Wj\\pM]j><p7<u*o&n.$c#Q`jI:$+D:#%KjoI[)BZcef[R`^0kRiJdlhQMJ%e6luBiP'e%ebh_<"eQ`FKfEpf>NkTa61!.JDpDa6^"\km0ZsEl.8.6>[Mj;ZgcVBFaUGe1f=?]9;,hYj)V9-.=H5u:*[311U%9>%%(AHtbrr#0sL#+E,^.sfn(-fAZ`V^XI!n$V/$0<H7"YV6:*![@p<cl1M_bQf\&opDnKTO@C"EZa/3F2F0H[!0)dm8<W+)$fchk5_Q%l5GqC(+U%%8COt%Y8blE&0?Pl`k:Q#=q[j?$56a:?S0`p6OMi\U/Tms'9)@/\H+.*/LZT=QsAH^nX7_@/!UgkoZdi=!@9hu6>K^d%<$4qD.b0Vr!Q7%P`F+`i27>1rrbB?#R70Bkqm:u:1-"r>Lq\"U8$.q7#$u2_WC@[-[PaKn<TN7XF@>cT;ljO%ldbFH7QW1CPjTRg%;ZjZ*HIIX.IB?rIn,M.;8<]@+I=-F?J.m%jE4:pH]UpLffKC?g^uO5A3D-XhjT;:JgINXRfumgsR;?jRX#9LrM5j89HjAXi+>*h>%5un3oT&6'BKYV:am(e5Ps,L6biRM5K.S'8k&_EP2W?OLPMZo8WncSu8$V2/E5VA`T#i_^lSAg47*]E:+.6m3#^Q3<UD/SQ.QT>@$%"8[\PPIu"R;TNag>[n%f'F;D:jG73e%:Gd]%ja<F5%X[@n!L9Sm'^DbKgc<S0J[<"Pld><P*U7mBsug?CgP.LParl@7k2u9TN`BB%&nlm1ZW*gu*Y[[pd%Tmg#tE7UgjihdkMq**bnT&<H:SS\FuQA\6/_,Qj?$,9gr^CB(WWo2qssAdmZ3OGg+"%Vo!2G?\AS6P@n47\%adK@t$GkhDL!ZM30,'fqs)Q*`BDR3Z@r)sn.BI!D.EW/Ph=NnW-PMq_lY%4@++(L.@u!.,jJ1aQ3r&<IanK"3Y&$ju'R?O0GSCTB%,QP\)J-qnSM+)c\oiGlR'H;snm'DS(Hoh-@ko'qX:mZK/"a7/DrSUMK?`R,r8iWuVf#MT_^JphpUHZ8rj]ssUl<LqS&#r/Z+?ES+%aSi4j?T=:H@b$+49OXW%+@/_&LQ3]q]I6qh\gee=+SU1(L[M3Ijb%GT;O`c\d%+Za$Uic6+j4\SRZP;M&EIl=_JY:t'kUn]k9o@Q%oU2%;$s=&o21lW)l=uL/DW`NRDlMUD1c%-[L`'$K@*f@*[0H(XZO5uk4@'3!Wl[asKM/LUO,P1'ThlU4ErND$323II$<;L@RokfI%2:W$^jKj&R;7p>UIA%W.O$G8:_ZsZh?nHsI%NoT5PDeP?m+,U!@[mX5qqso4nq2q:TsSl+,_O>EQKfbudCqN_dm5S\U,o:CKZ-\s%[;"g@1MmTKip@UTPUPF^>USXh]RWl4=r<2lfk2pPUE!orS85.-`;p4^Sg##dL:jsr9.XJB*MP+>`m@R`RHXrUR'VNrEPoL5*E&d-%atN'_m+k`Ui(sd8nruuk.rfMRS#DCEef)MZA!s>CC/>@RSXlNg_OVq!R@M/V8WF9nB61=SI$D6/hW_:u:Ul:=WIo3oWnR(c8qe24%%ZEF[,t]Y>Lu'I"6qT0HR#KNR[kq.Z5sg(q27@BbchQ+-Cg,BM<_\t/,;_mt6W%Fqp@2hsh[K)u3ig1i+h%qGQjiCa0N&_tXB#^3%)j(t1NVl^Fgd[3rmk-5CT1op98gT2$%hF?]F%eBZ1?_p3I?!/j'pi5ak#7<GThlk%PT/__E[6't-u,_h`GXAOqc$fk]-20TLFLP*%WV+O_T^5ifVDE+.,pg<#IJP/^NiFEp;(+T#LL8\*D<QmNF/7uuS^k#gVc6uuHZ<D_kHutXOh4<RN.@Xm1>@c(@66E1d8DO:q\7Ol%.6[&^*GDYd-rB#R;!.1`)`1<XWtC@.g_U,7S':QJVVkC5?9h"X4Z](XZWVg4GXg3!R+6f@UZ9%e$/_)J:ol%2l4Asg!P,5(Y#/jo%;pQ0WOGTk2!HkuKlG++t<%s+Tf9D@^G2c=Feu:Emg6"??f7=5"qcc\J@RSudEi4<%>Dln2^)JgB[o1-D>D["BHA\;eU87=DDhmUq%P/InN>DnX.PU@"=NO>G5G!8W[RgJ^SkNc"A>%,$CB=1fL@H1.b094Es;3g9RBF5VrkVRiM\LCp>TCN-oPCap?X=(11i@mM4RbZpG%_kBTPV"Qc?K.5cgNeeg.LgaH,4Qbg_3UMRHX;7M],(07h7Xg9"^,OYJ+Y^]Wq7Qt)3A*\D#GR&Cg`#cgO@#3@=BGj,G.D>#+.LTT%O?.$s;B7B;"bUT??p`L<"=Waea`+,]&<$AV9,McY2hlKB,M\[3Y'h(#d/L=fZ>\2S2[`bZm@ss9<(C96]'IHm!UlU@Q9mOcb/lnp%esg:ZCFH'l6<IO6oR-&QVBTlX772<B9&p=EE.j:o3-U$!Z02_RQ_H?XNNZRJ]'XqtiEfiK2Soh6o(.Cn8k'hWMIVC*_k?5?3Ygj-%7BU=$iaS4H&#&<s40pTA,c*?kH&`NS-V?XO4YBWmd>j<nE%qcTo]^#rR2]S;81d'!SF1]dO!?_1DPV_5pB`[4EP`4[@1ae!A<\%/%p3o?l_9gi'R)6>W7Du[cLF"g:cU^+$7cq4rU@=3!$M'kkflJ"p9d%DYe7ht<"iNu)43R9W(J<M$46X7#s5^smgid\UEbUaN6K2FT%'i+1oHnX_$lpjmonS5"qRFYlt#K[D$2:3`VPW?UI0[,*h!<Yq8.e8'5W$2e]L/^:QH''<r9C;&NOUBq5SXq'<:'_[J-]+KMHt@th%HGNTD+6kuN$s9-_j#G+5ka60W]I6(kDZXt8=7fKoqFa&QnUCJeN(=aq8Q2pPUA48L5,@e@McrXVWYSr:XVY?O`'s#<EG+7"9)LTn%VnhP>HXHNj%p^q9^15U!-(J=rjE--re7Rs>AF*SE+Mg[cn1f8ZR*26?]8"\q>/DIp3REu7MABYcL&.LSI#sY>*@k!:[0S:p"&kuu%7i/a]Kmk31:^L;cl+udf-_\@6=4E>0=dd%&O:,;'E>_'2B?rDf".jo6,4?A.Z`R;'5m[-%347:t24G]q]fhW#mEIQ8!N?u0S(0s4%JGU#mEE18",2D$BiHZULYUfapj`P[RhY5a/9RW?r_)ukFLnV0E3q68Xd]]OYYEj*.V8+sun>,8g>I_H@,e;3T3'%_(@%h@*$5W#4%WB__KU_MStE_LSnl.1r$XYeTtiLeXdK>+4`Q<>8nA!a?=U"?l$VcQ6G'Q"I?=Sl'u3D-[dao/5VYF>L3cHC:RKui&a'U"m:V/2+g%"6)jV+]MlpIWHtkF4?#U_Be(8p/Iod\`DjPkl_QoHlQ-iNiS140#s/N8<dAh@$_cE='3-6I/;q4Dqj6kjuAVSA&PpYUY7?sig.^n%UD!F3:.-PUU,^Fk)Tf2HI&;_uOXT04fBhX].%m"Y%+hU*9sMH5)GC>[NG>jt_UGUEl7.>j8oYFd,=)]j%mZ'+W4X6fK[be%Dked*%J*1?o>I4<fA"V&"=#lM188=U8n\d(l5J>E3gCiq97I3l*9;C7LOf8U_b(p]WHFHFY9r*%"kNoUr$+>]mQ%Oj<e^ufdnn1G-[kg*f%`^`.ZlJVP;@u&$\01"ZV/M[n(CiMnj"!V^Ul09aP;Cjus$<jTFmio'2VliO0CADhKUaSHg8-L(I:gGttMVE6H*:GtPe!Kf9<<fs=%(K.]Z(Jq#s)bu?j&&3BToLK116$MSh]Y0E+*jj!ATe6!*nkZ0%S1]=@s$!,O(dA1%;7i5/5dNM=K2HDZnWkR@3#^lY+^fKMd!g.X%"hQY5FFrfEh.0P,?j&::)>Zn,*t(<TmTp(&X;TjRSGFcOUUJG\B4u+p:q!WmiM&AH@Qe&?4]4MHZr=M*KgRUfqr2.3!RR_s87+s.%X^*m49e64C$<d6lDaEr2Dp$(1Bq;T#k"&D,j$@dO).;RAM^%>d%Wj!f>EE;#&.dG_,n$c5:dLLLNC;cH<H6h4<?LrqY\B-c-Rc%+%BWsi]du2'3n*<%cbAdBd./)rDdR"g;=/UqmFIs;t5.uY7jo1b+'9iF]J,12ko?D<3U^3;==g"EVclF9h<.Y*\`lY%rMNf`,4@BTb%U[hrJ8O"Zkb*V',3m_J*,%)Qh1CL*a7\GHQ"P1/iV+UG=KPP\KdLE8[?@ncd&'4q)O`[;041WDc\*cFO`4H!1s8'pRrkfiX_p9G(%q"$`Lrhi!Yo(K81kV&N8BpPn"]=3:c[t"=ncbKMW[t!p,J+M8655`UiJ,RDPrhO?0h:qs02rED9qmZJSHOKf6J,Sb1+5d(::I"m0%?iA$+++O9fJ,\hBrRH;B?iU,o5Q95095jk$5QC_D2qS#khuEVpT7?_4J,IJcJ+n_jIfIHu;UWdMT)*s9r-*YgLHfk)J,8QYJ,^&L%T]P,Is5iG$rp:eWqSOCNn+PEBs5WSJmW@-nLroVjGFsB^q`k)R&-)V'f"_%$J%WDSj$/"f^]0pus7pmX<1a)eT(h*.rbqeVQ_-M@%p2BuiVgm.,rUbl;?N8^YHG8q!V`/htVk8G<G9;>3L]@=NfAAc@BV>8&;hesQNa\3WI:S<G;SWEpoho9J.+7s]kg`ce_gshq/VtGC%E"k)Hem3!bNg$EaE2%oa-?5n]FWbG'<(gRC5G0P2j^CDBe1[qD%t`+o&:$Ni[/+>VBA@p^T9pZ\Q:b*;gS[Qnli-ouH40u3>5<U\%Uu5h^2`Eu#jf8_3.dT8G&20oi'j/ahT?1\;CXOh5V3=FBYEEAD3$<(f'(k&GeTE@Le&qK#-RaFD[pD>)i33\D:Q$7fr2TiIIJ<;U%o=EC0bbs9HlXskcT:8?38)LdMTg(bmrq328f]59n??<#:54mahb`OG4,0HfDE5Lb1]bFteN9s<TeT<qZUd7^9fB#&)T2LC6o!f?T%R0+gUNnVt2Nj4$.e]Spl^L!S2O,0^iJ*R'(!e5@ug!,6NYp[=aVWou=:0<HWQ(m$YUL2.$Fka&'5D&1TH0cV&q3M=lOCJinYSaC<%-cL$grSB9q0/"'el+Q+CpL!YZa8DR=Rem'RbPoKBn_YCK#-KunRercXNELU&^8AlX8glI_(73GZ@1""4$XenRe,TZSa*!o`cOdZ>%CdD-1/,EVNVtJ6^b&J0Co@<a2q'lI5[5pQ=lZ!q0E=KmfSABI3o@(_@BfE0bcqX28%brDB``PPLN:QA<9YMcp\tgu1-s6q:)P^"Q%'a:&YYNt7^j\Dj#B@=D7kKWV59,Y@=]JN6uD>T/jn#REhr/=&,hDUP\[)=DTV%ufT!mY*"8Rt+FW6;1qJlHD^>$$a$!.)S2nP*=5%psdL!WLQAM&.oEb-)Fn9SNRLPlM5F`hDEIR2bd/]JG>!Wk2.(SDf<Ad_q4!Xf66uKllN@<`e1,"/=q:7_6Mc>FBh9#EWbdt,nem[%8b(!f?)pkaa74'9h[#%1fuIMI&N.;rmAKn/f(lL<]_",^[FY;[q,8!AK4MD3s"8n+0eX+V1)RSfO`d9I.(I$ciW[S)CItOArGCZ_%l\MBt9`UKI#s^_`9r`>@UOYdnGGTG">O]P^M#lEBZ$dJHN5<+\H8CNSO)-CS::V1mSb20kUOKlClMHXQs5:L9H-gAgReEo[n%)*E%,AGT$&E$defdanZPp\DlV9/IV>!87%%jpPs9QiDX>I2TKVp5'sS#OC(9\PA,kSLI@1MIImlD'W=_ne<_DPq(Xdsd&,;$!aH8!Jhd%_ih!>V`?WH2TaK8^E.6TZ7=sPhH$Z*>FJ3"@&"X7k-0!<MPl7qJg&<P2s8?n86TVjX5%a`X!P`<eDh_q]njN^0$edRm_QeYIe<H\%#qXn(B.jH0QITWHE"[(eH]0Gs6)[MPYX#>A3`U5RZfn"a26)<?et_NkhOITOIWP]"l6I(S-^qP@hSjYW<R.:-e[@1TFfX.*9f:^r%bU.dSK-es1&E,sQ[9JZq+V\<i981471LQVQeoHCr_anrV;^i2*Ib6'>jm#HA("Nj_ofM:>'Hl486NpIt&s#\ICRAdAOS7G-;Wi)D%c1RG$X(>U,T!sgDl:p(k:*EK*6rb,6D;H,+.@%Wq4.dCe8$ZashXZ8g<18\[B6!+%FS__^l9:Q'^=\pM(re%EVrq]B!$a_b<YF.E%fH_`122s%8:gBmPh6d*miUlhFf$eE]pGB!DK52sW7@r[7BcV>^G,cp0&0YuUS",&3Xd_KfM-Z#RC,&@98[RTiC.]@fOY"lTVnUb\%V9g8L5#n/8jO5WHdhjGZ`3TDIUu6mp/mEOocNilZ,Z\A?ZE:X:<nEqq=1\L]:iY9ZF\h`</u]iA[oK\+j9gRnn5bOgIA@-fWUi!)%p'PeZKf)ur+1Nm*`h`jP`)SZE6brucd3s1>`Hd$\]_Yf1I'R4L049E7V_DhtJp>U(29^47rCJod[s")26VCWUV%0%%@=G,2$/+K>%>X`hBTNPWG*6BrK/N;ENlqoLJ\CIG+]&gPW`5!(OaDYt[\rT\X>V&i*E9_=!g\crFHHesYWs5q*Td0u[mXtNFhB!T)^9u"`>?2=c%4Wali<E!<3<,!hmR]I2Ae8)!65tdk6p6C5AgQm6C7+VnD6b@3Zd\.?\G/Zk#@4+cGd,L(L?)!D,#.@\.<sqYe+.6Cdl>[PC^YBae%W$2bWpSlZ`'S</jSu13[_X1NSWq;H\!67>I<$t^@8u?-+!^`nk:o*&&_(55,bH>T?C<#a2%8e2f:R,+W+7SVh-mXoe?;ZNb-u3sr%h%t^_$E;P_+LKu4jmq2'2\#UNqle<ZV#4ca*G^f0+MV;Nr09Oi0b^A$)A'?2&)9--d[:OW,i!TQi@fpj%mgheo?=bpMd)<r,'hl_%TJeYBQb:<^R;dXh*"Ql2,`mCYe=9pToVchO^?WP0Y(-!;bluRsFidt(gjl1?!Ke?K#c>?Zf214gWdXg*c;9^/je+q!0:<!SLFsSV%XM%Jm2>9l%E7\;YFDu%?\*&3'3!:G1IsEV3kSOA0`08J$k('GX9*F\_T4?*LaXEdUbkN0!L9%Q<))C?^X4qLK0KqN;8O,s$JS"$R%Fc6JijQ[%D.OJY=l#S[@O%l:3aLTTr;81Qko10T_oQYj!Sb$7H0RV8r&Q[$,kEWHQ"/2J[05DsBZ7qV0*su/OTc_%%`@!c6<\:08%6pDJurcF]C\d)h95u=<aDVbakYqd[C7R^_'TD2h(<^A12EncN(^&;nhRHX9k2NK0T)tf+H`n(Nu9(SAqZD(tP5"8].kEumC:[iGP%*S2Ulf&rr:T_MOCH3'l=,HL0U>#C#M.An8YLn-AO\)XL;#L#]oIjd@<gGm:bcL3uKo8U3p._V2;3d'$8qrO#&I(R+QEfTPPBd`-8%r?lQuo^T<KbDmZ-IK/hTQ`D_\E'3FR6hUD[[eoMXKCQrU$Bj#uY6j/3I])XQ:*hl,VY'FjS=apiN]/t,n\W>1k!r^+n+,_0f=G5;%DEn*92q%@uI@j80BVM\3TZR^XI2p.9gjR8lFn,^[WreI?<+Dgd?!$Hd<c3Ce[pHj^n,)opjo/?)jjqW0*S50&:V6L)TC=%j;Gf4n%h7Ycg^Jfq8A&)*r--(iY'l)g7PA&8[#aL#%Drch;Rk="Es+^RCpdoYd#%p*pau6>fGBqCMiJ5^/?fgj3rC,$SoHQ<Y7(HZee4;L[%cm0K9.eFaK&0*;u8m<@3)'LM3l-?Ffe6U0p?\D8D$eT8O4*-(V`E@<Bcj4WZ1&rkM+XQ]UpEnQ&3?eAZNr>t%/CrWDrg_,3O:?p/%#C0acgLP[d7d1B1ZDm"h67Y>s?QH5qr2:fVl[+ie"GJGoJnfqX7Fm:-1s0[arQ(#A8tOBj@@H+)5RtoUTFS,F<FmC1qZ.K$5PpQC%0t"+#?#n5b'fB@6Ht8r^<7"2!`(HJ3N[f]tVQ-n`KbE+-MTsF@fo7n(QDi^uriM\rbQrmm1j%Q.MTMl]OI=)X*Rub6%c(8>A]gVn%'r;]kk[i*DS;F>l%67<'7kn157HfC9jZ'`mWTekB09n,:Gfk=M@[FbH_co)T/bV_WJnX4rTS"X<'29&#&rEGh3Dp.N5]U\*+jDkI%(aS.:OQaD6.5,\G5ddVql5Tpr4[8T\B4<I%(:K6DhV-oSNm]f<p:rF(;X.'"/MAu=2!,d`/\7aDR#":1lAME9\rWR=?kp.(?aFZ[%6L=*L[**=Pr@&7&s%3-DC0sU>&WXg?nU6;%Fe5LcrT,-Y'Vu)ohql-?r9&kUO,jemop)Q%AZbM"<+W8_NU7dT8<SIM;e]<%d.;oC%G;X(,gD*an]Zo&`Y&@XI-iet6j/&#UDK/5Xp#D)D?iTQ-mU,tdd5P)4/E(/.>J\W(dlT#GYg9et=+q&)^":NPT@tH/ZbPRlW\Uf;%;Fq3WjM=psg6TF%Si(YUhrPaV;QFNRL!_/&Z%%MN)'[Of>+]uiVa;,30U]9_#=6l-qtT)`rft+[p$cU:-:(1*7C;tX9,5SVd+jPG%q:._-'chZ$&h<gh01eTm)W_m\IT)/h+9h'Q<Ntl\b<Gd$DjtXZY/_Tso:pMTgi3!^r;(XHr5r&be7HDl@\2%mLqkE`Z%aB>g*d&Z%A_,T>;TPU9UDr;"froNJ!Z1-=%[?lN''Nd[K%F[T=l:d0VJGb0<4"MD53aXH.S/M.ilSXqG:QS:ehgjB9m_MQD$n*iHOHJ=`[c1]%V1FOhL"K#*"Knbqko205-VZTMk/hM;UprUg:bg=[EcpXT(L?(FOAeeW\(2'Q3lkN"!e+uej4aBBS*ED!8i,O5$9LVk%qmJ5RV4JK%4k/pA`jE?^L6gB_Uee`Ce[P6aB[,6M*tdhkmFTK?k;lUTGJ@hPX!$5r2o:k-b=o0$`;o>_m$@rAq99;aUQ:KblU"maAc<&0_AIb8%.hd4'j(CRLd2Uqjb2,4E2H;aqkr!G9[TJ#E9UR.DaH(9->O#XXIGJXdp\O0i3`ik,I3u]26H'`Km*TT3C5q+6DVq;8q:(u/naXjR%76X/f0$X94A3Obao29fWG(0&YiK2M8l9UucMhsL"h3qBu0TOnE("0#?.RIBAaPpYi-VRF:\\:3iWQlk3^DD]`Qo0eG*8&F@UH$3K%$i;BU--;UtVU'Fe$WD2TjBj#Cq?7Pe;Op4pW<[T915-p<LhZ0\(DLV<Fb8hj7SWPN3BjnT=u&Fk8/@<WeI,POGRu2:`r-#"#g-.?%2M)d?C3OMYW1r^kqH8[A<B4Zi?J;0UqEA@glZE+G'QcW`]g)dD[(8_m]A)W;eDi#[hbk8Via;:#9oUp,X/XfO/l&U%(b:/D@7:-l%o;U]g75]C'Och&VY)"VTCZ'Z7qZs)s^H`O(KUCL:";^us</$iJj+-`m7]dhjRZ5>NOJ"$WP@?/-OCPpOgjK?*oM%!c*4%<M=H%&b%<MHO'bhgX7+*u'oAr+OJ<l_bpUPW:==pqaK'/CO9I6PnH,!]+Ei7pq88S#'V![9H0-;U(l%')nj-ma"g&8p&bXrmiNjq*2H1t?Tt%P6_s>7(3P[,MYUHhE3uA_rps#ThcrP8OJ)/j?lJNqVk\u-R?YuY.s_mN#f$`,NO2c\_HiVTtP_4#/Z34@!NfD6K,/fVFd'-VGOuW%N"pI&T/f%M]D!UrN\7*2eAM<:fUn7ZC=2=@rL!gUkh;b\88[Nee<(TV]`iNARUYkcS8O_g,@FlkA7QJ4Vb0[Ohj/VN6MAju<00t5%8OEh58@M\,m)1AT,,A+&Y5GFu9E+bs'$8N<VoJS,Z/bGT31QSWr!a=?C"AO_Z64rE,Z4@HX-L4cp`N5Zh#eg6/.\OkeQ2kr_^DuO%<(V45htK[6eQM6G^oZ^aLNoMm0e-`_B8*Mc7,3>7d]?n8]"G'toG.!D&HF;4ef6n"oqEWu3B2"F-uJe(pU]dE>e9KC^OV`t#K[f[%pbel3cE2-CG!E@3c@1f,;j,X"!I8/)[66:d:pm0X@!D?&,N8*la>:pOg+id""UH_WMiq!?9OF*r!L6%u.6,f)4&$2U8i6[bX*-$_%18QLPF'=*)C+E<N(>jl-Y,Xi8s-aX#/*jG_^QZt%=WAB\^1`P$#:E!BDIX8Ik07EP%Vj,[;1>Gf)8;C%<k3+[+1g$orE7NH@*G:#%$*eZ7O@4r8=Xt3\",kYEF(7^>2k4Zb?6imGIcTc4]b\dj%>JW`%_oZ,PtabpRISesdLqN3TH]N!Qe\\I0K.59/74m:)6LFT+A3]<%9!1/X<_q=hcJEl"-!&%aXd[G>#kQj;__iJ-mUk(C>NNH`rf$j$pR5A\Ln6`n#dfFUZ;7[#4",+M$!FT#$c8qE<9)7p=9Qh=:6Wck%0No`q0WO)*[8"U<">'c/C74$q3V0(ArrUc]E3iH5!#OMK,5D7-B+6"7b*G:H/f!Ihbb$Z6A?0*t@XS)YTC5U_RJ2"^K]E$iQ'[#-%B7_hql47i;^nlVM)Y1qOMN`!I)%O(>.q!:]M@*0VYR\W<;Ipe5;*nR^IYk'Gm>qf*PJc#JI#qP%]#Up*$JO"(%5qY<&]R\J8?8]'%$&f5UE]ZpOVm^&A1JjA5OJ"_"9R8HQ<`Nd@X<]!0S*pd2qJH_)NRURj-%o+g66f$#f.B1F@Q?)lMao$]'@hH+7?mACR;SJbL\BS9%YiP'p,GrTF)EpD5M7AdKFXDrX>b@F3"he))1MimGWoemLk)rMr@'2b!M]56iJ&Z6md:[AS'*;]qN1&KG:jSU_C@U?Fb>>oC5)QX;%Jn[[P8momA$q"jm]#Y"NY(l^`JmsTD&fK$ec;gRT?^'ZcUQ2UqR!+d!So&SuNh>RCn$U!j't<Ts1-tF&&\'LiFY;h^.&\0<FfIr=%6,?tGfH]OhDgn)V>)nm>.BSNSdfuR,dCRs5("B1g/r3s>>_TW#T]0-\'GjM-Y1klo>pnO6lht_JCP>14KbZIWhG2#oCpf/2^>S>n%\=`Gk(pZnT<&U?j+e@\0"P$O;mA9njDSTR-)C*:04h'R%X8c#F7chis7`d3ASl\dX3m%aC"OY[pe%5u[P6sc*Nt:#<F\G'ap*EKI%J!JZbHCLtp<8:_!,K9sX8'rKhP;'gt)^^[W=,@NrnTKL0E2GNd,V"ATaLI]T)BIbqlhn"M9FCs9\!Y<1*>B!;@ts;p4b58:0(p`5%<K]^0kZ[i8,gVUGi+mPGc3Nc2I>bP7Wq]n"O1K6cTj'%(+:;!HYs*CP-$uFe-_hjoX4H#pN]of]b956rDKqG;()6DP;_R#"p(&0K%&!n$BYMH?((q1W^UX8C>NJiC4>I<Do;b-\<'EBb>;R`\m#f>[oHr@(Ige37cB+dV+M%;^%*"=F;_c4L`qn\#O3$H?l6/9%JKp%ML%C(Ll%N)_10RX;AA(Psj0g6aCuAbNk,,r4k<1k&&hFa^dK2,=Pc;G_DbW*1CdC&6KK`JBTBU?b53Up`Z^SonY_a6`%u\!,6Y@P-?\%BDJT/TC5fu9>B+bY!Y(7g,?tWY+c#/N50uJdR4+NY"_,c&nl2@fP&e"d_[ZH%\9&_Fpl8jMB:/NohI>Ql;\Pc7J9S0h+m@nW&mU9%%bI^68T4&q:5eEKW6!L-Sn]#5c8n63-!J^EeXR3c*/9-+l1.q$&mJY#;3tE@oIVpTW)-BX(0W8Rf2.3SmOUjG,fL:na0gS3AOn"h%g[L>V4"G$?R48cN=k2nSakL8hRL<uTNlp[T)8[?SSLsTaUGf>,o^;<<1cSZ?j@1#pqaM,[Q'?!i'o*p/"#GqVA=$)@5Ghs9e3M3`%J0*7o6Y\PQVBD"k8W\2+dPCO&.n3IOE(@oI*a^-f7TtGE6pW$E)Hh_r,%oG[c(_e?7/VCPeZq4LC/dm";B>g7P#/\7qj2gmF9sE#%P>@n:Pu:tWg1`/(W?I+e$*b;]0&/KNX'5XMo/4j413s>l#:kH[U]#l_Z,ZWR4t:(QJ`NZe(0rj?(LJg!pl/R7QV4J#XJqt.;.6d=%#fZJ<4i2-c[8t-VcMNW-W#)2KBng'_X@VE4A?uYW8HGq6M>h9%cX=a2a4f)@%`M7DcXC5L:Im]re=AX-f,>[.V^[>r)BuT@[pD<1%V(@$dNuH1+mK5>1pX\BjE>klH>e$h)%?XS]9%Z&dj,4o*3SK*!ZgLeS.F!(;.#]ZNNq9V=X8#G)G^1cL\-7D@4&C',+St>8UMfU9%N9hpKIN$WCRjB.Fn[9#sF`Fs(NH1FQJuI?07*M)sT!oQ`qpF'Rcq_&JB394e.C5ln8N</CD;uklI-<cY6p+"'?^#&h2,T3Bqn%*8%.UNd%i*n(G=CihAL_ehVUC@7oSul)SQ;cXPefaH[+?(n*gf_R/b;.94<&_-f'.WfL<*5!,B]4hJq<]TYW<LRj,W/sU=e3$B.].u)%]2hQ4),N?>("oso7ZhP5N5b89g1s=aW)<G2-Gac(Dj5JH>?ct![=X$Ef%#JF\m-]s(6dK_<sY7/p9D"V1Z(Xu%P)hX^LW$UXOMlS%[!X$nF%",iHm%.pel^\'U*)f?.E8>*+5;CUak6Vk\<jRj2Z)S.OSuYq?/&f2]H2`6I<JfVTh)hVo6!pH'Q`;^:o\N99CiM>MN:'-%R4L2hrd,UC:T+qT1#_c;*6"B;qF8HAOpbi!k!JB!WZb]Li?uh8r>V+'9JI&sa)Wl99C+BLEPGqU_)'$&8#YLbc[P^[Nm*-JIXV!K%&&0A3QPGFI\:c1:g(pM1ZL[@^.uLJf9(iuo"\1)b__[Wd6dc,TFC!?5"fmMYY7t3`Pam-j`\41uf.<&#H;XZ<P@XA^>VIV9rP)<,%l(&;'eQdU#"hNoWdXjmZIPnWP!E->l_'f/8lh4&b)C.\2>?;`">ICins$R,dmFsoW$o=/\OdT?O,Z#!'I:X9;Mfi\9dWKm/I8/GM%CVKYi.t.-ADgm3)3)P'.D_&Jb.W[Z!/:tI58Bc_+Q\,!b:3t9P&%_]1>b3U?I]?u<]_oX-BBW(4PB;B3I8+ksY'jTZY$e_-EEK@=%Ru>NYa`:Al"^@Nq!uRFc<Xf%lTF.ioC7rA_^oSb\A#kW=kSL?pY;\h77)-emYP"K[M6^H0Q6tB86X@mISn6lNU3'3X+R:&ji/G,V%pnp4i;'^VkE\5H++lS]qfXIgX-Y:(EXP]3<;7cCKU[2^HRT)p3q\6gTN'Be@_VeD$bc'C'WF0%"TtY7u;708`"YE.mi'X=-8UJUo%YU&DK^kBh0O/ZDVMDCJ5.Pd/dlp9"PE3`I)+r:\ZaoN*=35Ck>&eKYD\_iqE2lBt?AkGqe\$?!3:)%K=Ls&N5[sIOZMYGNs7p6TN%fYQ*C:I1"?QAf3qj`t%Ia;W0\gN09l*:lns\5fAC2M:M)`#2%'Itrn;R6Qh'7K$OXp1OjKT>C8+Rpr8`ai:WP:r1gF[Rf)GNE>uh%hNKccQ%5c!=W4:5X6,t*d#q[2LiNIJ/VSboO]7%N[3W@tL5r&s<5Aeql%Af)RQ0.Xp1Yq_,@T>_\e2Ps,q05&k*U.5hhCrt'Mj<?%#D[+5G_q$j]N6-#0D9UTN1.e9Ks'D)2':G?EUsRQiAr!58m%OHVs?6&i]hG=U<6Jdnh!IlWK;C*UjFBeS0"#e)Y\pPTfP(=To>8L%@9Fud7:1kO$p+h!'XU-id.<L@]g#7J+Hpl)hg4a35qrl2hj3c[r]$1\@TZFN3L@s!4Qu1.C%@2F%]?a5_]:4_#QkXkN1[Ut.HK6a%KU2=!60QedO9//R;ZC.YIGdh-[/dM$5NkR:LS=Er'/ZPGYLBW<s'?m>jSu.uLP9EI%!ifJP_E=<?<3<%i]*X#81.,H?*&-:=VdOq%EXt-:OA&@Uk3dkn'l1Qan`?$0.HL`56qF'O0SL8'dZPfnHXB:;56el3@=kG%ZU<94gi']?Tq:3]OqA"\CQ?T,3/<*emg#*4HK&/3%VOpD#5kXGH%0ekT*#X>t`]9ggBZ,[^XK>GH?+X<7mm.HG%]p4Lkkii_P+d:BOo>Y-%</'\cJD=&U>D+31f-F1@3I*gpR7ZO4k]pa%^)*S.M+T5"I88nMiJjR"-m)8L<N62qGeRq*;V6f(8Z'o`4ej^G9?_=rl+$L#.(6&!En.r%On;on2]m.hlQbo\=+dAVYPZ=%=Rn?_%&p1E`<7b9<ltaVn?GaXnoidNC,2ip0Z4;^\U_XWAC`F?`Z5Zs&[6KDfPYE;lD$u-;DQhbQpYh)^<RVbZ=]UM`LP)eZ0$[c-Sb<F0%)%spop,*ZXetaNoo&-S+dhL)T@1Z)&a-22S@a,N72a*O%+$MXJ*`()98UNJM5J;?L-p1Tm*\T5YQD49Ll>A<@c@%%"*pnehTSBlg%Ho$m&2;N]$I\k2a^0J;lPRko_a]kJs"Ni)eYLGGHAG?UI`E'K^=S(GQG:&+V<OV`Z]KVue6QD!IUaA93YKMuUGjlo]r8e1*,?,_!%7f#CnoFE!7W!`EKaYOjC?sU-`3:n5"Jg2ZSbALr]eB+IYLP0L>S/,_JSBu,2#[f+&4IpDU_637Zj@+KT,0Q(*d4^R;2c<n0SWr!e%,Q5#LE0!NONK!W),Yt,l#qdRUlb2iTo#--T@&fWj["(cG!l<?h*aUN>$QRU()M'Lt,G8WG*Xk[sjTRufo74grP]8@C$.ZI>&Z(V+%,/da%nLsmlRe_d[KrC$WIa=TOfkl5:^@$GDGkMn#;/sfbgY7p//KJl:Q>JHgX@Pf0+mfE-`kkB<9;-F[\qQ!N04Vt_e$e?oCt/6o%#4_)n)!kA=E_OapnZSNYok)@Um;;250qJWjPoV%]j5l$4M$DZ.f3mfn.%$K3EOW1La,&#DU>i:?6p0#:Nnp%)<*3E&NX_lG_;_KD%rGp%0G"beNO9PFZ/ar(-2+b))YpY?OaI<BJ+A-OdDC/YKU.6=c+C/Ya;cc<u;m[J.FGlTb7)$?^rG6QHn!pDGWlu:k\k"fcdf"62%qq\^Tg1q?'G8h*OC#74G0;!bJ:kfB:#*(MELfNld?'uacBR^/QctA\E@nVS,!Ptju3'FqXSO?R-14X;UD]ZIEf[X'E\'2s$`D[,%%]TlB$+>/V)TV;1@q3ge$'1>\\Gl4U_%fp+D6%F@4Z$hhug1B3^[pL/?\:>[K6BFXtK[c\Y)X&-$A)sfXGh4pCT?"C`/GLgCj4X_m%"S9J$fO8n9%+R1W`YhX7XYBR<Sq/-W#f$L/oTBcD"r>Y&:2+6(Q7Bom#;_33"W#t5jJ&q*eg'RIi!#4`Jm5"E>8^K*qQR^4er0I6%:cFdW0Yb9?:HF#^SQtgnp:c*]pN"K+pq=.DR`pOH%K-p7F0U*?FDWb>/eKtV8a:mAFb7__]kCmDP%cE0TE69%<D]RjKbC=<K!*_1%oeIJ)7Q?o]/rS4hQ%+4EmsimU1;NXZXoeen#*g\s&EXnpKn+n!_pX*ToNZ7eH'ee(Y*V>*9I<nI$4Zs%YPZZV!f(TdiK,.sAuYo;%>t:O+&i3/R"\97+joaX1KW*o)l6Fd9rSU6D`81.'/Z6G.j9scM,B7=r"Y0FT$9]ShAbalU+EKIr@urp'dcfS<Pr$J$*r-2mk.5CH%"RCe37?r/U'Qj2YL]99%&e.8VL`5QWIPVbJ;bJ:bJsPXi\I]8(Za![RCDl_@='XlSOhlL[j*3Cqp.FhZS\MjupdF(WJuRJnAkFaI%Hn-r0nH:a?Go?+$IT<tG)hS^lb?h44q?03U5S.1hJ9]'M`/fU2Q[p-JYmQN:Y[kA34a[ar(Lk8@@3GE_Z$nt_.,;l>M5$j&D,1,\%-[kUbQS+:?qs=:5mkY@jGn_CJ41QUO9;_55<dPuXWL\I?TbTt]`iDp!)V:s?0ja\Ph"fXEqt;s0,Op@qpj)f-GCmuAb#ACl^P7YF%pA'k^..Ta$gB;ui+ZjA=#idq1@>Dft2.gh1:01ntk^8pGedep\B)g9[$4fS61s;"CG5/PlP.+pWmL3l`nkr"j!Hd]S9i#.D`m8#1%#>qPt\-;(O0]Mib9)b"U#:%n\7J[&LX_"'60g^?_[rOVPf&[TuQH/':rl!qmokZ;5?+lEO.$W!SRF`ndRsb>7i03U)P=8PF[+=T,%Vg<"6Ju*JoP'Wr3f@gH\)\8m015#'#%DhKqckJ&](Wc3.WYRPj`@/h*M>uq3rF^EOc`jt-IqG;h8Vcl/(#SiVT?Xleq9N5,i-(d4%1I6*W`Z(0D:SL.LD-a8I%u@ETW+N1lNk'SqV.t%TOg-Hgl:Hf/0:GVas'tY8jT0kkg'nNOK9DslL"[rFB<_QIfPf][C3FNDGaWc)%a#0m&_="24L<1m#g2EU*fXLmqFP&AfqO%a'M?MS5Z^:!Ki&NV'_t=1hSd@aAirJB@)R/!mD+lo79OF(tQ7"MbO*&I$^`Vl"TV<Jn%SG+#[q7,(l&JX,o+>%NSG8m2F'6;iN[nWEn^@T?[!V:HX]dHc-)1uK.U^$g!Wr\3S(BMK1^9fTiS_+P3>%t7:jVWVs1t#$,rZr'G%#K8JG7CCc<#E.sUN8:*KTd0_eLCQ485i:YB@OZGMN#TDA/D`Kc68cpkAp6B\9E@F(r95Ya>E&,oEi+F-_agN5C_O<4k@mhi+O`$K%CM3NQ$]f#;R&q_E+[JBlR(c713F"Fs?d?&8#`a.G-cHHiWqj&"T'c@*F9ac5B@\DNZE,CN`g$,D%2.s]2TSPQ8JV&eJRC-SD^5s=%8!gjWmEq^8n#8+Gl!&k'$-\;aE(?7Jm.X"7G1d:O_B<1n:d9%P93:H1KBYFA]5bn0J'.HS-?+'VD+5oqd.G[P"SG;Ml)MW4kJ;Au%g,+9*pKb6X[/F[8Qfe4h"TMgG%mb3GgcQW+EV`FlW\QM(W([^78t?MS\qf&la6@iiF[d3VeDYZ*L'tlFfPGU%`TY*n>Bc\/+uBKI%?=F%LiKTm!/Rh'F>Xl[\,`ta&<?%*!.;8R/S4BNuYDqM66ipHI-K9[^Y=CEF\'+bHKR/UgE#Ec1S^^s?e7@b'm)u]o8Jb4(rjA/^%TM7*^r]P5ZfF)>;C%%C;q6@iqNXE%M"qN7:ADJ%maSuIFILdE@;)]23]'#U=M"(2b0V5!.6,[t*N?a-rbFAc`6]<$^f@4`5Zh)aY%"8b.>9]'!"ZAXE*WqToT"[RAT&@;B>R8!d&Sd(TjM(cC$Z!Whs<'W9C^<4b9iAI[Mip2`Oc9"139ZCVtNZP<9^O);nn$?^SrqesP%Sao.g^`@g/T14r?8q/CNZ-m`?Bql4]_]HL0T.C*>3+KqY=92D"aTHfo6q6j"U=3In;ONGUp?"m-P!-lIUR9e?T\2rmH*%keRJI!b%Hg1&sN?/e]aRK6CEojl6G!8D@QZY]6k2@1K%_Y%U:6`/Fpep4.iK.%pmG&J^IYLGe*fT[r.F]=<3,KBUZd'+$O<4\R3>?k(F98*L%CL4pj!4)#GIr-J2>1!]Bb$BU\r26Grh2eC]gjsT+6d/g`j>AClWL9mF%^0JdQ/gJb?R1"TGW4`qTRg<bn\Ql$=ILdo8iB);2SYqU%%lS]S$0Dh+SAWrIGMU1-3I(Q*^\AU@PRoF2kB:GZZBDm,6i%`]gkaX4qjNm?'.uKV)<e`.=.`QdK.)ea)+]ee$9'Z^;LS+48\mV/%6Hlud(W]-:?po5`'a3u078]1W>t$1nJ;'[W?qA]k;@hYVmkpefqPpkVLVn=2J]o;BA[!puUF7PnN%Q**7&q7NP2THGp8J7L,'JTY%aD3&E#sk0*9hfKD>sS-K]7T+Fl;7`5:C$)eZA5-;7%e?6%Gki\:+MJ@nF(AU[k1@r;>mT-;M8`2i78Tn:?2a9WaD)"'h[Z*!lnsL%!SMIGn"`gPPCu#RWR/tM7P'G-Ak>H'3o$$rMJIfUV7VS4")]<VeBca,IZB1*\nb]\=%9QY'*mP'Y.^mZ%^h_@KZM25k7uC-RE'@;%9d,NCV)u8d3('>Mem"9+NELAa[PAMWEr,FcK8ReEs";iML"2<#_%dMl>c(p0dSg0DQ%2]*huH%)9*%\<ECjdB:-hkB-:C'*Es(Ut%1U$C@1BuF.Sk3K?cp3[?$:q]nKQ*CPlXnP$:X*Q>1C$<'l01O#HJPZ442OmT!t1n;\11E&nY+W,csT<SI!KO72VWHLN09dZ%88-\%9Tkh>J9V<)oj(b-f)Ro!Zs\G+FdN$FAEABTb3Tg-,=Oh2f`tIo`BI*HCcL9C5<U1\Su5l!JlIPd?@N0'JTY7`:2sc@`!k_g=j8\a%aCp%K!e6;%&4PLHl8k2,@SO<Y-']'OU??a3e?,F*eq&CgLs2"0@jlgDniq5ND1P#q[UZH%IGH"gEn:F?erQc(1MbI$FpQ"OWRPe.%IPV;-fZ^4i"sHJ>_L=[aA/u7CJj31^lnLFiYL75OgDaM%F%JpB/An#W-`\Bm>-AQYJRJd@7I$:6^orHOFk1[LF9C`,c;NguX6=*%%"4---Z0NX)Gc-2'4L2!8#V52r+QL"bSjPo>.VjH;OB`r^jB9LFQc=pIZF.<4abmSD6b\Zho"'s`BoXARX`6rJ5uV#m[icGh'f;nk%_)3X]AR%!Z\5o"2`du;^Tf9VOPm\E>9$,]<]6J#7lh-=f:eH(&=u.l^`5-KQr2JE*4E1&cM06a0R*119FjeB?c8UmmCV6(hqI?/q%kTR/c:07n`>o;=<JUFNIJ83@(:a@G%<I1-S<FV&f4+*lX(?VcAGuY,)mn#&0EH4i=9#T:'*K*s;`=4/j<lV:SP@C1%"8:bbj+dS'%)I^Gl(sSbT>!9Hs<q(06Ln/rWWZkk$WN;2*NB>H'3@Vgl0boqL0GO<nW1)O$n,)/MJ;a@CmTK'qR!["t&V:'0lQG:TOVl,t^FSJ<%KEmhd6A)741)`gk5TXmfFB_Pl;^U-poSG=g\l."L^&&cP5BOuOe6mKT&>[\0M((kA0Hs]mVc.?@;kDGs<]dBpP+/$PFs^!.Ai+91%FU^CnZHcr_fYE([_IK=%*bV3<!?:Wd53qO[WS$fG-THXWT0P8-5cK\^,Ksp'c3o&-)"7Rh=o8:]S2!@KrI[Om;j](j>YB.c$F9=Z%fkM'3A)g;n`i0DHeksAWmabrKqh[F]ji<C4`Ej^gA-R2MC6BS_e/":VfK)1uj%$aQ?=&#nKsMC_&Vjs$_0DV.GISq9f[HBT)7(64%R0>@G1?.grY+p6X:ZRh'bi&Fe+]I%C33%l0E6nW8\h#H-$C7V7`/2WrYQY9h#.JbQh^T]NLWqZoe0mY(EmR(t_/aPBPNBM,aJ']2%MqKO>/2AOV9e0&oO_K"qr^>T3+_M*qE@mVo9pX+js+&<816N.%Ga;tdF(mAI=K.^M?'E`aV7/D])]mf')eYV1b-[s9U/cLW$SQ#P%a6nnJWQGeh")C4c)5\b;+NKb50%ROGC9MH_WkB$[=6Y=amnZR^^S\k`$lNUI>"\LjSLM?b/.FIPQ3<*_9AuMeE_#Y1F<9sn%9\F=%EfGj#_+a#0_$3SY6:^qhUF#j6,G%KdLT*HhmpC!Z<Xl(QC(_/,?D0l)rYMD\rapo68(P)R,a,eP:h*J9<Kl>'JoC^f)s=u-:>WoS%^Hd$HYemb'ErX9So(kTls7SBMa8b.4s!<?&%m8iqRairAagUH5l;TQ^AhR/&oEgTTgFqP`j5>)m5Cjhq]uN*ihh0%<T2;E"rU#j6%+4[;3\`rQimbA81UIjQ\@V!+?CCh@1[([hF&a=WTK3cPWHEEYm"GFH#X$_0PE@:<+P/f2/@KC1Mi=kfCm/p-sp0:F')!`r9Z1n"5%XFtNl9sPC.:b^`o'C3q_.BYuF.&n3pZ14&aTX*>\<1?+X&Dhm'/;-eVM#Tf\j^7<F7qQ.KIN8qTmk8)3UgqNQA:ic"a)irm\O25r%CJ8Wt5o.*qIV_ADE9K3=3beIe?#.D1rUEEGB&EF7[d3>ln?798d-o1<md^C(^MQT5]KlrOIRMd0%\)GH`md+J3XdI;e%E/-f9MrI%j4A1i:XuR+fK>h]g8IU%h&i)<e[rTO\o.O#rRclYrVjYE]*n+O94WKO4p&FT!)r9%"',B44,-1I=5?2f:aD]\[Na9[];*RT;?M2M%Bb!kc0uaH_#\2?$X?+@D0jlF1=(..dh`Aq.Xm5#L6MWKK-WT#K_dQTgWRh9e9Wu:LfsT6^:(TO=W&A=cNJFIm:k2n!OJQDP!s^B6%ML9_>`T:T``\2om'SGIDZHsSpn2<p"G(uAH[.gMd9aJ:oaI6)!K*A5:VlM3&f,^0ci);^qKQ\#)!3t7/o\3ArQmU_`HB`KH0H/8,%;`[F7N<V'-,V'JMU+"&YAcS1+eAI"*WUp?o(II\H,2gG#+ZA@9Yl9IJbCOc2],,3Ne#`i\^SO#geOQhZ>t;Kg=6Y^8JkQ`qn"1p%%<f\0M7-frNX;4+A(L.`A`G6oG9!&pG_E]*)iG>*ZYW8r0W._u&_CE^*/JL:aiFAIBHTj!A-u0_9)UM>+3g>2QB87,:=P,]Af.e*s%j#ZO_cXCqF+aJ$>caZ?Gcbc?>#?aQjU;>$G&&tc9Ypp96S-qj9\H0TS<L'6FFeJ(:.^2QQ2Wpt-KGakN->Ul#TZOV4<73:B7"IH'%Q57\%'nsM0X-46a9%1Gk8J4#lX;P=geuk(S)K\A`4<J['ENtW-)L44'i,pZD]e;5r9@@/SL&XKIE*3%kiO*"%.:/nmf,9+>M^R@G%>jFf/];R:kQ8Ye:?V(h=,uP7#q1&=a^FEM+RPRtCRX/_A]mkTYc[a*gJo_,QM#T^\GRM/L_dTi!jJT3Ra_rpJS&WFN;21uIef8^>%'Ms/66"lBGY(fin)KHB._.n]UA(:Zad!+_+Mi>?PK-="?p&!?Y.%Z;BDLi@m"#"or2<6,[$J)AX"sen5^YQKhreC)]+2:h/HF2-"%lEl^k:^oo>YMmMQ`8X]L9puEsa:\_fLii^VfHS0@ABZ\ej^]DU2Mg6?d\heEKS.1g*8_@#Wii8jJ8!1*l#@`Fr):A.g?"3M?)uQ&%gO(1/%H61bl86lfo]:oaBRudSd3:pQoWOhZ&"Pb;m4WLCJ;IXFm-Zm)IE87o,-1IPk%A"1o3i%RC]j6k"tq+KZi7md9/]A>[N_fg%3Wr@(&UoV05O0q&&;G%r`3!X6Q?QLgeno=XGCeYIT8*ucPl=)J_h4'dE)73\]=#_XVe9)q6FN\W/Kb_-n9[-TrJ@:>26\e7aVX)W%,#]oHDgrKh2MEtfmd!mYiMgd=TTptKaTo',!H('%$4ROs&RNb#B?8fBEV)%?1F9/+c&=k7Kh>=g37PLnc`pY[H$k:shk*,Kq7g[H%XlG@^1XK-u6<$NqUY$H/T\'lAH-U?]_^aW:aYV26^>qL`f*rNbb;e#0J6&)77*6MeC#J_k*t>]YnueVqEim./#+S'TP=i'mEeASJ%Sk#<RZ$/,E9.8Eplb$))YNZA;`+fk2PE?7d=&IKpLhu9"O95UPnkU1cQ\n,<M@^/>Y9`A*G@K,=Dbbb"n1(fn[*/!]^\uT`"1*lb%U$NpL6d#ac9AKsFen\]-3Cs>G3aWt4.PD_G292Ws%5Bb1<=)7*Mn8R_"'n\f<C1Eo6d?D+Y,*@r0XB`UmBDg<6qXZ1Q"WV2.-659%d)b?ea,-#aDT^$,W#-un19?Z+K#BlUf*rK7h)sK)OT5WB8M\4$+)7%rVLoE+_/?>4(O>2:T*O:nb70\h4*fYT"\&cS_15L3Lesfn%%\R1iA?n?f%dDnN8u#AmaP(RoZ=$J^XeHqH)nbUYi:>>^14s?O5?phg:==F/mKB5$3[At[nt48e[4-lI8i3ZT";'TgB1Prc1%52#%Le5,lM+1T.M.gmtpt:l<M2.*)K'5_?FG@rFQg<LHPV.WE*rRuJF@-UsI2Ei7mS:J??g?o:0SmZBSlMZp5aJ^hTbL!=5_DS&L;Mf9%iW-g/D.NDFe5>J8V:3tMW6(tp1CX+YHP@;a-pHI-%&'aV9>sst?sDA.g)K_1-p/%+QC"t!G],$dlO/+'>p@:SFR;TMrd4V?E+pmr%1:!+eiOV:A.*UheDS7-CW_&;EqmZ_*p9.Vt>L)qj,D2G__0:L^jFs!(@Uhdq'eTq5%S&4M0]dHPbKSKue`pGq//4HtR0K4WqQQn=%98R<Rri*QqAp0"8Yko.=Ch#pa9Zh+XS1btM>28qb,(Hn7J$Q_:k9A_4%s98*5u8j54p$^'pqr6A<lnRFN^,@[nsqk4Gb^4'_D%o:%&gp>=@bQ'hO+tog0;"UsDqrR^Ra#]DEub(CpIfIs&`gG[1ZgH`cGjI\'9+4#CqLk#>eehS_\9;\oW+E:$p]+G>HEhU[+CC$0PB`G%0/GNO)CU^aYOsYp:5W_"m`[P4lA)nPo,2VIKEi_7'0d@mJ,2%@*u`EFW[QRr*W"ZuaBgNBGQV>e"%RS24J6u<>VA?g90bY*iZnFg%FscN)Wrq'InXY,BoA^``AIduQ8Xk8]EXIn=$FI33>MP!!g:Ec'D04Z"qZ[mJ%Jl3-S2]b!?(Y079j*k\E_Xr9g'H21_sK;L)o;sB%gbqd+06R5`lT>8ip^PA;d!ro"m?q%CN&Es)kO\n]%C%apS1`\DJV1P9<`LsP]!E_4C!p<2_<,<+lSrt$L/Ee1fJ)+555BM9VuI2R%7]o<W/(,8F7't<]jncmD.3M(B@FW,[d^TIIYsI4NV4qp9f>@uL-U:NLON&4i&>.#-0k-aq3dT-U!(!&[j5pCkJ1M;fS21)'\#Sq*%VF78)m=+i35hWDZ4-&?RCk+Jq+?\uGh&kOCQs#*ZI*^/GeX]M&"h=ii5HlI$g7l@J9Ph24UR3A,54lXoU,IjfX,=>&-\lmaYaI+P%HlT2n[8ba9Q)-8<aDY>rWh[0Jl_"S8k)(b#_1p%6oS51.f+s9Y?#2D#l?uFr;j;k]#YJ5gi[=%o?2KQ*nFRepR3[5g.o',h=-iMC%H(@'hJ=(S=hcCi%jc%VT/J/-%s6Sk4<.u;-AXRpOQ(8)qjG*.#c@@/KZjll_[<q0fD[(tXLD/tLW([OM6Y/::BT[,E4"nY;fM;^G%mPG6/H#R"38%]%,80$k8,=N"^)O+kO*[I?B$pfN/7;==b:Cndh._?Dg8^4.b)tM_0nZMTdq)')U-o"EQ1p/#cr;1@o;-s=cfF:+\%'I3O>&bq;'rCs=-Fp?2HD!Ft?Gd]=7+q(-aMe`!JJ,OF/p7YhXl2=CJaiD6iab]gJ1;@g*=)ir[;#1=]2OfrPe:AK<abMAb-,$2D%ks0]]ejt`V^)Qel6BE;9)Hk?f,P1Eq]!%7K7Bf=knR&[p2S3e*b]Q6(gaT>loh!L-6KO5g9C2P*os/q!aQpNZoU%"&Ck[6-PATO<%s4=]Q?d%P;);%+mJ#ernmlQ=<n#a]!aBDkc$Si\PI6)M+Y#@ZhdS8As"&D38kOiUL'Mh^p@"V!k_hij>2=q%Rh:kj1qYk&Q]62s.%%I;V0IOdm&_>-i+>OJ0%NLaO%;A#0K!pl^2-\LV*XgeNXA=+SYG$c'U]^<1Gk`.W=+LpXeN7i]_MQaQTeW>^T4g/%m^OGJ@,Ot#&%LhH&P%<Tj&5W0&76b@XUk?+&3$Nr><8(?[(=.Kr@?U(qaGLpckU!cQfO.h(O[Y*t8!Ib!R^"U&8qgeILNuts-/P=*_p<`?6rVe*9%nEVH6@<2<IKL8mEL\0dI0G0QNma]H)[ZhTRaL/d[A3T21WfreYK]EW[fjD[T(D)u:eFZWM[_&@$Dg@n2CL[5dNJQ#$//-!F#r,Tp%ETp^RA7HQKj2<.6oLS9[9rC8p&hLQpBjf-)+-LKggNe05Ws!&cl&/R)LoI=H<7PG(Mg6Wag+.>kAg\Rl0n$W#N@q"BnAq5hPYk['%$[82B@eWk+SH_^Y:"Lhj9*bnSHgm-DBpKu:7C':5,.Wqc@e/llphGScQ;9Q6CBD)!^6q;Z";Uerbr>NG))l$[(9#=?jGE)boMhN2%C<,^(ko@RA<VNH5l1BYqesa$`J*D/sfi)9e4uf+aI4->uk:Zg8U8mdGFWeO\Q)(/3"-rS+OdXhiF_TprNL0rqrLSZ;:eFd-Da6uO%]3]%Y2>@()MOI/E9IPr2&a5*."OEk/W?<n)G(`-A"G$C-7,/@%q"_6SQEL0n?$)uFq!8M=;HFPR5acb1N8GbXN6eA@Ep0mF6RC4f%G0hL6:b,X;M?B"7%NZb]&ibHqgYW?,Yg<Qf]t3Pd+d*eQpC.D;Ar#-Ll\]3pr.L<F,H@3;AdMC/.rrg'BMC;P<`r'`:UR*.L[Iso%^h=@F6.,1-%JR,Ys$fG&AB5ggjG8m+p`5U;HJ6-[V%lS:MFq6R`TsaIWg%2'A"3i2-nX'1=GnFB`7:(o(5akXb4DVV[pmp/p?f1T%oM$IO]AkRi25uWeoq/sG[\A7Vp-7FT51r@gCc.h:8q1ICqIGG0=UMpKd9RP,7:Si>:`B=4%6j^/1/6kj<T,TU3^;l4?`FCS4DK*-%4TnTE][RBX($MrcJYGR'@0*B0:ob<i(3"qo7phP9hP=aV8/%:\fosqm#t?C%"rQ5nX`/e/E>j/;nuq&Rq;c&B=_[D"LGO^Qo7p+T%>tH-"BjuJ(0E>-)UdB)6+D/*@4p?<!PJN<*oD'YWSP#O!\<$7Pj5g/Td/9<JouRbm)612(C$%.0S`VTsp_BYo(i?.rqFJ<s8RHr5%nB].obP:mDP^Vo6DfWqu;Nc06esQ(3:X*_g$</*pJX$Yq+LGN]&ZHqCeg2J)0\;Cf"4r0eMKM7R/X+eT]Uok3mfCYc&CO##[F@dF%/]Zi%TSKO&.k'g:H&CP3QMrBskh'.]6;2"_("?h]TZSu<&-CT@,/dK9eJJ[H5".?o,YDA,(+ZBj:<;;,&g,G]$6o>e.P>eR+:+X>%WIl.2$L4hS_SB!>Jr!C@&/q#`6WAgB!&<A4&!a&anZnrE\+38#cX_GN,u_bQL,PWJQZb(llWpaB,h%T6+N^%WC=?H29:gPS+"T+)%cT38e6O:sRG%b*482^gZ)UUNrKM$@9)HSTPmmj7i+Y`/O2Zf33!nE)W=BVF'6NjP'7PnCE#;^Nab3=0-R2%S+Uh\neMdPsK7J"<N%3^qhpMbeD+Bl$`s6q`p?Uc@jS?W*#DZ.5Oi6j,",b(XP8*N5L&770^DI\:Fk)tq34*+5fZ]'i/!eS;2+JD/LlFELmE>'o%.1qL<\%Zj=dg"[=\W9&;$a(?72"k"8$^ZGc\1%AJMdVOho$J0f;WVPnEm2E;f%9R:,4$N.2%e=eepW']+s\Jk7!<bE%gV)!p#*UWh'*"G2R%oJ'/cNcA:"Ydai3XDEuI=G\K8/<cQbOt-P*3l57)lBM?B<NMHl9!N*(lQf$8lKjrB`'eEZ/h$5%P7E'?rpWp`WI.Wp2`l7Oai?>L%*iK[ufiHZb,BfPcaWZn;ho#pbJ0H3X0q:i%-MckE+bYa$JS-[R4bkM@/EnA1^SjrK=)c5nKR+BKk*Hnt@V;'2N`Ea/EO6O<HBN<j%Dr;VH:/6;'i4KQD66,GT6nO`ur]resgV4\UG9#Ts"_fWJm(\Su6Ol7nD"#t92K4F"G%bQiI"J0^n%Z<NhhQ4JA#I<5'1^2_e$MBG%%^WJD</NXZ?T9s,f-3g$+B=dVR"LoT^nX1bR\C?1c->!`.INp-Eq:dB+<j&V9Sj^]B(0q""\.9nQ?2h%;k)O8'Q-5aaWeAsp!b,I%*6Mo9/5YD/bbi[gm'0gd&KLa4.Yn'cO627VQYF1icumWB\>)qb36YnXNo3PukRXepn:_OS[aoopPoi'nC(u+]LFTIAb?!m=OI[a8%,`AiGC2?hEmi$B9!EI'"V;.o')M9MY4=46TaAh="%7ns<*&`E.F<!nP"/::h:aU-.%W=s:WT,hO0IdXnUfI$khR]\#:oj'G^+0aQ%*'YiS%q1(QVL5Z-Ee]fOo:@M94;b^"[M)QkJuo^@3KNHA_fCDB8ohV];p60K6[)aak`[+%4bd1:7EH=HP=*C.!,k%56\/g5a%fWa%'9&!i4N^]Sdt;c'W#B]?3$sYnV1Il/>&6diJH@C#IU8$`,(l\p,E1_r?]4?b\`&!(ZFtj7h!+?m8SVhL1W@r)Qk9CkZ[$<uD\&1s%Q\1Eu,)i0r[(1@V;M)B<*n25F&*521!>8lH,SQ_Q\P8-^-KT.'39FuD&)HeD7mZF?j@I9HBaF//`RYJ0OEdm\&2aW3p_nG]`LDgM%Gurnm1:lPh@37"L?N,)YaVu0WSYd_6Ug?cJc^@(4<\6h(HLUL$\5d3JS%t+Z,#JsE:At=NgI*g-WEG1"Q90jcVhbjEV\)!]&<6$6%6JSgHOY;7BU6YbL]K^CY!KnVPl\7&+#ps;'s+I6kg")53NK1KWF=.iuC:^u^Krk;6`UK6Y;:A$gZ&1Hgl''A?P4T@_B'cGCK?gJH%'T`5mcHHB:)%&U^%a":\Unmi)n(uj]4;s)0E+L-?TckMm'O`Cg.TAV)B]-.Ijch'#(D`s38o`KTomMWUr^*uAqkZ]-EGiQ6XC>84%pTIoqmQD#O^b*TbP!]R..',%1bgrF*$L%qr6na`^:,A0('gJ,86\_4%e$-H(R0o#I+T\ofbYM'l?\oMgj<?$@K#0C"(eF3rb.B6G%3S]$T%)M26O<T*4WWalcG5RD;phtXD)d^!3\ZJ[7<4N6$%"4.>k>$CA=l4_m5^$j=\*Us''nE9pd9>O4AZh<fOLG9&X1d;MZ:6D+%o!g:epBngKm$6P4ZUU:-8kXj7in9qr!dG^k]('GG^gJm7Z<1YF:+2oWC\j`M(T(WPG2H,5M#5F6TUt[F+3#O/BI#MTK3rG5R[`&%%:"-`jUfeh(&0NFmKY0+V'@?Df0>79npZ6-")$H<g2O8Q<>-nA7,j3,[iXV%i%0"O6]bj)^)1c$Z,))pn8c=;fa9[)$1]VK1Z]bjT%EsSNqAO6N=Y!u\&A(!bm-3-$22luUIY(bK@UF?HUaFYqT-tV<#-'N6C6e=mQPtupkPRnkdJ6:1F\%7><0Yq&#fej+'"2kK7SXrUO%oWpq!`HRoFG(>T5?5iR7?iJ8'pc#sR',;D-k01`P<\P-hdR"6/'Blo4.[i`:Rj&2XK]HJNN!LGhKqdWqaMHL;niBRPe*?VBB"/r0%!]V?UK>b31K+(f&=UZb^JJ]XJWl:>/5mplCiD)#)Td@m>aO>L%)8Ht(hD6oDT]7:-<Qb`Q/nl\YcVBp5"RR%F_)]Y[R5>?s<mn25%BeKo5J_s")@N?[J]+J7YikC'Y#atEtLB?e^+;#?MEm0qP5hZQ1CDMF$Kl88J<rkih[2:rP.h%ncm-(DK0aQSp*kr"\6<:Fs3$8fc%?3\>Xi.tk;pDa:!b^T1;l4%GuR1;JhAf:MY7rT&$59+0&$H)FL1"BB3Ia;MArbic2nhO^n<#E.I,?R.*qGoW8!b,SD6.Jf0/c,">%;<7K/r;4eViP5D8VV`VQmD:S[8*1d1p-rjHRl!As7nA$6_k,54BC6no^uqo+ZIS!/7(tfkNn>;U>CTnek#:-Im/[_G?K;.PKce(,%chc!45B7tObsM>PVXAUsdfIUbZ9U`3g&]%8![J:9+dFDtR$<!.(`,h.UE!1t,c&Zb%%>>L_a$!?VsMRBIYTVh1L$%a_@X)7>C[j<%$RkGlP!F\t/ATY(#RHV(abFcCQ::JehTPTU)o'1D>C734o1bn?IrV%:]^!3p)X4(QIq7H9fm0Hu%KaBY<70D'ZIqYu?qH-sGYq7U%PbC@\3@BT/?@F_Q5h1,*;4e'H#36A$:o$-!2CT2Q?3*'3,QR&X@XrFe!,>^2nRG*$-.EI'OZG-:Y9sA`?`u;hMiO7)Z:Ltm#TGAj%<1IQcJ'Kn[:d)3\`A-W),c34WTgrntd"s]9*On(idS'6cn2N@cH(ME*R?ti[6D@GF(?0.0IB?Ch[#%=EZpg'?7hqih/YPk88>b*S%Z8s&m*`:p&kM&*eWh`lNO-QY>@_lQ)dLTgG'r4V-d[go(9GP]rBJ/Ec"je[CIu:F0jGr?Rb@F([0g\`fX;I$0$<?*2DW3H(AfNBN%Y9GVYjH`s_P>"SPaPrf8>a/3X'_/LL$*(oXAT*u`8,Y549&M*uJM<75,n&2&FFX8uA<I0in47SlTUq#J;fFq#js=XY+P>\,P^89m%P:A71"]ot[nU#eV5MSsY-0.V,o@%es=3)"HO!5,Oo,uGq'3[9C&(ZD%1Pq;*:kr5]-?IL5R]ra4rOsMd4rFHMFH6Z\=ePT+N)5NR%nW9o&/f\.>mu^0FBM(O\>/NBmA)&4$5^Ll#j+b^XJ8BplV-e<p=ah9X"7`@+5g0LmK$)1D(?nT76rNP,@PXb\G4Mt0=:>!GI$q",%XpipE,lLni&]H`Ng]7qS/&46qB-j5V:i87;\E!c]Xuk;L)jJS7fWdeZ6)1_6?!YO5P7dmGjXAI-&2["*S218[XA%jT71qF3:`4(H%`Y3MD/Xje@fiK\5#T,p.dK@l'OOUB-TmD^\r,lUh?us2'8T0L!lt4ML_JVS(ojP]K0tf,',`NF76M9U=rrQ>ek5d>6SIiaD#c2V]%U2^/]=1rO41HPulP8'4tR;bp?5,]AB9orcqM/OY!8Ip=o_OQ,j7jWhMnIqYRVmoSC331\AW\b$<RiWY:[Nm"Ii7Co4Q8?H\0\It?%ItlYB-01u),kLPDe)@<F'(Y!:7?C,dpECWp)GeFlfbY3X/UpJA,Xt7tr8+EYi.>]P1Q</)#>4;Lp':_.1k+^u2'n(WBH9Ki5ZYC_%+:mB1Y?jl5Xq)Zjp!&$.f>5[_6W-PW8Q&Ku!@U#Sc5.u5TnWX$%I$p4"<Q/hk;\teQLG21J%&`YT3?q[I6Lh&q\E@g8eqBqKpfe=%ecbb;FWuP0MR"KT),%9ZfM!Y?@J@$HD^Kub[mJ=B7EZqEblfW=eX"TVeBUa%D^K3_N^kl+CAjusi74o!I^r4Ik.@#]Q.KW:__YTc%PS>Fo6?5!u6UGmYh5s*0&i!XdPo(V'NjMuH*]@o&>:U:2]lC^mTs;'>*HAHg[oSZ9DXN.6%Q;W2p%=!\9.SCOkB*$W3dF_,.fl+'%fgs=DVKZMZ-H>WoHf&&,2P3@G<W[t(QhWj_jp'Ecd;qT:>"ta#".+o2p\kmQ=I%L][S_&^EXn(umMkUom"Q%irWK1$-=J5UYF6cK%M[T,(46mj7gAYDN008iZ"$%-@-Tsc7YXD4$l7Um8:_T3fbgjBV^8-QAQJ(!<iPjX!#S;(,KOill,u0Y6#K-_!l'O,B#;_%$Zm.fm%3P.-(j.2<)l$]dm6e-3aT.r4/Tu3%'C[aDADd)K(rQ`pKd8#4Yc<89(SN1Y:!pI3;hsQsK8L.Wjbs[g@feM):IB[$95"*lY"a"F>%VoXG)ob9'Z:u`$Q&;!G89:SLOn,PARGBX?d5X7n1-^;`Z!3->?k4u=b#r#$9UT>neW/=MUp][H^',l/nVJi)S-\`Prs#)%q;&X&o%G5%=I;CogO%`cV`^lCeG:o_`pF458^4"]-\TV\FWh9'o#"UjuDeeqUg-2:`fN_(N_eZVWej"X4Q0c+L?S.6N!a):e0_a1ElHRWm0%JF`AS%;\[p>NnE*9tL>"9tn0;*(njQ2^Dm6;oRsT=$SBjD2dUg2"%#*,<TqM:?42fm5WjXe@&\TN#/K.4&X,BVL<r%LGiODX)aR"%6b8/E*?C4W,?rq(^(L"91"OJS:rX/lBXdO7K/X_P]_f0qEa&0,)L<7r!PT0<[LciCc>sF#_1KgCFE+5A&2rm8+=n(cc\@+5->:(a%=Z2&+"TeTg`sm`VH;Pip^!YeO)F&Z:)Q%:Gf:'S_kDA,fQj`u=kNdWmj`ka[Hq"_f5=*!r$te%qiV+kL#I%3VQbDlCkb"spP66j=%hLBjqNFRZs]!X%+(oG%WF+Z-iJ@jf`pY6>7HcP!]':8P-(.PA7BG@>fEa`ciLpY".16Oq/K0I)i,)]jc9]BMr0#GCGS+8Z8T0la[%1B&FIrQZ&W[;ZrU7YT*k1-i^N&gn'8?F/)a9R'[50R."\oc?HS,'-*OQj"]!$jR-4_O!>N?44bs41[@'T,Rhg^Y9kDG*9qs?;tpk%Z-:hC=(sf)dC\dU8[4JreGZeNb3=jBPMDCMYU8D_f\4pK6SZj";If'/a7i3bU6nD+>ZdKk1UQ-8mtHRdVVUsZ\OHoa^Xnu+Gm=)T%6RLa7LW0"._g?ba<8$@.`hu['1<2(9:Ek2oYAu&JKq?ffgEOrVhhA9R+D'W<*s[:ql%H<k(Dca*StC^'aO1CP>5dLY3f*IP<Bm-T%UM+cUR_=4H,deKZ_bX0l5=niR1nj`/`933Gd3#Zm^F>(E/(=/-_]*h2ehH0:8.tuba?`ocEC,idLuTpIX.g0DFd3V3#R@m\3ljQd%bm7h,,bMFVUaEu:p.J:kQ\l"TkTVACrhZh%3S'V6i"gF[*fSK^N,Qca*--ZH=uS!l&AJC>-3bYPiK/Sm><)gXE=NPF$WJQarRqJ3%:Yig2\b0Iu"$V+pGFqVifp&n/%oQ6\^IW$g=Ws/;;iq]g+c50;m-%s;=&0LN0m@Dg$3Nn.lV<ahBA<Y*99^q5?J@c[*Y]3VGll)<%-GFqRQ/>I>U5(E9BK^!H<e[gN;hgfCB'qC2'JWl=ZWoGS@a'#u"nfAVN*Wj1OL/Jo@S6B;O`X2D'/39Y_SZd767jLgc3U^O):ZRL%8Wj_0=*,,YrT"XeAaKa]_806:oPRRf$0<EgiqcC5Xme"QE.[TcaQ\araW`5N)G5l^^]T&H_4Xj?<UaOm0EhAjW6?=,:9Hg0nhPS_%a=\n&%^4>1kePMVIq!Y5<^7q-Dp7!Xk"c[5<fU3Mc3YmF)g"lF%6RWfMX4+B+"iJ>,YifZ*]d8f*ZoSq66OR!VdbQ17iijjEqgJ8%q$MRU9s,<A]fUI`hq?MB@=X6[H1^1k(X!RT2U$lpH6kTWFDN_U(LZc3Ot*8EaO]F]/T-$_7l7sa#S4IO5J@H]Y@m#d2,1dY0/?nf%9e<]8"p]Sd*BAZ%qbbk]U1>[[JeUc"9c4Z?LtX5u#ikF5Fld)O<6q7H"2"*@X76'iWg@^sb'ghi%8U&46N]*em#@Z[4OAEW.IC5I%#0W%dR"S6:<..VV3N6q%-;N+caf&F9q.jKCZ6i0/gW)8KX`eCH&[u3](VloLee7RpJRlMD$/j_j]C!tBPB;FJ4htZXs&ql84SnPc%SYUesZ1V`6W3j*+]ATl0d/DH'>]7*#mJ_j$hthcsU/n34_(SoRn#Z!=]WOS\IPT2pMhiLg+D4/LQQ"RSRA,*tA6<p8Q6s@pNiXa-%r+=>",!.-;+kMbNhOhI(Dcq?/<q4)D5.k;>RomjgfFtXt!sHdTn)#Fi@-EfHF\>^PqTdLHH3a=ieOs]lD&Z<G,F-Wt)NGQ?=r:jF%n-]bH]?]md?m@XDKd--SBCOrS^+O:\R,]Qr]sa1'YY8BhT/g.3]^Wn=6s['HLlRcs=85#bNKu'4\.pkMX1UHIBMi.H$9Ur\7h-WB%[uYIEpVS9"Ti]70::ssD3\MIWf-g+m94Yl#)hJQ:.qoQ$.k!qOTqsJeK8>^cIY]G&cmqIZ"&dJlQ`>i+j*9:3Q6V^NlTMHU.6jqr%hfCsQj%&UnOGTWXDlEFHPso2s%[5=5;cM&%cd`kQ`iRO;\muRU1YiDDBHBNpZ?@r`jO@ZO#V[R^=:@fJ=sW0[ZLZ,Ln.j]bc3JLQ%Un.]pk<lQhd@!!Tp/C%@Esop"KhZuoSk`@!@td^/B/DkIM8StE1T3,HFiMIF0gge^_>]Ma_D`HM%;7a)Xg&;%D,VS0OIC[I7V$MY%*>]WtUkMC*/1mc1<:jKKiIkl:Bk4?bK3ujlAL(8'3-[W4(GGWYaS<sM/Zh)Edd9=p^*b<dfp-df.V`n6>(mP9cSCN"?WC?piVoYo%$-iGS=QRf<Ik.LImJ]XDc@5DTD:dUImpGt]RI\.h:c`/;GO<\o&,B/"%P!$WAc('0'ci28@ma#g455"jc350H[h]NNFJe!u=a>>j%Xm/gIgG8r;Ef&Z?^2Es!s4W7sr,*g!e5AD0g0<(BGW3_8DLd>m7nAS*6f2SR=dV;dao9C'4C"0Q+G;1Z,j\FU&';A6GWnWGM9;Vt%Jo^O7-\#uDr%Vbd,\WY@5tHHh5ecJ%XQ7j[+`@MDWH>>na:uJ*)pE4Eb3q\hMaihBJZ$>bCBhO[ATM/rjO'8X<64.i.0\MYUW]ua%KY6CJ"k=XimG:RjUu(;^FoXdDrED3llXXhfPYIHgFAiCmU/1HG#V(AO5Bf<m_2"_V7O55^m""'m7aU"3Jmb$DX1B0Xd9]-"BOo%'%,gZlpN$W;#/AHH51&n(Ip9sk'4Z2Rd^Ia?[7WHi[U'FjY@t9**-VB7?:)$LFWFSedMYbY+,9uUO<'oK6Y=B!a0OpCP#UfiRr.HHY%2gL"&j6*W9]0<[FJ"%L0$j^)bn&@oS$1Q3q676\oB"ts3Ne[eD\Wu^kkhtZ24]&aY]:rNnR_QXmFCG.%n9$RXpf+ggM,5OfY:%%k%7<Za'X'=5beHM,ggiAQElPl,`mLH2:m!&-RBmBr6Lbe2'NjaB9a(G0('qa[clgOi5s6st,pof2I:Z)3FTDmrEJ+q!UJ,16?k^U2C%gFDrt$a3P2[_ELrqn1XCItmQ>KELgF.37^J+gm9SC?SEe3m9[>>$^p73V=8a6;BOqmPF'HJ,4bl]orSlM;!IU_\]>oMET.5GEo6J%]e8q3Uk23VT02fX+gq$e]\t\G/#-FtNPLDT'u%)!#5C[D4;#XN==CW-I,,*s94hX3-3mAr3l\9q0qIT=^Ma6:Fi"1M/Ag]e`^c][%12;BMG!-/moGt4_X"U3a:8'm.mc0*.j:F4uSV]'pHWO#N.VarlP.^lS&9FY5%Er'cfEKb:^0^^D<QY2'0J5roO1F45C%]6Rf)3B[%DBU(,Fn-1$hd25X3jV5(%RZ-IZ9J^,1aG/p]bAjnhh]C>%#j2P]M+_nooSkJ+Os(5XSP9SDNEdG_!('98)=9nC-EGl/h!I2\-QCc%P1o\K4p3<em4_)_NUl%#$r_CZR?AkI>^SYoo\Xq0;a:rQeTPag-2?;5oV!l:9\95HSHlhEApqI`@p%obTUb9T"=3+5V2&J:!E'+O%<JqNs6]a*O2iu9'k)%PMc(Rh>1nYhj6)u&g1P!b'2E"[lB@&TR\U[bLFE;M-R[-'$%Pcqo>,p)Gm;C*n[.':^<7PjN7>$[sW.eW$%_0)cHI"mAt+le:)2`4c-K_I:Rgda`F2!>I@HmfYllM9e]MBSD]G5tSS3SXCkTrch;r<IiE)YML-*>oG7aK5C,Tc&.M+%R2(VL8$n%o(:c:8(PfXkWb4ddS'VVLL/J1GQ/g-3dTWZYEIb-p\oda\^'j6^ZnY=epeFb=n@#TW0[_e0A$EBhHWHQ]hV#I_[H-W]cl)iXhi-J%=A?P[n*6XZ>l\j^]j#DtphJo/?SjUjlpQ?9&M.edAaD@_?Q3_Jh9&-soGe&$U7(c'_N$`#@u;:5pTaJ[b<7]5."*>m@cc!Fm\X@Y%mI],&5BJ*d;;@akLUG;nj*2s:FMqspn(+eRpYB!on%Rg+3ZidZ(>HOkf!;s_*>H=(pKr?([Hi4CXD?MDqee!HGMdBPD0,0X[Fjnq%2oEhMpDmu0F722$A+@5.BW"@9rYOtmq(_&^c<LlpU^qVN(sUYX_&;MnV%IO[)9V;sI-oOng]mW*V("ob%E+2.^<6<V2R0n$1+ilh%dIOI`:,%AV+jl;@%$B5bL^gS/%c6I$9dIZ=mu<2p\Nc0)dp@5:C^NQ3W>\:.JL+hn2"rNVqu,$(9i_5-<_@?@>_bU"%5ESBBTULH%7ldE[E9dh.Xg!qjEL/F2`"G,kr>/g(+P\toIW!a@jcI6#NRLjs%S!6c59qs#bCKYS4fl(kP%rh:F[=gd`*tBQ)C=0i?)O)CN9,Ko%+Yd.3q@QP"a`ip4X]q(baYq"u&Wg@pdB*jCJkgmT5'!@ZIMFER;>a).>6S!a`oI4pdf\QAe,-b*h?`\.,7s,JJ0kD*^.RAB`&DfF%-kN[c33bs5n9(i0#Y=b-&3rRI"X9-TP%F62gr[uU"=Z)8M"tJ4=9/=,NIu,H-TD_-d''F2L7AU(dP1m8YV/8Ph&)7>6_Bf.Dab[?%E4)n3]BjK7pE?qK1ao'1hq=p`L,cb6]JTme^mi0=S3sb(dWdC4]B4NI1\mH47lXE[$O(KmoHcSe:l%gP(sRNm"PSF=JJu3NK2_0R%egJ/0M.0n^*CVM35hC%B1m=p*ZpAXtW&i*3G"KI?f5gR7_lP.J'P*9.TSZMS")eSI2\R@WN!0PsAr\.`HBCRVkQ^.%6$+QbiT5Zu%cEEKZUsHoc6%j;E),;6U"1@NX-N0`c\Ltetb?Q[X;$.1@h5;Y=*a4G50%)9FV23&5h*7U9#3'*FB`0:k5+"K"i<p1RCYn/:"^Y-4%C*9L<$:Ir$A/+AT0KjTKeAKp*j9ZL"34o?&DVPn7^92B[@"f',-QMK!Zo=<%rGAHc^\"44KDUMt]qY1/*jjX7+)tGBo`E-6pAE49%GcDcS%tH*5]e_BKN6<'%X>)j$Lt::'m3,CNjg_gH%U.%$rY7`p?loWL>E?Y#HX@#]'gEaG%h*K]fX(I/)4/r1/k6kqU0RkY)aJ9:%;Qcf\9%+&ACW:mn5^O,OD'!QWd=#dZ8^M&FPRZ(=^=q^s>fY4Z&4G3;:U]oa2m3A)-9,2]6^2)0It3CB3$?h9l:,?2*M?o\f$;80%H6[h&i1+1m&itkVc]gHrfYTK!+fm-:<SkQnJ-;QpG^kLPM@V!hJ6U$(((*?RT!;>$NW\0?Rr>c8"X1>=[^P%b"X.q`\bPPcp&mdP%eJ%3t)#j^V'&p)l:EC(t,RCN;qIn+?iqldE[;/47<71I2NOV+_Vm-7?)VaHcNkB8[D]h%u#PZDM-,ToF`^B;Tcg/`!oG8p`no?7X%F6RPV%f1t'lN@?^3$@?tn]fEn\s&OB!c]ba>b50Q^@QnD$^&HP7D9k,(O?a.dt:Z#":[3o8nrrYnH/:Ua[c/![KrC(pe8D%boqL*%Ls\jj<a$#aA.`8;3_r&9T5u;02/\]I&lro$8:Ntj>502KFrafb<37FM%gK]H44\M&?r'W]!RQD5)kceY/W,W[F7'5Gj*e_c8E7^?%Lkf5n;tZ_Yn(QS=+MU)MaH\de?,QOpaKduPWI>PtgAIqoKHX;S=\(5.cPO[!=noG2_!d!['2/5oOA=LWCY#qe@9r@,fqbh@rW'"A%M$(>J*^f<W"]<1,:mG2e^u8@X8oSMqQPKi^*!&W#E^@36ac>+eaBG=m'G)$>/4IcJ-BKZIRkP@no4oWD#+uWGAO=V*80@r66lVep%Q\?bOPHf]:Bq/ShjZU+?i&V.;!1M_.5;^JJK%#$KbdS^j[1Nk$Sa6Y[^=]nI&-5iVbjM98FRh$OhmWWd4-(G8-YGU63ZQe:+n'H(%WZ=+6;ddLt^]I:n=Hr8HW::JHMZs3<d+%Ti06;ac_!I6dK7AR"DMt'c)h9]WmoYiG(=K=.;.(Jrq?nG-NcKOQ$$:rc6A2rC^@!s?%+HV_+UhtPHX@b9e`8-qUIU6%.oMl1uqp_A@.\X!Y!Cfdif5ZDigXaBY)_p)Up'oHSPT>*XL+Om8(]M^YEj<A2KWKnmPGuZk)RCFb%@<2OHm&kcO_dR9/rj\!Qh=8'9L]^O/D!ejE'nK9Z#*AE\&NW14r2A9%+hPtO?';gA89g:j_`6ZBK9:YC/sO&6kFX7+N!r\GV=k;C%o>of_4AJ]@;Eh"rG"LDuWg8K0ih:1Z,,[ms'I7=\8XG:8>E@E`X6VLR4hrN0e,ogY3o5,e1NEp1AY%*W.<6!J%`o%[>)E%f['jsf%6]=gm*T<-3e[@[bM&,i1kuOS^7&]A2>kNJ21YOX$G8;jQDKujA;\Xi1UdJ!M5cJsO)A='4X,%rFd%4L-@H2.q=P*BU<Ro9<K$7$M%YI1ZJor*0KXfX/SWacdXU?_*8PhlE(3iVteM3KMUofQ`7qS^0u3p-\o\A-%bqlS3QW/%LY6^$O;+odrms698MX>4*k/g_Ln8H5;:%A%_l(F;bgM%1I,Al`h^S(0=QcGYG&n4Rb-R'PKg`Y1@@bKYg`E^'^.Ti^Q4)6/^m`)uC$c8Y&6t/L-lh[X$^]$c?[6F]m+3$qcJB%p.UO2mF>7=i9EB5K$9a-R:J%P"42FmNW^n23T=nZ_laMR9V:"pNE4j)G[2^.omFc]#-B4EW6#EeC,tF7a<_0hd:D(0mCS6+H#0*<%IBugY+=gk`5oMl_,8AgDKA-c2IhUCGQPpGjEmH`](qB]iIF[C,\kNl*)FaJG0:+,qLf!'W4_)/*<."5`AMTRecK9i1<%bd/7S1tU%\!H7Z3*#uH@.f\I=IikV`=A0dH(&2=$S2&7]$ha)b%#`"BepNiZ>S]JMtGH1^KD`s2Q,`]2O4khO6c"iGVj:?ImOTiS+5uZQg>@c%V<\+]*J@iN9s.;p8.V34b#cOL;\$JonkjKuC<Z=Z`sAq8+S2*]WC[NRG.05L;Z+flD[nf[X-HQ=G*$_fQhg3-#7)Dc3k;S'L.qBm%kh#fIRW!BHB\7E&]fWRchI"&3$3,\LoQO*4#q0fVTdSoIF\()S[I%&+aJ'5n5+n4%\5@!V!)(b<S5PIOFD.(pD[mZkM98;%Cs[=j%$1Dl*)gJb,Mocc"A;De+=KH=kdRq$]*rur]H!p.d>kcPmJ&2Ad;#_9':IFX<@H0/2]"N+Sf`=.D6f<cWA;qtTQ!"V(&3^\nd=>d&%_CL1J!^bqO;i)t>I_V&_+#ifLFesdNY14=rG^aO<P6^:<"_=#k640lX9pbKT7=MnPOpUtFq1H3@@fh2hf&\?eZO6)('cQ!-=6QcX%G,H*^UdTJ*^:>ZF>S'FMJAqkN/nOt;28j8&n$+][6J9Eoh]S!>l-eTNKNjr,EVJcq^:V<.TJh?UkB1D:I`S)'j0sF?SAW$(^&k$^%7pLgC%m]e=I_/;<1giKK"%*dtRZrWYVYs5^a;F?\XJ/4AojpYIg>mPl'_b9]mqk"hWk33<L/P>JCi.uq.6)T3\*G$4=Ijk9cE0eF%.j^c?YCb-A#''?8!oe)0kR&`"JBb`i$VaG5(j8r75Im5)?e61TH!D)H'nF!.d:k]UC23B>'&l]C,+uYmJabK/;:kl\/a^mOI1`iR%CK8j'%K\'n.L<<1)Ba>ffGmgJdKh-KJi0b:f)qI^db.\RUrk#;lcrH+#7J-R7sQRENu00"gPD!^MW*[LBtQ,)Y^@hQ2k10'E[AE&%K1>&B\&+J_BmB>h.!PJUcE`b!+j"rRoQ9j?L%-_8)_-LQ&8n=a4s/BRTsq["@L'R$b!H+*Fbe`jK'6i-O)TaQ3b1k>.m5`-;QPXV%J\\90[bK5k9Fr8+D[<e6MXEYoW\SBTL-skG]X[6p3"S*UG-AE;kbjVVXggptiC8,<32QB%7f6BpJ&<#e-%.gXaq>S1O!bA5XR;@'%q-G*RjX\!hO($'n[AUQN;Wa)QE_ZT`drn#\kTbU?`G4QkIh!Pac`>MT^0$0iL-,t-36-<!fuCg^>WKU(%Us"P?'4Y:p7PNW8I+kD%Dde9Xa70H#9?2>[%><\^kJs'NW5lH_9Zq4Da4sl!C[$uZG%ZkI1F]]:rEbaF:!Y*d!in^q+',aN?!G+S&`%-Sg3/`Di9R.g./HO^%J2>d(8[TJ6#XUJ/OF9KOlG#G)B"7]g"[\nV58FiRWilt+fgkpl<Kd/%UY?TOVXLn&\.5eTL]Ncr=h1&N'Lt@<ftQ[DP]IDs_!MDQ%=.S$*`sN62jq;u*#NL?AlS0i1^FjWk#S$3#a>uIj6;@2^=<XYZ:X6'5G5E<*.5e5_J)Z+u_Ke>JK2'*uAZ-5PW4KV^FqoO!Q1Dht%acbAU]aXOCCm/XUD4H\:TBGopDnB;cT%g"icM_o&6l4hB.lqbiH[/j$D99\U$q_]DC1mG_-aIX_TaM?ke-<,:k`?ame$H_Te:dFq%ilJtE69;T)Y1o(-aW!S*f`DIt#HD'[)^KdknN/!BCldWAUI?84MCHW_ZFqcOGhEBBFL+t*n.bU(8dFNnC6Uj+@sMNkd*-1/Cr`0_%0;mkOjk>sJ"$2gkik'kP)`s7t.%bYMHi<n@aOo_1!<?_#p:ZV#&lB8S'f4Ra;>oI;4aL?QWtjot)PG<>/7#8''^igW`7YLb^)hem%jtRpP!n",-.)O$bN+!17m]ZuKY`?R.2;\[WSB?f*Y<!1#6jSo(FR7ttj2dfd1L*;C^mn9[mq02ekFd?90SN<B^\5Y\8NV]GDNcFR%<%a_-GbM>#4B5DDL:#(ISfcSC]PsB\h-"h.W&(0:rqHN9YAfWf;djL>)OE0DG&KuW";=FLC%H?#m4/IG"<7b7fl:$,h=&]*(f'*<%eT@pZ]P:2K<DN!89j-cHH(<9S^XbDTT9,Uo+'g"-[snP?F:;g36S@8?@R3a\<9q2WM%P`IXoo)f1b%s'**@clh^PjCEPMtY`>V[_%.RFRf#c4)oK-+tg9pP'>/4a10b&44[m01Fu1sY;G2&K1oD9*!Tauf\]NY7*2_-<U7C?tHE*OppO)*A]Nd2'E^8_(dg($fREQ=6mB%Of0,?O[:oCM\*ISJjH<eM!H3%.HJZfE3P@!VS6I4r+FXli+\kiF9R;SJ51AWi',&mOH1,mJm1^_07ZdA*Y+]fbg![d]qEU?3?t'1%10??t*k(>G:(J]pC7m*J8kLl(*qfi7>H^9_j1=<i?.&d>5(#[s`H@fG&q'c5CXtpq^]Tf9\W(488tQ$dNaU!K5mJ"[4[`mB^Ok^M%j?I))gEE(-H@//36Np-he`%00NHd_:<8A$="QehP[0W[55c"pN*Yt_&UuNpT$-,P42aV%U*&S%f'O)`4C-,s$WGf15O]A]"LFNd/%:[#_f@mA9P0d-7%!A/B3mtD*>^$OYr_6H=u"?D^$bs)odb:Li(_]V)*<rcpf"i/=oc,f3g&osf5N-j;\(t!Dm5C-V6jH^EJ171ph%:<Mhj3uQfsVP]&uNE)*;$2uH7S0sP,9'HP"A8Ik62qSid+Om`7'Q+e93UIihL/]NdC3i_R"D;+kQeDaKI5u(4?[JAG%AmI2l+@\9%2HkFNkj$l<3s:U_*p_Au7!Pp\#k_oh&=5q27$a;H/DCb425)$K:7BT/\[8%/FaF)^LY-a]FVuWUDYI)d$h#!?X)]m4.7ss23YC#-%U;Mr5>TMZlY$F<%T"jM%=(Ago<__,KU5Kib/6:A<gCIp9I&DKIK;>MAQoC"s$a!lU0X.DSBeup@fb5caS+uZ]Q"WnTqPc*":+4&5%8F^<4dUL@`)V$Mj3aUaqXGMe$b2hI`BAUOab:\lSX3$0Fs6na/JmU]@9dN_Qs,=9BHl#pc5fX)n<dTSql_rnm,9CiDCke]2?R:uk%U_9O'\V%P)M"Sq_a-qIrOIX^8a>22G=-*6,)d1ee(4<.S$hiiV=L?7@$7WBX'IdbP2ELGUZD4olgX9=D0aDt.O:BSP`/2/Hjp*-f%>,)[GU?+-@',+.:U8Rfkm.ga7.U#:tHtD)!$(]%6n0g/3]o4G)"^0k95q;Yg&La:=AAQ@`e)QfMMsA!u2W?Gb@UM*\QtHQ#O7ASE%`)>;b/T1brWV4=Q-Wb5:@a-'(Q`)]7/-S8gp;[iBn/\1M_Vmc:!"5rh(Z#/a.Mo]f]R^CC64\hRl#k>qm`W(Yb/8k;6";o%ke<E"%hmja;J?J@p+l!Dl^P65"mYa#U-<r/I&h4_I.kgZ)J=7Jg2h_9TZuTrCl`d/g8P3>UNR4s(;25=1A4<j96'I@+Mlk+(+&meSI)6@k%ci^YQC.-).@]Qa,;tb%%Y?n^3i2)Q;nb0nG+sCF1?$>"?q_e/8j2XmucnQuB-DaL4_>VJ]Y;W=-9`mM[pUK@BK*@7t6'S3D?4&7]%nH.[J<aXQCm'\j)a#N*MKQ_cqf#^Z:I.grT6JhPYAhUGaoFMbU&iW'CigO2f9HeHcM&K@=i$5HIem]B4F\[#ZeC^rWgTH;mApt7Y%J97.'O:`d,G:?M!qh"a[-s/2?M"MZ"i0nIrHN^6<%\i*3.ZCPR>51-(0_]h(_ARMQDJMeH!'D!B6YeSTif#S*$('_"bT,t!oKk,%%#g2l&>F8U];Olsi\Xu<<QEON,b.T,G]ROlR.?RS[>T0.%#g)UgPDhn^!4J"2Z1Ef;BcM_h8bCt\HP6LSYEr5r-W[PI(Q`_d5a78=%Q\E(mg@!LDJt?K?X3;O!2U3<gZrSdHDLel+N2mT'"(4.,eVV8.8=JK`KaSPjp6+\e>B^:2/a46BRE?Kr2Y>rV26$fWg\%+?J`.$8%quODn_^cRY!f9BsQpn&h99u"N^uSlr.K%P$h+&(s:IBosbV3jLY#;kg>_&iL#h@D"-*(el#'?b!dYFN#):[9pL1EJ_D:Yt'&jdg@%&h0;;Om9D9.(tV_L(oiAB<7Y[Ih:')&*)V^qRN?n^KJ!D5F8eWZSJd-Rt=3_LI#8'l[Wq%cGVBfiPgk.W9qE)O#";P!ckgDN[nZi%HJg#gnFZc**!&T6+bV14gnD^\L2aAMRb##VLNB7I&mmpr,i?@mio-q,%fr[o^0&kAH/l;?(N3H3,[@"])&uD;(bk*^=&g4[OR!V>%aNS]mlB6,JT\s"4B65_>?WZqKT\dQS9OAm7C8S';XDY.#SCT`0VB1To)#jlL"%jk+>[>GX!08q=lR*\p4kAtUh<!]aLgO5$->nP.%@g_rm/.+Z*%(7C/qLklYSk`S=Xo4274Ind+ea3l#$&ff'Won9Okt[$3f3oTE*LMu,Ur@(r8"9QWVu&B0#h^U-M&Ro;e,rl"mcktH%i[DqA&8FA-`K>3nOcU#elW13m#onQ(0=l')l!rCb7TJ]_q2k(--GQ`HX!^FOQr(q3?qG,Z,X%+UXn^HdbepouLkiOk(XYH02?!q'%Gf&i58:Eu!+]<FUDd>bAJA(S_O2Dl7"8(OURiVS;/9MIu((^T_Pj<\07N78oZ5.9K7#kOD#p)!u1Y6L'\GqU7-5\7];?8MmlE$mE%`EYTi[Ut@gX^V(D'R_4W7Bd!TEUk?c'_^`[eGq[\UMsu[%CDLIa]UG3/lsLWa>?>rXIY+q]*Al!(R/qOFBg>dg<3!JQ4EU2%^,@2%2E<Tjn80J!;LAO):7&(kI&G^B3?dAKCbV/i'\LZ$0rl;@0YQ_4$5XIj#tC'n4;^($39%LoF,,=):UIo/(,M%1ZT47eH>c-O-CH>7%5BT^OZaZt<,g-6KJE'<QgmV9Nah2"HD2b$$#q2=n9d[Sl2=i:+>O4_FddH2Vim>_4#efWPGA^jfcCg'\S?s,F/N:7%_YL:'\]cfZ%@>QaJK]O"<4,!L!jd]0`[k%lc,#\IfV88*HDNZ+XNl\FooTRXlDC*<uFJja#@BsL%9I+``dl@GO9dTFH<=NXJ9q4M"b]#AOd3OeZ%0cekR"%nE^H&+0cSL0-;E/7?IArUXJN:iB&:7+G4Do4]BoFK/'&Iq(T6*-Lj@B"E^Zcj<3`\JS-+Nm%4jXf('%kJbpc$X0jG?%&,%n?mXZ%eW/.%ItYtYWMq8L4([m&j3<2_cH3_c0(b=m0m!uLp5&s1;mpe^;tMApW]h][us-u.s<F-SBr?R"#qbq*e,uni/0r?pAG.7%#j2;QC-SHtj,b^Vjmk`1:"=R+3^#cMUE=cfmoBi@KD)3![7?*(;N\?n!=M._'85=!:QEb`BD@Z''i-f&cf1)($:10rF5"5u)Et(E%&\_EU+DE<3a(c,Rh[1IS1q/fU%OqH13k%mf!6rn5$56l;OI4E9UWQI.HU1gqqU/H$b9AW(P][>S=VjA!et'pAF@ueMC&*qn>@#8g%&6$%q_;NlGA:XnrUJ<J4WD"u=9ub_j5Ti_p5V%A#\nYg-`mU=0&bMnB(_?$o.#W@1#`&aC&<TrMUb>oO;0TA^ZP+a2_*(=Lh&tm3%L<>Kj*d1PT8M`SV(Y<mo[<l1+N:5gFqun"6`18=s5DeM-*oP:$_r&PEE$ft:/,6F@"9KMN\Ued5%L+j%IUs$k.s#UX4=9k*4DCM<%jW)mgQ*]kN!I8WDkD+1*Finl\874%'CPiD7JEZRLMjPC/@f`IPp,2jL^^414]aA^CVR_gQXpVXV!TbT"a(PdGn>Eo4e8eVA0gt(2%joCYU#k]<=-sM/4Z"[hu,*<4r0V/PK$%:iZQoC\B.aMGXY>Cc@;c4ob0X46K]miFb#`WF]WcCLO%B.pDVTaIDUsA1%`;=[P)?kd3%f:3I$7'uY]Hd=c+;o(60esU^fX6UXSijb3?aE,8ULm<9S$q]Pq#b$'R;t:5Aq$786)+T!p#G6!:T2b4Ub'._D7?t#-"AlQY<,@>?%7^Hr;6j1\WiXr9dHKqKQn>G9o"$%sI2hO/M6Nf=Zr00+$Fdfk1l&Lb_UJgRiBqAti"FZj;kZ%]#=V:@sH\XXdNetfJq*o>j\(X=a%2pCU+W$d*.**Ic2rhS061rosq)o4-uVA6NlkAlp.RHssZFGG;u^dDuW6LoK)`WS,M!6b34I=E`XJK\/O$Vm0;[Ma80*dE9lKq#<*%D84ui0A`BP'dg]_mGb,Ed&tO8CBXj:'BBqbAHnH&,#+WM[`l]0'qOoGjt[dUbsLoYQn>A7AF-RV1D#u?Hm=d3K,YUBegsaTMGo\*%HbK)#Q)\FQ:f79Je/6QWM[k[r)f&WPSAii5'HeN&+/S:/T$X/R6GD!#687Zk!D5P+a9]?aWFUBim=lI9f$DTN`mFr"qu)N7quMo^%7?h`b43On!V7p2)B$p"i#@u!FmI\`;+h[X?klM`4^"hPmDm4N-#%;*ZOX&o,[%;!ZE52Qj]8'ju_Wi;Ph4oXdKLRJXG_s)g;%T"$%M4?pod^ZjLpaF&p52#?^?TVB$/WQjl0tgKod:t"))+(>'ARS4KTp&CjC5[k,f3ZFs37!T)"-+N9Aod.k:T*(SN@9.YJP>V#\lBBQ%bWA(h46k+gE(SIt[s"OB65c*7cu*ZnVb%0p$o/A6;ts^%#6D;;;*a:WE.g#l`_2%VLYUb:PW/5?P+=D9DKHnVc^[Yd%IX>\N0qZ4%$(*b/2)@DV]07[Igt2EEnedJ:1<gQ-d#IH%Yc3L+In\%3/Z)KTa]"E:h:H2k_8@PEI;s-!9ML90n4a->54cSPQ%F+Jmo3CPC*[fI%+U5JkWIWmdZZeE<+6+"\XkR>&pYc/p0`fYX/TQ5KatYUsV?t]ao'&c<[kAsN"fI&:%K4bc[4&;,>FIf=c]RmWI%jD+rAmlK=c0%7%n_p$'.TS,h76kY*DotP\LLq\+TO(`U^1u\.A<;Ws_mAl91jqd(akAVu-%B-[GX-H*11ffm$7a#GbC?o[JFP.);kY`dgRL*]Y=j]X%*TPWI/P^sOS7;3LfCa(um#V_fqlO^TOk4_M3rX06d!Y(efdU1Y6lL`I8d[%*87Y[K<sXJKGS\dCTS^lp9&]J7Ei(`p-5@_Z\6P!^%q>00%8=^^/*g%Ls[KUjd:mS<j`KIcJcBYn^9e8eDg/R!^h5>3)lk!kg0aYTXO:ce#)sDnmJ'1?kXDEYcb"jf`0d3;[YFFm_l.Qn.%>qOlm?B0"</V;L41)3bOXu52YgfLI&?_)WjV]0ASbEoR>*0FE%gC@\s3DKuuN'>:CPNCo)2/-n*FSd[B(i0`!.?-qjr14r4_^>>P%XG4m3*/0o'?kh=Y56Lma5Uu_+V[#P*J@mGKYFpQY4I>/j4pTCEOD&'Aq;NeVQ`6!fZcc)fq<A77N'9Hk]iZt?;Z'>36:"D/b(kY-%T0Q0WhdS1g5"5McV\p14GVJsm3?6PD%^ckW!'ruB=gU]iYDN"27WWH`;X#/d:72J+pihQL#EQMh@#<=O-<_.p51-.'%&ldm!9@c.%S\4K.53EQS,9KaMeOq!\_Z5BX]rE29DQV%]PcG4^`>cX4jl:^u2^9fbVda;!iq;@R3%RmRbQ^X)g'>e=#Bn"!6_+W;+SfhL%N)te%7`90P6:HbR,?6(CGgTmN1RVLQA%Z&jlCa,,E(("3XCcD6q34eh<3_bfG'*HZWb7]&R,pU$[N#o\+BW>%Y/P*e(#>1<`[9$d$<F%m%9QJX`CTo=A&f/SE;b`L`Xgps`(BaV/a&WoN/pt'B:[6a<KO9ligrh9f&8jX3;oWr&s.nUtUI]A?K?:5BmNXDc$YLqIlGWg&!$dH!%%<6A.h'ahmObfA0S4oXo6_d%RHWNlRTZ(ZO1/Kd[>Gi_.A1D+&WJiONJidW35cf=cGa7PP1]F7\%nD;7"&dkXfkaq!LMdD6A]kum%6g<-09PWXgh@\3aMFVRLOVGY"HU:4R>&.Z&.b1"p`K>N1%^Y>n/^MS)/;X?T.(/#?DLM;kc;jRW-$G`g",FAk`(UQpH%W>AJ2dtO%aT$<Q?c"HX4IQeW)AD2/&',W]5nD3aDV;gs/V\?;KKQ*uE.;N./7?2KO`?LF.tpJY+aV?hRrG8r`pCGX!?]?;[")]aQ:^1,cU_(N%#"7XF23&f'OujH9@I4-Zi4BDS2\]>ak?aTE+M]49`c8fYk23ofY`WdY%]Q3'Wb$lUn4nMfHr45P(b;#,/qi;7B8pMfG@o+o)*VN+%\aU1pqESN-4*(soRWA>q<Fa.#T1VH,/.!//KtCW7)/Y,'36GGZC:;L<XO6hT\Z9%I*IFIQ,1kulgL!2a?-JbmXonDR0.g/UYiC\D%Ug*dNO657)"t1)rnu+(CD\$GLfm2cAYOL=</tbn#G=Y)3<5;P[*>To6KksSV;BEZV2qVZ!Wa=9@o*1a$Gj$SjgYs%oDS6gj4@4p\%")39nE8!OP_!C4-RTk&^>ZT/^85fF!W0fU9P]R\2aUX!k`&OOelZQE88k#]XMbj+U<o.G$6"EZg3B)<S"[jUE:_+I$9a`)gQT/aj%&EQ<o/h,S-crc.jkb#?pQf2*R#e(j-`ctjWk2o0AI8E2cm4i]X`jYs50S26O]SOEB2g)^-W"6A6k*.s)e,>FU%0aI'&?jJOUkB93%`#4(`<H2KbZ<J1'$5pPY.BGiWRa2+q2rMu&:#Dq0'9K=W*.#tD@"(*d_a8OH6"UI&oD_;!0lu"+/qHt>$]3#B$>'W_c15@n?)[qX%n`eb$Z87Ol/$$qV)4=*Ia(dD['.WX]Al+_oWs"-XYX24DE\)L;&98BHd/[Mhpbh.eM423#:ckj1OnI?^j%nFu73mi=b'uBQ6kGH+%CK4d#lZr'5huKH5lp&gP9CC/1j`W=V0oYREH2pig"Gge'9%dAA[ID.DkSCl`3ih[T0pJY9<RT,B#&pB"^L#N;EENt6J@@;2UW&u/%R_iJZ;'P>^o_p^Q)0]g8_&Ark6,V]t+hpSJc3pF1,?EM;O[$lR2Ba0'R>A(t4)JVci]ZTF3<5#5&.5tc-M*G)OGfHK12tF-JdTg:%I,Jf[<tS$XRWN>3aso:BMOMC>$R.rLLDEfr"!RLOm`X2ZE"TqF`traLVhmpkYY4&Z\MN'#=F-lPpkEHYqGr5\nu.%rG7#+%dEo+1%d1/:!TH"9:-,.PI/`_U?*aLfT+HP7ian<BndStgqVVUKR#@X'"oaoBU&NHboMH.[iAq4!V%Wu4HG-&M>U;fTiCK7ah&V3t6Sj%7O%<8S0[H/,eAa5PgdZQ_T(&-$_s?q"Y*i9R7=^fRef=Abb`<kUU_9XuCmPUic>DHPe_Hm^J;Q8PeiTOXJT)rd[7-$:\;C)n>r[XQeo%lU#t+1/qDWENq<1*VF]YD=FP<WH`1$E>#26Jpt5+XLpr@.uH/hdZ[9ui?q",%Vc1JnehncH.(*V4aj<GOT)e[#<6ha4[,;Hi?Bnp%E#h,'Cloq>c;-03+/&>a6]i!J*L1ZlbYCX@7J'^>H47DlkQX9oNMr7"YKqQ;UrS#/Gcj_TAe5\tJ0S&7ld_!1[Ss?h"/DLm&@W^*%4,9EKb[rot\hp*@!D3n%**Wd#^STU%3fDdcb;(*WYiW?TnFX#X#,%@&-]'isZb?O1S%%*]`<d??*PjFC/u?[QYBCT_U^b\9Rf`65%/rKn7:tY/bpk%8,ns'=<08`L0#S,ljHN*0t7.&JB/F'H&GDqA/5g%e+8WF!cS*=NcQa5&+DItcA;gboo1WqDh:/"G#+<S\mb`tN(%GhgHk'gaqJMul9<2VkG7J>ELWRWJWs[)Q248gu9Qm.M\@\ED<L#qVSf8m/-4c<MetqN(U'9PB#,[T.@H!0nFu\<si/.'FO`:0dmF%[-<[F$9;U8VJI_-O*-//Z^D<_e.mKl0d:`DOCantQ2sQ<B&9L;"ecG5(uDeRL&))(a'0R:!N?]:jK93&HNZ<L"V:q9f9NlJaINn'%"@*Hhgo2g(j?:f/F\ROoY:FalPbj=ZVll7^F:.iTV60elB8`Q"<\"D*;b*6H1b#AdUV+0"Fetagc*:bs`&rBjn6C@EpqaUbAX'_,%^uBifk"=<)P#g]P5g'JkW@J+4LorFS"d%DpOh(VX*]d&%5sb<,Jo4Ba.3M,9K7OQS[#d@lKj_=j*n*-"3*6ra.j]D_%c<*n^auu6%M(=6WPUIY9*DhnBE$qdg4F.=B&e\9QO@@Gea_e#EYFH>X6`9Y!=TN&F7V#9pEk;.V49/VE\A,<u\8s%"&3<-*_FZ6X6d+@Y.tmV\%'`a`-H1fO!3g&;K.tCn#F01EEqR/q)NeJ4%"_X&uLkQR3?Ie>NDm#eT)_!:f*)=%C<h>uL_#mko0%-L#Pt2RIPP5a7_md&c=a-XI%WaZO_]V4=8Q4aF$<X@6PM9e>.qpq%<!mmOV4(X-(fQ1*97`'8m$JI9VXZ]a#1pXg2Yu7>IEYR/6c3g9:RBj]4NZ*@'/3)]1[-[<V%r/ni0hU_<AchHakZGK2D]]%pU?p;15,A2_:4pM>C8LrP1Z]\A!;V@^ddL$et1P@oYZi\<KU[OunJGLt_X8lWk]<@@';F'6N,C/CP%'NPW(c$+?V9"D9.n!k,C_r2["XH]h6=e$MTiQC(_c3hB:L`%]C9V?LI$4mTTg_hUGAI)4*>;KamO?Yo=NeK@\U)]9NEr]2EHtBAZ%Ou3jY.mUbkh?b^bC>tIgL'Sn<#)u$8U8!KmK61lKldg4"^(4rbUTE8-=pW22@0L&QftZ@peY="VGlt!J07G4K!-DC7A?6JchL<&l%V>s9p\FW]-aD=AB]$P:!aN(/cp_B[U5LWW:Q\RoX8lsuC09O9\?.1RM5,?P$:,AXLEINWgZcnn#>6U\"e)/h.1ssSSd]f]b"R:XO%fda?C/]b?*<=16,Ph:<@DIPbUZYE1["Z4.#>4->FYLdY'fd_\EdCL,:*=$RX;A.QOX[4hu*[NIo7HLCq\s$--T"d`'BZ8jI*-e=)%YdY#6U\V[MN42B%VlDjF78;\Y)3HMd<0b>#?s60'WXAW(>"XpWZIs;]We-pR?\d>TPfFZB&p%%QnJHJ*a#OQ$#b<qVKd54^Ep'HA%n/pV+W9jBoPec&RK_g`Ya:,d;.qJE410&jl-[04'!/tTD;cNf</X\$(!u'8pX"CDP'nAK-n(09?j6Oif!S!hHJl>[ZSsao5;H:6p%3R$\d's*JF2&;a_!ltOn<iQM2;PV%'>cCi$7Il:7'e\UR-!.)R0Y:%(<s9.@DI4Vi"c.e.GHqR!)@)WS=bW?+kWG!/_@:8!nXQ[I%YkkYFC=`e'NH8*++QZ[@T[PUeqkq?J4F?QLH:3Q^M&YpS6qgY?^1]-_ZW6dkM]M)!'fJRB-SSbY)eHPn=HXTIHfps%_XVWI9H%KC%'^81W*X[>fW9%bYY#A9/>GR(/4'Q9#J+%1gcK1:6E'Kc$R6E530.mDXd_q_M+3(^/Y[UkFWZF>DF?"-@nGBGt2lK,]`uW)KA(\ZQ%DCpmOCm+p!FLL#nq9BeeF.hU/Beu-XbgV*uMtK$LpFr7dh:bWUc#'V+#_Wnb])rD#jZRk^=T[+WB5k'6lT2Wb[m%fo0a7\P>iEsB%6IUo,KKk`f>RqMK<h%Nt3.'GF"bO9HicNP'!i5e<MH1Yt"4lqPY_W>\nRf]'M?g%#[eM!N$&K6X:XOSc,f`2EF+RYR*8)+q&U](6%=W)1X'Fq1?*l&4&j/T8P8pqr\jq`l,*[[Pgb.Vfd.WoV6OU*]dR!(sCKF9&uUP7>,;bK_'/"41O#7FuW1>D6_XF'6!j'LT]R_K$&%$=(DiQ%6dI"[i[Mr<mG,l._7;[t_*2$.=?EMhDu*(k>7]4X%fj#q`WO>cY9cG/-DXBdp!@>0r'cGd,&C*N+r@Ph6Z%H6aQ/"(#?u%rKU3'-*q-7697Vt#S>Z7ak(*N5ImOi$hf&*[!;qGb2$X^&@+IS<HRj>77:Vf,C39mKI%hS!t_T7)oA^?fLYaZiU:19l8FHC6jCh>%"")!,J8GgmCS>#W*Y_IRZ'u"&EJY$n,@<BZP="3[5;kl[DL3]J:1rJANA@f#o&*ViqCu;?'XTN+EieS1crg5L/9@[qD"4D],/PEZ%@'R.d#,)h?=6^<#_6P`KmB#`5o=XZrcPU'Vlo$(ad!!EhPi%;d^LPn.\PQ1.bst7+msO4AN4>+Qf6N--,KZT4h<Mi*7[lB'bi;(4%DEGIT/hh!^^/'Ai`1_6A&;>BDFcS+n5kC,"6j)\`DH^#[.Vd8iB&2`N0$_h'/TO8;Vu#>nosdH9QJMOFgWe1unq_-E7s31$gL7=@%-+PY:ha>[4dss-HK#rC_DH<j5PsreU),S?@kPU(R6(mOa"7UsYp:RRi_n&,c2d.FJ#L/1oERlO4>TI!r-Q&@8K*<!MMV)H6hH3%?%L1?Wbe8b\*h[Yu,N9L_=URRoEMK;(o%@9C9KNmD>D<'`h=bGJi?TUEkpP4d*g>M^R,8d#C.ZnIsG%75<lS)qr7i>3,1H8DQB/mR.%eeH<$@`*_dN9;bm:lAo&CXl!rYL(9S@(r.(4r:+X3hB0ZBdm_KDrdEc-R$8\Ng6bWmSuORL`DR"%)uP]Nn[3*<=]5Z3MR'=$(hA9%IA.dSe(P-3g?Yi$bK@scp(IdJ?1]Q9kL.0HHS+s>n5*Fn:*Z4ghuT?:2eIHNfb5e#Z*ot:\.#$mU,BKm!kMt4VS"/#J6/s7[-.g1%WhQgj;?G?SC+\j]f27H&>,ie-@bc)smc&1S@e<iBjD.'/'\077>@[5t2ma2&Sfg\)&;lZ/CKVF=(CBVfe!h.G5olZVcHp3$4VuFk%(6$t@Q)h:J)SrYe#<3\EA4`e;(>+K-mIi#R7>rTbVtA^Oa@2KC&c1"_=RW0E(+Un8KeTIl4g6;(0JV\Y5W+fBP(6&bR7ngb;XDl7%-2+ZVm&K2?g*#5*JlP6<!Jl0EbNgsM95ubO;;c9dMgSe?3W/d+EX]kaTkP_l1<fudg9NS5MjXspMOV+d1Vq.(,j(r+Y!TD)(Kj]J%8(A)0_](hLK/*o;2;?+BOqD[hP')P.Vs4;uD[4QKTEm1n)\1^f5VCR9685&d'/X5#a]'X`,:_cc_8>'&XNBX0G>T=[6./8ep[J;>%XJt$p>nc-82nHQb?;Xj3?k/!(?4&.aMKuF5<Zkl&2mAqXUt0XR+,5ghq,=u8QZpR2AFX/T@X03^_UDKi5pAs1Ol!Pd=nS%=Cs(<.%[UE$TL<(il_aHJu7>_F7_3Y6P"#j\=\h<+\U7+@63PX*tbFQ;UJpOB%G",&B`S4-%mX?Tm%.H]c'9Io<GA*srDKht!kmN\6HQGI?%%UK8\Vp0&HgD:#V((rn&nM+`=/EQTT-7XF[6H<+k^-4]c1)C=oT/n35++`4i`<KrR*Ib0q:D@>2`7+e?5JL6^#K3gsXkE&]3gnh-%3JQBf:Nh0e.BYs-lg6RDR/.8j=R37]?84a:8a^tg%>5gcKRqu\n\HZ(e+S.02isa7T,Y`S$^@%18)WTd.<P_uB(Y,dV2e>fAZF/H%Y^L/o`-05?TC6-YTM@c,-QNP1"*4@\n0mU'CK<j:RC<u/LM&k8C`JQFHeVM/iad:bQB53,:2e>0Lgqb9No^N6j!YO%QQdDfI3U^m%E%X_<m,o!i%`0M]X*'V-h;6#k98a9OmmMB(AcIQD9/Zm27>T+cHZ,A)8(b=t/dh?TO(A]`4%"L5PgcJQDc"V\a=_Bi[q4YE1@mod%4o2^t/AG+Vods]!Y9T]K#E)(YZX:U/_slBJ`SStHPB$(2]!G7X0N$V#:Q,n+o[W>/\+&n#3CIkC5C@WJEuC[$Ii[R0TDl`XqU0li%n,E3Vrknb]!RlP3rQejMmbe#Im6CT^J,W5^^\dj$J,K09bMW9Ss8KW[r;HZca5?jE++F710E:g>J+okus7EpQro\e,fAHPmn,MkB%s8;MMJ,K7prmuYqj6qKoci;V3r'*HL>N54gqn%@P^\ofmra,\U"ag~>%AI9_PrivateDataEnd