%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.4
%%For: Виталий Викторович
%%CreationDate: 1/8/2022
%%BoundingBox: 0 0 2600 2000
%%HiResBoundingBox: 0 0 2600 2000
%%CropBox: 0 0 2600 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.4.1 x498 R agm 4.7767 ct 6.0%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.4d2f597, 2021/09/01-20:51:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.1 (Windows)"
   xmp:CreateDate="2022-01-01T15:33:59+03:00"
   xmp:ModifyDate="2022-01-01T15:33:59+03:00"
   xmp:MetadataDate="2022-01-30T11:32:43+03:00"
   xmpMM:OriginalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
   xmpMM:DocumentID="xmp.did:8d51d3f7-71cb-1841-b173-92dd20a27fd4"
   xmpMM:InstanceID="xmp.iid:498247d5-ecf6-e24c-8866-21d028c47411"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Mobile"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Tiny students with huge sign pi flat vector illustration</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Tiny students with huge sign pi flat vector illustration. Boy and girl studying math and algebra at school or college, holding ruler, using laptop. Geometric figures in background. Education concept</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>algebra</rdf:li>
     <rdf:li>math</rdf:li>
     <rdf:li>college</rdf:li>
     <rdf:li>concept</rdf:li>
     <rdf:li>figure</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>ruler</rdf:li>
     <rdf:li>school</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>tiny</rdf:li>
     <rdf:li>student</rdf:li>
     <rdf:li>huge</rdf:li>
     <rdf:li>sign</rdf:li>
     <rdf:li>pi</rdf:li>
     <rdf:li>boy</rdf:li>
     <rdf:li>girl</rdf:li>
     <rdf:li>studying</rdf:li>
     <rdf:li>holding</rdf:li>
     <rdf:li>using</rdf:li>
     <rdf:li>laptop</rdf:li>
     <rdf:li>geometric</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>education</rdf:li>
     <rdf:li>person</rdf:li>
     <rdf:li>formula</rdf:li>
     <rdf:li>science</rdf:li>
     <rdf:li>class</rdf:li>
     <rdf:li>equation</rdf:li>
     <rdf:li>number</rdf:li>
     <rdf:li>research</rdf:li>
     <rdf:li>university</rdf:li>
     <rdf:li>lesson</rdf:li>
     <rdf:li>measure</rdf:li>
     <rdf:li>calculation</rdf:li>
     <rdf:li>teacher</rdf:li>
     <rdf:li>cognition</rdf:li>
     <rdf:li>academic</rdf:li>
     <rdf:li>graduation</rdf:li>
     <rdf:li>classmate</rdf:li>
     <rdf:li>instrument</rdf:li>
     <rdf:li>cube</rdf:li>
     <rdf:li>tool</rdf:li>
     <rdf:li>intelligence</rdf:li>
     <rdf:li>knowledge</rdf:li>
     <rdf:li>laboratory</rdf:li>
     <rdf:li>experiment</rdf:li>
     <rdf:li>chalkboard</rdf:li>
     <rdf:li>pupil</rdf:li>
     <rdf:li>lecture</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="200"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEAtAC0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAtAAAAAEA&#xA;AQC0AAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqp1WeOoLBa9QaVA/hkvpKOb&#xA;fox+n6dPg8Kn59cHEbtaaP7mIn4nA33NTTDzK8l6srKGU1U7g4CKS3gV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbI6gqrCvM8QPorhAQXkf5kfmFNJeLpW&#xA;iTtFBZuDPcxGheVDsqkfsofvPyzVavVEmol7HsbsgCHiZRZkNgeg/an3kX8z7fVPT07WWWDUTRYr&#xA;j7Mcx7A9lf8AA9vDLtPrBLaXNwO1OxDiueLeHd1H6w9AzOeeU2kKSInH4G2BHYjtkgLFotUyKXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnv5o+d102E6Pp&#xA;7/7kpl/fzKd4Y3HQEftsPuH0ZhavU8I4RzL0PYnZfiy8WY9A5eZ/UHj9naXF5cx2tshknlbiiDuc&#xA;1UIGRERzL2ObNHHAzkaiHXdnc2dw9tdRtFPGaOjdRjOBiaIorhzQyREoG4l6D5F/NKax9PTtddpr&#xA;LZYrw1aSIdKP3ZfxHvmbp9ZW0uTz/anYYnc8W0u7ofd3F69DNFPCk0DrLFIoaORSGVgdwQR1GbUE&#xA;F4+UTE0RRDoZDJGGIo3Rh4EbHJSFFgCvyKXYq7FXYq7FXYq4sAKk0Gw38TsMVS8aw0lvLNbWF3cG&#xA;KT0hFwSF3p1dBcPCCo8a/LLfCo0SB9v3W1+JtYB/HvV4tStZL6SwBZbuJFlaNlZao37SsRxah2PE&#xA;mhyJgQOLoyExddUTkGTsVdirsVdirsVdirsVdirsVdirsVYP5/8ANs1o66Zp0xjuBR7mVDRlHVUB&#xA;8T1ObLRaYS9Uhs4+bJWwSfyXr+tXXmWzt7m9mmgk9TnG7llNImYbH3GX6vDCOMkAX+1himTLm9Qz&#xA;TOW7FWNeevONv5b0supD6jcArZwnx7yN/kr+PTMfUZxjj5uz7L7OOpyV/AOZ/Q8BuLi4u7mSed2m&#xA;uJmLyO27MzGpOaMkk2+gwhGEQBsA9R8keVBpVr9cul/3ITruD/upDvx+Z/a+7Ok7P0fhjil9R+x4&#xA;Dtztb8xPggf3cftPf+pHeZtE0XVLbjeyJbzoP3VySqsvfepFV9su1enx5B6jR73F7M12fBK8YMon&#xA;nHv/AGvJdSsGsbt7czRThfsywurow+ak0+RzmcuPglVg+59E02o8WAlRj5EUU/8AJnn7U/LkwiNb&#xA;nS3P720Y/Zr1aIn7J9uh/HLMGpOP3OD2l2VDUi/pyd/63tuj6/pusQR3NhKJbeRag9GVx9pHX9ki&#xA;ubvHOM48QeE1OmnhnwTFFMsLS7FUHNrGlQyNFLdxJIhoyMwBB98iZgdW6OnySFiJpb+ntG/5bYf+&#xA;DGDjj3svyuX+aW11zR2YKt5CWJoAHG5OHjHeg6XIP4Sjck0JbNarqGolby0/0fT5Ip7KVnPF5uLE&#xA;twGx9Oo4lv2unTLRLhjsd5c/c1mPEdxy5JizKtORAqaCu1Se2VNiFv4be+spLX6y0PrKeE0D8ZFK&#xA;mvJCP5SPl45OBMTdMJASFWt03VbS8tfVSQj02kjf1eKtWGRomYgGlCy1B8MM8Zia/G+6wmCEblbN&#xA;2KuxV2KuxV2KuxV2KuxV2KpT5n1+LRdLe5NGuH+C2jP7Tnx9h1OX6fCckq6MMk+EPGZ55Z5nmmcv&#xA;LIxeRz1LE1JzoAABQcElPfIX/KWWP/PX/ky+Y2t/uj8PvbMP1B6/mhc1L9f12x0PS5tRvWpHGKIg&#xA;+07n7KL7n+3K8uQQjZcnSaWefIIR5n7PN88eYNevtc1OXUL16ySGiIPsxoPsovsM0WXIZysvouk0&#xA;sMGMQjyH2+aXxztDIssblJI2HF1NGVu1COhyAJBsN8oiQoiwVafV7+Y/v7yaSpoecjNv17nJyyzP&#xA;Mk/FphpcUfpjEe4BCmaMd+5H3V/5pOQb3RyGRgqKWNNwNyNwP44qTStFZ6pOAILKeRiNgkbt8RAN&#xA;Nh75ZHFI8gS0z1OKP1SiPeQybynZfmFpmofXNK0+dAKCeKVeEbqORIdXK1G30dsyMWHNA2AXV63U&#xA;6LNDhnOJ925Hup7rplzeXNjFNeWpsrlx+9ty6ScT7OhKkHqM20SSNxReIzQjGREZcUe/l96KyTUw&#xA;vWPKur3Wp3FxCqGOV+SktQ0pmNPESbd3p9fjhjETdhLLzyvqlnbPcXHprFGKk8xXwAGQOIgW5WPX&#xA;Y5y4RdqGh6dcX2oxRwjZGDyOeiqprXIwiSWeqzDHAkvS2abmFRRx6s5P4ADNgAKeWS21KwavfWcc&#xA;7tPOVvvTmX4AjqISsbDsGiqR25e+WneIJHl+n9LWNpEfFfq5hafTY5PQJN0rKs6kklY3I9LYj1Ad&#xA;x7VwYwakRfL8X5JnVj3rjpOgWsQlNlawRWySkP6UaiNJATLQ0+EMPtePfB4kyas7/gLwRHQbJMuj&#xA;6NF5Xvb2CK1dZrS4ktZ7uDhHHbSFp4oXUgusMZIJUDtUCuX+LM5ADfMcj15X72rw4iBIrkeY6c/k&#xA;ynMNyXYq7FXYq7FXYq7FXYq0WXkFqOR3A+WNKpM4t4pLi5loiKWdjsqqu5OT57AI5c3jnmbXZdY1&#xA;N5gW+rIStrGxrRK9fm3U5vtPh8ONderhTlxFG6t5fXS/LNtLOvHULi4BlVhQonBiq/xP9mV483Hk&#xA;NfSAmUKj5rPIX/KWWP8Az1/5Mvh1v90fh964fqD1/NC5rAfO3kLzF5pvuUmow2unw1W1t1V3NCPi&#xA;d/s/E34ZhZ9PPIeezv8As7tTDpYUIkzPM7fikph/Im2rW51mR6/aEcIT+bapd/5srHZ46lype00u&#xA;kPt/YxtfLfk638+T+T7ma5e+iiFzDISI1kBVH4Vp8R47/D/K2ZGn7KuzL6Ojjaj2mnQEKE+u23w3&#xA;ZXB+XflGIf7xeodt3kkOwAHTkB+zmbHs7COn2l10+39XL+OvcB+pJdK1nyI/mu68t/oiGC6iZooZ&#xA;pESRZWSvJQSCVO5+f4ZVilg8Qw4Rbm6nDrhpo5/EkYncgEirQ35y65/hryvbSaWsNve3F2iIojXe&#xA;MKzPtttstfnmedHjyjhI28tnQx7Qy4jxiRJ892e6VdreaXZ3agBbmCOUAbAB0DbffllVs0E3uj7e&#xA;d4JRIvyYdiPDIyjYpQaT61uUuI+aigBpTMKcOEuRE2rZBLsVYN511Uz3gsYz+5t95Kd5CP8AjUZi&#xA;5pWad92bg4Y8Z5n7k98uaMtrpkYY/vJv3lwB1P8AKlf8nv75kYRwDzdZrs/iz2+kJ5knEQ2o2ct1&#xA;bNFDcyWc1Q0dxFxLKVNRUMCGXxB65OEgDuLYzjY2NJbq0+prdwo0MXoCUNZsG5vPKIXPourR0gq1&#xA;T6gZth70y3EI0d9+vlvz8/c1zMr/ABv+pERx6jdXFu13ILQRIxuNPiKypKXHEcpXRSVUHoFG/fIn&#xA;hiDW/n+xkASRe3kra24j0W/cy/VwltMfX9MTenSM/H6R2fj149+mRxbzHXceScn0n3I3K2bsVdir&#xA;sVdirsVdirTMqqWY0AFScQLVasaczKN2YDc9h4DCTtSKYJ+ZevTIY9HhqqSKJbh/5hU8U+VVqfoz&#xA;Zdn4QfWWjPPoxXytPo1tqiXeqs3pQfHFGqluUnavsvXM3UCZjUerTjIBsp554806RrFhBDZFzLHL&#xA;zbmnH4eJHX5nMfR6eeORJbMuQSGyReVdSttN161vbokQRepzKip+KNlG3zbMnU4zOBA5teOVG3rG&#xA;i6/p2sxSS2TMViYK/NeO5Fc0eXDLGaLmRmJckxypk7FXzn/zkFpWoWOq6X5x0x2jntGFtLOnVGRi&#xA;8Ln2NWU19h3zcac7UXAzd6b+T/zt8u6zp4t9XuE0jWOHFml+G3Z6U5pIdlFd+Ln78hmwyo8LZhzR&#xA;4gZcr3QuqnyvY+jqGsXn1eDT7iO5hmjbm0sqNyCR8QS/Oh+zsOpOcxotJOeav5vN7LW9pxxYLG/i&#xA;RI+B/U8n/MXz3e+ddeSWOJorGCsOnWn2noxFWan7chA6dNhvSp7HHDhDwc58RfUWj2TWOkWNk27W&#xA;tvFCT13jQL/DMMndyglXnLW9f0m2t5NG046jLK5WVFjkk4qBUGke438csxQjI7mmM5EcmN2v5l/m&#xA;ZbMSnllyG6qba6p+vLJ6XFL+L7mMc0x0en+SNb1nWdBS+1ixOn3jSOptykkfwqfhbjJ8W+avUY4w&#xA;lUTYcvFIyFlO7mdbe2lnf7MSM5+SiuY5NBuhHikB3vN9Ht21PW4llNfVkMkp+VXP35h4xcnpdTLw&#xA;8RruoPS0RUQIooo2AzOJt5gBvArsVUbi3MxiIlki9KQSfuzTlSo4PUGqmu4yUZUgi0N+j5okVxe3&#xA;MrRLIKMY/j5/zUj/AGP2afTXJiYPQfj4sOEjqVv6Lea34/pG74yW/o81aNWqTX1QQgpJTao29q48&#xA;dHkOf4HuXgsczyTHKmx2KuxV2KuxV2KuxVZII5P3THc/Fx8QDkhY3QV+RSwDz35Z1fUNWF5bRq1u&#xA;sKIWZ1X4gWNKE175tNFqIxjwnnbjZoEm2L/4S1z/AHyv/Br/AFzO/MQaeAobUND1CwhWa5RVR24C&#xA;jAmtK9B8slDKJGggxIUNO0+61G8js7RQ9xLy4KSFrxUsdzt0GGcxEWeSgEmg9P8AIehalpFpdR30&#xA;YjeWRWQBg2wWn7JOafW5ozI4XLxQMRuyjMJtQ2oXQgtyQf3jbIPfx+jLMUOIsZyoMU1fSrHV9MuN&#xA;Nv4hNaXSGOVD4HoR4EHcHxzPBpxiLfKXn/yPfeT9dOnzzJcW8yetZzqaM0RYqOafssKb9vDM2E+I&#xA;OJONFAa75n1bWxbpeuohtUCQwxjigNAGcipqzU3P8Mrw6eGO+Hq2ZtRLJXF0eh/kf+XNzqOoxeZ9&#xA;Th4aZaPysEfrPMh2cD+SM9+7fI45clbLihe76EzFch2KuxVF2N+9s3FviiPVfD3GVZMfF72cZUr+&#xA;ZLgN5eupITy5hVFP8pwD+BzAzAgF2Oho5Y/jox7yNbt+lJZHUjhCeNQRuWXMfAN3Z9qT/dgDvZwS&#xA;AKk0A6k5lOiQsmp2abc+R/yRX8emWDDIsTMMP8l/mZ/iHUtTtJ7IWqWDBUkVzJzqzLuOK0+zmVm0&#xA;RgAQbtphnslm0NxDMKxOGHfx+7MOUSObeCCqZFKxJAZHjpThQj3ByRG1otfkUuxV2KuxV2KuxV2K&#xA;rEVC7SKak/Cfbj2yRJqkL8ilIdRujPOQD+7Q0UfxzNxQoNE5WUJlrBIvN9pdXNjCtvE0rLLUhBUg&#xA;cTl+nkAd2MwlflKx1Kx8wWl1NayLHH6nIsCo+KNl6/TlupMZQIBRjsG3pUeqW5l5FiqMPiVgTQjw&#xA;pXNQcJpyRMNzaxbqD6QMjduw/HfGOA9VOQJTPPLPIXkNT28APbMmMQBQaibU8kh8s/nNqsuofmFq&#xA;XKojs+FrCp7LGo5fe7MfpzMxCouJkNyYRlrB9X/lLG0f5daIrUqYWbbwaR2H68wcv1Fy8f0hl2QZ&#xA;uxV2KuxVUimkicMhoQa0O4+7AYgpBpG/pqfj9heXjvT7sp/Lhn4hQc9zPOayOT4DsPoy2MAOTAyJ&#xA;Yb5x8teatVvoJtH1dtPgji4SRLLNHyfkTypHt0OZOLJGI3FtU4k8i838oeXvMupahqUOl6o1jPbM&#xA;BdSiWWP1DyYVqm53B65mZckQBYtphEnkXtehxX1hptnDcTma8giVJrjkWLuBQtVtzX3zW5KkT3OV&#xA;Gwyuyu1uYeXR12ce+YGSHCXIjKwqu6o6VH2zx5fQSMiBaSV+RS7FXYq7FXYq7FXEgCp6YqoPLbWV&#xA;o808gjt4VaSWVzQBR8RYnJ0ZGhzY2ALLGrzWtfvdPudStWTR9FgiaVLuaIzXcyKOXOOElVjVh9nn&#xA;yY/yjMqGKEZCJ9U+7oPj1ceWSZBkPTH7WMLbeYreVTPr0nxOsR5W0TIZJael8IRSo3o3xdfDpmfc&#xA;Dyj9rjVMc5fYmVtq17bXUdlrESRvMeNtew19CV/5CG+KNz2Uk17HKzjBFx+TYJkGpfNOMpbXYq7F&#xA;XYq7FXmXm/8AMC6lnktNLlMFpGeLXKH45D0+EjoK9KbnM7DpwNy9Z2d2PGMRPKLkenc871DS9O1C&#xA;Rpr6JWmfdpCSJCfFnBBOZHCHM1Wi0s/7wRB+X6kvXyboc0yxxNIZHIVI0cEknoAKE4DEOq/kvs8n&#xA;aY/04fTflfyy2l+XtO05n4/VLeOIj7RqqgHcUHXNPkzAk06CcIiR4fp6e5NDpn8sn3j+3IeKx4UN&#xA;NbSw/aFV/mHTLIzBQQpZJCGvtT06wi9W+uYraP8AmlcJX5VO+ERJ5MZSA5sK1383tGtax6VE1/L/&#xA;AL9NY4h945N9305kw0pPPZxp6uI5bqnk/wDM+DWtQXTr22Fpcy1+ryI3JHIFeJqAVPh44Mun4RYT&#xA;i1PEaLOsxnKdiqXaZ5e0bS5557C2WCW6NZ2BY8iCT+0T3JycpmXNAiAmOQSi9LnMV0o/Zk+E/T0/&#xA;HKs0bizgaKdysioXccgnxU69Mw4izTcV+BLsVdirsVdirsVWyIXjZAacgRXwrhBooLGPNc9vNqWl&#xA;6Pch3sTyvL2KON5TIsLIkMRRA5KvNIGO3Rcy9OCIymOfIfHmfk4+YgkRPLmUT5iv9R/RrpFaTW9b&#xA;yG3MpeOphMi8pUCGX4Wpxo3E0Ndsjp4R4ud7Fllka5dWNX02px2+oS+ksYR+UjwyOZBDGgbkgMS8&#xA;3IFOFf8AZZnxEbH4/S40jKj+P0K+oL9esmsr+zkjjuC6eohVxHxFUlLAgrvuppsRkYek2DyTLcUQ&#xA;u8tai+o6Ja3UjK8pUxyupBDPExjZhTsxWuOaHDIhOKfFEFM8qbHYq7FWDee/zC0zT7W50uyf6xqM&#xA;itE5jPwRV2bk381Ow/DMnDgJNnk1jWRxTBriI6PHZbqeUgs1KdANgM2DDVds6nNzmQO6Ow/HvUsX&#xA;VkuxVF2esavY/wC8V9cWtOnoyvH/AMRIyMoRPMMhMjkU3g/MXzvBThrNwaf78YSf8TDZUdNjPRsG&#xA;omOq+f8AMrzzNH6cmry8T14hFP3qoOI02MdFOomeqCuPOPmq4HGTVbqnQhZWQH58SMmMUR0YnNM9&#xA;UpklllcvK7O56sxJJ+k5NrJW4VZV+XOgahqPmOzuo42FnZyiaa4oQgKfEFr3LHtlGeYESG/T4yZA&#xA;9A92zWu0diqD1TU4dOtfrEysylggVaVJPz+WThAyNBBNJR/jjT/98S/8L/XLvyx72PG2vnmwVgwg&#xA;lqDUfZ7fTgOlPevGyrQPOWn67dyWcMEsbLEZGMnGhUEKRsT/ADZgZtLLELJciGQS2T+NkaNWT7JG&#xA;3yzFIotgXYEuxV2KuxV2KrJ0Z4mRTQnv9OSiaKCGK+Y7OUeb9MuIzGGvLWeyRpTIE5q6y8KxshDP&#xA;F6nE77jpmXgkPCkO4g/j4042WP7wHvFKuvW1bJ/VsryMC8jRWtJuZeNnb95IOalYj6hDjqB7CoGC&#xA;Xq5jl1/HNOUbcjz6fjkxu7EIg1JltL0GRmj5QA+qP3Z/epyKjqx4mp7ZnxuxuHGlyOxRxhdgHNob&#xA;eIM4neecgqig0dRG0imtehYUyu/O/gzryUfJcDxeXrdnJJuGluASONVmkZ1NB0qpByWoNzKNOPQE&#xA;7yhudirAPzT843elRRaTYMYrq6j9SadTRkiJKgJ7sVO/bMrTYhLcuJqcpjsHj2Z7r1SK2nmBMaFl&#xA;UgM3YE1oCfowOXpNDl1EuHHG/uVrzT5LbTfrhbm/rCH0VB6FS3It/saYOLenI7S7KyaQR4yCZdyW&#xA;fWnH2oWA/wA/bJOq4mdaX+VHmvVNGtdWshbyQXcfqxxGTjIAa05clC9v5sxZauEZEHo5UdNOUQR1&#xA;Quo/ln520+2murrTSttbo8ssqywuAkY5M1FcnYDwyUdVjJoFjLTzAshif1mD+f8AXmQ0cQTny55a&#xA;1bzE066VGsotuHrszqgX1K8ftUJrxPTK55BHm2Y8ZnyZfY/kxrEhBvb6C3XuIg0rfj6Y/HKDqx0D&#xA;kR0Z6lluj/lZ5WsCsk8b38w3rcH4K+0a0H/BVyiWpkfJyIaaI82XRRRRRrHEixxoKKigBQPAAZRb&#xA;kALsVdirF/PM9IrWAH7TNIw/1QAP+JHMrSjmWE2Oadpd3qMjR2wBZF5NyNBStMyZzEebAC0w/wAH&#xA;61/LH/wYyv8AMRTwFlnkTytq2l6lJeXaoIZbcohVuRqzow2+S5gazURnHhHO2/DjINs1hEYjCoaq&#xA;Kj8c10rvdvC/Al2KuxV2KuxVZOsjRMIzR9qEGnfJRIvdBQeuaPFq1gbZ5GglVlltrlPtwzRmqSLX&#xA;uD942yWLKYSv8EMcmPiFJBf+YGj02403zIr6ZdleMd9ExS1nYbq0c5BWMsRuknT3GZUMPqEsfqHd&#xA;1Hw6/Boll2qex7+nz/WxuTzJoky1ku0hW5kgkmKTRq8QSMS0cgVNSnpkAnr2zOGGQ6crcY5YnrzR&#xA;M0l15hpbwRyW2ik1ubmRTHJcL19OJDRgjftMaVGwyIAx7neX3MiTk2H0/en6qqKEQBVUUVRsAB0A&#xA;GY7e3irsVYF+ZnkjUNbeDUdMAlu4I/RltyQpdAxZSpNBUFj1zJ0+YR2Li6nCZbhgFt5D8xpNG19p&#xA;l0LYk8xCoeQgdhTlT6cdXrvDj6AZy/HNt7O7M8af7yUccB3nn7mUaf5Lnh8lahItldjUDNHJHayA&#xA;ySMsNQPTjVQdxK/bemUaLWZMlHKBH7HrzqcOHUwhiMfBEa25C/7AwTVTeRgQTwSWw5EmOYcHLJtu&#xA;h+IU5dxmyx5YTvhIlXc6r2syAnGB3SPzpLstePfVvl+1+qaDptrSnoWsMVP9SNV/hnO5DcifN3uM&#xA;VEDySr8x7oW3kbWZCaB7cwn/AJ7kRU7fz5ZpheQNeoNQL5i+rQfyDN86Wg9j/JfT44dAvbtUCtcX&#xA;Pp18ViRSPxkOYGql6qdjo41El6FmK5bHvLmr63e6nqsN/ZmC3glAtmJX4RwU+m1CdyrK/wBJzIzY&#xA;4xjEg7tGKcjIghkOY7erR2k7ryVdu1dv15EzATSkysrFWFCOoOEFDBfOU/qasIwdoY1Uj3NW/URm&#xA;fph6WqfNBaVrVxpgmMCIzy8QWepoFr0AI8csyYxLmgGkzt/O1+rj14Y5I+4Wqt99SPwyo6YdGXG9&#xA;L0DVrLU9NintX5BVCSIdmRgNwwzTZ8ZhIguXCQIR8SKoYKagsSfYk1plRNsguwJdirsVdirsVWzc&#xA;/Sfh9uh4/PDGr3QVwqQK9e+BLTKrKVYAqdiDuDirE30vT7a7kMVrDHIrH40jVTt03AzZDISObiGA&#xA;B5NXdzFa2s11LX0oI2lkp14oCx/AYQLNJJeJyeZPOXmO+muYdQlsbZTRI4ZHiRR1C/ARyPiTmzjh&#xA;hEVTi8UiqfV/OP8A1MN1/wAj5/8AmrDwQ7gn1d7vq/nH/qYbr/kfP/zVjwQ7gvq73fV/OP8A1MN1&#xA;/wAj5/8AmrHgh3BfV3rbXzT5u8talDNd30uoWchpJFNI0qso+0BzJKN4EZGWGMhypRIxL2ebTW1q&#xA;zWK3vJLSOQLIZ4QpZoz+yOYI+IHwzSarHxR4bp2ejzjFPiMRL3/e8T/M3SLDSPMxsLN5ZRHCjTyT&#xA;sGdpHJcn4Qo+yV6DM/svTxxY9upcDtnXz1OUGVemNCmO6TafXNVs7P8A5aZ4of8Ag3C/xzYTNAl1&#xA;cRZAfVbX1sDTlX5A5z/hl3lsH/OTUYh5IliR97i4hjI6dCZO9P8AfeZWjgfEcbVy9DwLNw6p77+W&#xA;dmYfIOmy0oZnnkb6ZWUfgmanPK8pDtdMKxhkeQbkBosUkmoayEWv+mJ8v947fJ5ZARj7v0lrxjeX&#xA;v/QGQwWKR0aT4m8OwzFlkvk3gIrKkoe8txLHyA+NenuPDLISooIef6x5W1S6v57qN4mWRqqpJDAA&#xA;UA6U6DxzZ488QKaDEquneS7cRBr92aU/7rQ0Vfp7nBPUnokQSzzJ5fTTfTmgZmt5DxIbcq1K0r75&#xA;bhy8Wx5sZRpX8g6pLZeYYYgx9G8/cyr2JP2D9DZXrcYljJ6hnhlUnrMUfDnvXkxb5VzRk25YC/Al&#xA;2KuxV2KuxV2KrIGdolZxRiPiHTfJSFFAX5FKRarHwvGPZwG/h/DM3Cbi0TG6ReZP+Ud1T/mDn/5N&#xA;NmRj+oe9rlyLwzy3rdpZRSW9ySiM3NZACRUgAggb9s2pDixlSdf4l0T/AJaf+Ek/5pwUWXEHf4l0&#xA;T/lp/wCEk/5pxorxB3+JdE/5af8AhJP+acaK8QSPzJrVtfLFBbEsiHm0hBFTSgAB3yQDGRt9EeUl&#xA;/wBwdm3jbwj7oxmi1B9TmQ5Pn78wr769511icGoFw0II6EQARD/iGbbTRrGA6jPK5ld+Xdn9b846&#xA;ctKrE7TMfD0kLD/hgMOc1Ap04uYe+5rHavPPzomI0Wwh7Pcl/wDgIyP+N8ytINy4msPpDyLM9176&#xA;c8i2qx+SdGiYVVrSKQg/8WLz7f62aHPL94T5u6wD0D3JytjbA1419ich4hbKSybyyWvLm5ttUvbI&#xA;XbrJLBbm39PmsaRVAkhkbdY175YM+wBiDXv/AFtZxbkgkX7v1ILV/KOo3ml3VrHr188k0bIqzG39&#xA;Mkinx8IFanyOTx6mMZA8Mft/WwnhJBHEfs/Umvl7SrrS9Lis7q/l1GWPrcTUr0+yKb0H+USffKc2&#xA;QTlYHC2YoGMaJtMsqbGB33naxS5lWK1lPFiCHKruDQ9OWbOGmNblpM010vUI9QskukHHlUMlalSD&#xA;SnbK5w4TSQbSnztMi6bFEftvKCo9lU1P4jLdMPUxnyY/5UhebzJpyJWonRzTwjPM/guX6k1jl7kY&#xA;x6g9nijKc6mvJi335oJG3NAX5FLsVdirsVdiqnJMENBuckI2xMqeDeYrvVf8RaoF8/GyT63PxtPX&#xA;vx6I9VqR0RCo4fZ+HbN1jjHgH7u9vJwZE2fV967y1camfMelB/P/ANdQ3luGs/X1A+sPVWsVHQKe&#xA;f2fi28cGUDgP7utj/NZQJser73tGtx/DHJ4Eqfp3GazTnmHJyBj+qxpLpd5G45I8EisviChBGZkP&#xA;qDSeTz3Qfy40nVbeSfisKI/AbM5JABP7S+OZ2XUcBpoEAusPyz0251C7tGVIxaFQ0g5NXlUrQch2&#xA;GMtRQB714A5fyz006y2m8UAWP1vW+L7FQPs8utT44/mPTxLwBA+ZvJGkaFxZ4lnjdeSkclNQQCCO&#xA;R8cpza4QxSyEfS5ei0P5jNHEDXF/aktlp2i3LMv1MIyiv2mO33jMfs7tUakkcPCR8f1Ox7W7COjj&#xA;GXFxA7cq/SXu1tcQaT5X+tuOMNpamYr/AJMcdQPuXKJjiyV5usvhjb5emmkmmkmkPKSVi7t4sxqc&#xA;3oFOjJtn/wCTNgZNZvb4iq20AjB8Glao/wCFjOY2rlsA5ejj6iXr2YDsHmP52ORHo6dmNw1fkIx/&#xA;HMzSdXC1nR5bma4L6i8pycNE0+1alY7aFUp0osYFM0WePqJd3i+kBOsx2x2KtO6IAXYKCaCppUnt&#xA;imm8UOxV5v538tz2t7JqNuhazuDzkKivpuftV9mO9c2ukzgjhPMNGSPVILDVb+wLfVZSgb7S0BU/&#xA;Qa5lTxiXNgDSneXt3ezercyGWQ7CvYeAA2GGMREbIJt6H+X/AJVmsQ2qXyGO4kXjbxNsyIerMOxb&#xA;9WarW6kS9MeTlYcdbllJZjWpJBJIr7nMSmRKpDIQeJ+ycjIJiURlbY7FXYq0zcVJ8MQpQhJJqepy&#xA;5pYpefld5Fvbye8udM9S5uZHmnk9e4HJ5GLMaLIAKk9syY6vIBQP3NZxRPRX0z8rfINpd295baX6&#xA;d3ayJNBJ69waPGwZWo0hBoR3GQyavKRROx9zOGKHcyjUIvUtJB3A5D6N8x8RqQbZiwxy4hL6feMf&#xA;spBIfp4GmZvFRHvcemIeVNKvbm2mngvntE58CiCtSADU1I/mzOzzANEW0gL9J0W/bWL+NNQaKS3I&#xA;Eky1LSc6kVBPtvgyZBwjZQHJouoHzM8H19hMIvW+tb8yuy8aV/zGJyDgulrdKPPsNxpUf1m7na/D&#xA;R/CH2P2gvGm4pVsli4ckTEjZkMksZEomiGJ+X9XhvZJYlthAygNVTUEVpvsMli0uPF9AAtsz67Ln&#xA;rxJGVd70T829eWw8k2mmxtS41MRoQOohiCu5+/iv05haTHeQnucfVzqFd7wzNs6x7Z+U+kmy8ri5&#xA;cUlv5Gm368F+BB/wpP05rtTK5V3Oy0sajfezTMdyXl/52/8ASl/6Of8AmVmZpOrg6zo8vzNcJ9L6&#xA;NJTTLGRDX9xEykf6gzTzG5dzDkFHzf8AmV5c8rLCl6ZJ724XnFZ24DScdwGbkVVV5CnWvgDleLTS&#xA;ny5IzamMOfNryh+ZXl/zOZIbcS2t7Ehke1uFAYqPtMhQsGA+/wBsGbTSx7nkuHURybDm8X8161qv&#xA;5i6zJeW5+raVYkRQW7vUohJJlZB+2/t4UrtnM6nUccvJ7PQ6Lw4116s8/LHzR5s/TOo6Jq9z9eht&#xA;YUlhkfiXjq3EKWUAnku/xE5sOzssshIJ2dX2tpoYqMRRJeoW96kp4kcX7Dsc2UoU6YFEEBgQRUHY&#xA;g9CMgljWpeVdFMxdrRQrmo4FkFfCikZmY9RKubXKARvlvy/pNtO88NqgeMAI7Vcgk1qC1SDtlWpz&#xA;SIq2eKIZBPJQcR1PXMSIbZFD5NrdiqMjbkgOVENoLeBLsVU7g0SniclDmxkhssa1KW5hiNGbfwG5&#xA;yQgSi1iahAW6lT4kf0yRxleJGC4Zl2IYHvlXAz4kv1ONI9IvFQUAgl/4gctgbmPewPJ595V0ee7t&#xA;priO+ltQH9MpEaE0ANTv/lbZtc+QA1VuMAu0nQrh9Yv4kv5I2tiA00ZPN+dTvv7b++DJlHCNuagO&#xA;TQZz5le2+vyeosXrG5BPq9l41r13+7HxRwXS1ulHn62fSYjcTTNf84/sy7n7QWhrX4fiyzTz4hyp&#xA;EtmI+W9SiuZJoo7RLfiAxaMUB3pQ7ZkEMIlCeevMkmu640tSLW0RbW1TwSPYt/s2q2VYcXAPe4mf&#xA;JxSSrR9Mn1TVLXT4P7y5kCA9aD9pj7KtTlkpcItrhHiNPo+0tYbS1htYF4wwIsca+CoKD9Wakmzb&#xA;uAKFKuBLz385rJ5NGsrxRUW05R/YSr1+9AMytIdyHE1kfSC8hzPde9V8s/mr5fsfKkEOpyuNSsI/&#xA;QFqqMWlWPaMq1OG6UryI3r7Zg5NPIy25FzseqiIb8w8x1bVrzXNautYvBxkuGrHH1CIBRVH+qopm&#xA;ZCAiKDgykZSMiyD8tIbt/OVhJbEr6BeWZx+zGEIavz5cfpyrUVwG2/TAmYpvSRY6f5g1G59QwWd1&#xA;LKY4o/ihVOZaNTUE7Kdj9Ged55AyNcrfW9NopwxxJ+qhad/l3d3sXnadoZ+dnqgb6ytxQSH0lYws&#xA;lAN+3H+XM/svKRk4ehdX292fWHxOZH6XrwJBBGxG4OdG8YmttcLMn+WPtD+OY040WYKq6K6lWFQe&#xA;2RBpLUAW2jZUNFJqScZeopBpRbULcHqW9wP65MYyx4lSK5hlNEbfwOxyJiQtqmRSiLc/AR4HK5tk&#xA;VXIsnYqhruaJGVXdVNK0JAyyALXMoK5vIkiPpurOdhQg098ujCzuwJSwtU1JqT1OZDB1R44quSZ0&#xA;+w5X5HAQCtqeo3dw+nXSc68opBTbeqnGEBxBSdmIeVNES9tpp2u5oKPw4QNwOwBq3Xx2zOz5OE1T&#xA;SAu0ny+kmsX8BvZFFsQOcTcZH51O536U398GTLUQa5qA5PL6HzM1p9dkosfreqG/fdhx5eO9enTH&#xA;xfRdLW6UefrVdGiMyyPeFo6+nMebD4gvxH+XfLNPPiHKkS2Yj5b1V7x5ozbxwhQG5QrxHhQ9d8yC&#xA;GESxa4YNcSsDUF2IP04XXnm9Y/Kfym1nbNrl4vGe6XjZoeqwncv837e3zzA1OW/SHO0uKhxF6LUe&#xA;OYrmOqPHFUDrelW2r6Vc6dcf3dwhXl1Kt1Vh7qwByUJcJtjOIkKfPWs6Nf6PqEljexlJYzsf2XWu&#xA;zqe6nNrCYkLDqJwMTRQNATWm+SYqtvbz3M6QW8bSzSELHGgJZiewAwE0oFvWdM8rHyv5I1S5nAbV&#xA;bq3b1yp/u1IoI1YeFakjv8hml7Sz8UCBy5fM09B2Rh4csSeY9X+lF/oeAr+YmpqKC2hp786/rzD/&#xA;AJCx/wA6X2O8/wBF2f8AmQ+39bIvy+86X2o+dNKtpYUjX1GflGWB/dI0gG5OxKUOU6jsyGnj4kSS&#xA;YkfeG3D7QZdWfBlGIjMSHX+afN9P1Hjm0eZbVypqrUI7jAqr9duKU9T9WR4Am1N5nf7blvmckAAi&#xA;1tR44VcGoag0I6HFU0t7yJ4gZHVXGxqQPpzHlCjszBRlpNE7MqOrGlaAg5TMFnAonK2x2KpNr+nz&#xA;TMlxEpcqvF1G5pWoIH05k6fIBsWnLEndj5BBoRQjqDmY0OxQ7FXYq7FXlGuaxPb+YdQs7KRraK3c&#xA;KqqSCfhBO/hyrT2znu0e0MpyGIkQI9z3/YvZGD8vGc4iUp777/Jn9ikX1S1cxqXMSktQVqVFc2eo&#xA;yzGOJBP4DzOjwwlnnEgUL+9V+r23P1Pq8fOtefFa1+eYP5rL/OPzdr+TxfzY/J0ltaSEmS2jcnYl&#xA;kUn8cRqsv84/NfyeL+bH5Ka6dpqqVWygVT1AjQA/hh/N5f50vmV/JYf5sfkof4f8v/8AVqtP+REX&#xA;9MfzeX+dL5lj/J+D+ZH5BMhM4AAFANgBkPHn3ln+TxfzR8m/Xk98fHn3lfyeL+aPk715PfHx595X&#xA;8pi/mj5NevJ74+PPvK/lMX80fJEf4d0bXrB4tUtlnCsQjnZ02H2WG4y3FrMsDYLrddosUjXCOXRg&#xA;Gv8AkfyPo+tRWNzLfKJo1lQqyMnxMy8T8Bf9ntmbHtyjUh8XEx+zcsmMzgRseRNH8fJl2ieW9D0l&#xA;A2n2oidwKyuGMpB8S/xD5bZnSymXN1YxCBoMC8z+afMMl1e6fK31a2YvC1uI0JKGorycMdx3H0Zu&#xA;cWgwzxixxW7rT4IACQ597yu58g2jv/ol08Y/aDqHA+kFMnLQDoWifZsTyNJxoHl2z0W6ivbZ3a+h&#xA;r6dwTTiWUqeKjboT1rkxoMRFSHF73IwaSOM2PqeueQbnzFcmea/kkksWUei825L1/YJ3Ip17Zgdo&#xA;RxRoR+pxdZGAoR5syzWuA7FXYq7FXYqqwWtzOaQxs/uBt9/TIykBzZCJLIdG0p7TlLKR6rjjxHQD&#xA;r1zDzZeLYN+OFJnlDa7FXYqtkiikFJEVx4MAf14QSOSCELJpGmydYFH+rVf1UyYzSHVicYQ0nlyy&#xA;b7Duh+YI/Vlg1MmJwhCS+WZh/dTK3swK/q5ZMakdQwOFCS6JqUf+6uY8UIP4dcsGeJYnGWCeafy1&#xA;i1TVTqC3Mmn3MgAmHp8gxUUDAFkoaDfMLU9nRzS4ga+13/Z3tBPTY/DlHiA5b1+gpvZ6TeQwRwy3&#xA;fMRIqK4WhPEUqfnTMvNpxOEYg1X2ut0+v8PJOfDfEe/lv7kR+jpf+Whvu/tzF/k/+l9jm/y1/Q+3&#xA;9jR06btct939uP8AJ/8AS+z9q/y2P5n2/sd+jZv+Wk/d/bj/ACf/AEvs/av8tj+Z9v7Hfo2b/lpP&#xA;3f24/wAn/wBL7P2r/LY/mfb+x36Nm/5aT939uP8AJ/8AS+z9q/y2P5n2/sd+jZv+Wk/d/bj/ACf/&#xA;AEvs/av8tj+Z9v7Gv0ZN/wAtLfcf64/yf/S+z9q/y2P5n2/sd+jJv+WlvuP/ADVj/J/9L7P2p/ls&#xA;fzPt/YjbIS20LRmQycm5VNR2p0rko6ADmbcPUdpHIbEa+39Tmihaf6wY1M/Hh6vEcuNa8eXWm+Zc&#xA;MMI8g4U885CiTXd0+S/LWlAapo1pqPD6wqNw6ckRz9BYVGVZY5D9E5Q9zm6TVjDfpEvfbHh+WWjG&#xA;WV2ubjjI5dUQooXluRurd65s8XaGSEIx2NCrPVnPtCRNgAI3Svy50aG8DRtNPK44oszR8QetRRF3&#xA;zH1mqnmhRJiP6NhOPtDIDsIn3hm1t5Wu441QyqFHTkzM36s10MsYChZ97RlEpy4jQ92yIXyw/wC1&#xA;cAfJK/xGH8z5MPB81RfLMP7U7H5AD+uR/MnuT4IVV8t2I6vIfpA/hg/MyT4IVU0LTV6xlvmzfwIy&#xA;JzyT4UURHp9jH9iBAfEgE/ecgckj1ZCARAAGw6ZBk7FXYq7FXYq7FXYq7FXYq7FVkwj9JjIvNACS&#xA;tOVae2Ec0FiF7JbyXBa3iMUf8h8fH2zYwBA3LiSIvZQybF2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;tVZjxUFiewFTgJSyHRI9UQn6xyFvT4Vk+1X2ruMw85h05uRjEuqb5jtrsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVUZrO1m3liRz4kCv35ITI5FBiChX0LTW6RlP9Vj/ABrlgzyYHFFRby3Zn7Mk&#xA;i/SD/DJDUyR4IU28sx/s3BHzUH+IyX5k9yPB81M+WG7XAPzSn8cP5nyR4Pmt/wAMz/7+X7jh/Mju&#xA;R4JW/wCGrr/fqfj/AEx/MjuXwS4eWrqu8qU+n+mP5kdy+CV3+GZ/9/L9xx/MjuXwSuHlh673Ap/q&#xA;/wBuD8z5J8HzXr5YT9q4J+S0/icH5nyT4PmqL5atP2pZD8uI/gcj+ZPcnwQrJ5f05eqs3zY/wpkT&#xA;qJJ8IK8elacn2YFP+t8X/Eq5E5ZHqkQHciEjjQURQo8AAP1ZAm2dLsCuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2Kv/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:7a62bb86-eaed-41c7-b311-6a5e994a50c1"
    stRef:documentID="xmp.did:da977b9e-d6dc-8d46-931e-2ab2513efabb"
    stRef:originalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:da977b9e-d6dc-8d46-931e-2ab2513efabb"
      stEvt:when="2021-12-28T19:42:48+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8d51d3f7-71cb-1841-b173-92dd20a27fd4"
      stEvt:when="2022-01-01T15:33:59+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:498247d5-ecf6-e24c-8866-21d028c47411"
      stEvt:when="2022-01-30T11:32:43+03:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="2600.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Р‘РµР»С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Р§РµСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РєСЂР°СЃРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р¶РµР»С‚С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р·РµР»РµРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РіРѕР»СѓР±РѕР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB СЃРёРЅРёР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB РїСѓСЂРїСѓСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=193 G=39 B=45"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="193"
         xmpG:green="39"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=237 G=28 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=241 G=90 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=247 G=147 B=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="147"
         xmpG:blue="30"/>
        <rdf:li
         xmpG:swatchName="R=251 G=176 B=59"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="59"/>
        <rdf:li
         xmpG:swatchName="R=252 G=238 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="252"
         xmpG:green="238"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=217 G=224 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="217"
         xmpG:green="224"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=140 G=198 B=63"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=57 G=181 B=74"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="R=0 G=146 B=69"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="146"
         xmpG:blue="69"/>
        <rdf:li
         xmpG:swatchName="R=0 G=104 B=55"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="55"/>
        <rdf:li
         xmpG:swatchName="R=34 G=181 B=115"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="34"
         xmpG:green="181"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="R=0 G=169 B=157"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="169"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="R=41 G=171 B=226"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="41"
         xmpG:green="171"
         xmpG:blue="226"/>
        <rdf:li
         xmpG:swatchName="R=0 G=113 B=188"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="113"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=46 G=49 B=146"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="R=27 G=20 B=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="20"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=102 G=45 B=145"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="R=147 G=39 B=143"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="R=158 G=0 B=93"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="0"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=212 G=20 B=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="212"
         xmpG:green="20"
         xmpG:blue="90"/>
        <rdf:li
         xmpG:swatchName="R=237 G=30 B=121"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="30"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=199 G=178 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="199"
         xmpG:green="178"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=153 G=134 B=117"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="134"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=115 G=99 B=87"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="115"
         xmpG:green="99"
         xmpG:blue="87"/>
        <rdf:li
         xmpG:swatchName="R=83 G=71 B=65"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="83"
         xmpG:green="71"
         xmpG:blue="65"/>
        <rdf:li
         xmpG:swatchName="R=198 G=156 B=109"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="198"
         xmpG:green="156"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=166 G=124 B=82"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="166"
         xmpG:green="124"
         xmpG:blue="82"/>
        <rdf:li
         xmpG:swatchName="R=140 G=98 B=57"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="98"
         xmpG:blue="57"/>
        <rdf:li
         xmpG:swatchName="R=117 G=76 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=96 G=56 B=19"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="56"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="R=66 G=33 B=11"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="66"
         xmpG:green="33"
         xmpG:blue="11"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=51 G=51 B=51"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="51"
         xmpG:green="51"
         xmpG:blue="51"/>
        <rdf:li
         xmpG:swatchName="R=77 G=77 B=77"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="77"
         xmpG:green="77"
         xmpG:blue="77"/>
        <rdf:li
         xmpG:swatchName="R=102 G=102 B=102"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="102"
         xmpG:blue="102"/>
        <rdf:li
         xmpG:swatchName="R=128 G=128 B=128"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="128"
         xmpG:blue="128"/>
        <rdf:li
         xmpG:swatchName="R=153 G=153 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="153"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=179 G=179 B=179"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="179"
         xmpG:green="179"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=230 G=230 B=230"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="230"
         xmpG:blue="230"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
        <rdf:li
         xmpG:swatchName="R=136 G=168 B=13"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="136"
         xmpG:green="168"
         xmpG:blue="13"/>
        <rdf:li
         xmpG:swatchName="R=127 G=71 B=221"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="71"
         xmpG:blue="221"/>
        <rdf:li
         xmpG:swatchName="R=251 G=174 B=23"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="174"
         xmpG:blue="23"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                     
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2600 2000 li
2600 0 li
cp
clp
2600 2000 mo
0 2000 li
0 0 li
2600 0 li
2600 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1239.53 110.626 mo
1226.19 103.65 1212.29 98.88 1198.23 96.4503 cv
1200.24 85.5124 li
1215.5 88.1501 1230.55 93.3095 1244.96 100.847 cv
1239.53 110.626 li
cp
1114.43 110.633 mo
1108.26 101.276 li
1121.82 92.8534 1136.77 87.3761 1152.68 84.9982 cv
1154.42 95.978 li
1140.1 98.1192 1126.64 103.05 1114.43 110.633 cv
cp
1306.35 167.823 mo
1296.34 155.654 1286.02 144.874 1275.65 135.783 cv
1283.33 127.543 li
1294.15 137.036 1304.91 148.258 1315.3 160.895 cv
1306.35 167.823 li
cp
1058.98 176.314 mo
1048.71 171.397 li
1056.23 156.617 1064.56 143.548 1073.49 132.553 cv
1082.48 139.428 li
1074.05 149.816 1066.14 162.226 1058.98 176.314 cv
cp
1355.45 242.252 mo
1347.92 228.491 1340.23 215.572 1332.59 203.855 cv
1342.27 197.915 li
1350.06 209.869 1357.9 223.033 1365.57 237.042 cv
1355.45 242.252 li
cp
1028.97 259.547 mo
1017.86 256.854 li
1021.85 241.341 1026.26 226.729 1030.95 213.422 cv
1041.78 217.016 li
1037.2 230.027 1032.88 244.336 1028.97 259.547 cv
cp
1394.22 322.956 mo
1388.07 308.597 1381.87 294.858 1375.79 282.123 cv
1386.18 277.454 li
1392.32 290.322 1398.59 304.197 1404.8 318.691 cv
1394.22 322.956 li
cp
1011.76 347.015 mo
1000.43 345.426 li
1002.74 329.872 1005.29 314.914 1007.99 300.967 cv
1019.25 303.021 li
1016.57 316.814 1014.05 331.615 1011.76 347.015 cv
cp
1427.17 406.308 mo
1421.64 391.324 1416.43 377.627 1411.23 364.435 cv
1421.93 360.471 li
1427.15 373.736 1432.39 387.504 1437.95 402.561 cv
1427.17 406.308 li
cp
1001.34 435.797 mo
989.937 434.815 li
991.364 419.227 992.916 404.174 994.551 390.072 cv
1005.93 391.314 li
1004.3 405.33 1002.76 420.296 1001.34 435.797 cv
cp
2027.1 454.539 mo
2012.92 448.735 1998.57 445.144 1984.44 443.863 cv
1985.5 432.801 li
2000.8 434.188 2016.29 438.057 2031.55 444.303 cv
2027.1 454.539 li
cp
1902.17 468.149 mo
1895.61 459.046 li
1909.69 449.487 1923.91 442.408 1937.88 438.006 cv
1941.42 448.572 li
1928.53 452.634 1915.32 459.221 1902.17 468.149 cv
cp
1457.18 490.978 mo
1451.49 474.448 1446.79 460.971 1442.41 448.562 cv
1453.24 444.961 li
1457.63 457.396 1462.34 470.898 1468.04 487.454 cv
1457.18 490.978 li
cp
2099.73 504.815 mo
2088.71 493.858 2077.29 484.185 2065.8 476.068 cv
2072.55 467.088 li
2084.55 475.57 2096.45 485.653 2107.92 497.056 cv
2099.73 504.815 li
cp
536.086 522.774 mo
521.798 515.875 507.744 511.472 494.315 509.687 cv
495.869 498.68 li
510.535 500.63 525.782 505.389 541.187 512.828 cv
536.086 522.774 li
cp
994.679 525.1 mo
983.249 524.439 li
984.24 508.291 985.225 493.626 986.258 479.607 cv
997.679 480.4 li
996.649 494.375 995.667 508.996 994.679 525.1 cv
cp
1837.59 529.468 mo
1828.69 522.473 li
1839.43 509.618 1849.61 498.556 1859.8 488.656 cv
1867.9 496.507 li
1857.99 506.133 1848.07 516.915 1837.59 529.468 cv
cp
412.577 532.866 mo
405.632 524.033 li
419.306 513.913 433.537 506.614 447.93 502.341 cv
451.281 512.964 li
438.19 516.851 425.168 523.547 412.577 532.866 cv
cp
2154.75 574.749 mo
2146.55 561.759 2137.95 549.473 2129.18 538.233 cv
2138.32 531.531 li
2147.3 543.059 2156.12 555.647 2164.51 568.943 cv
2154.75 574.749 li
cp
608.143 575.224 mo
596.441 564.168 584.933 554.402 573.942 546.196 cv
580.924 537.392 li
592.266 545.859 604.112 555.909 616.131 567.263 cv
608.143 575.224 li
cp
1486.54 576.001 mo
1481.29 561.071 1476.13 546.133 1471.79 533.489 cv
1482.65 529.973 li
1486.99 542.599 1492.13 557.514 1497.37 572.412 cv
1486.54 576.001 li
cp
353.79 598.603 mo
344.139 592.624 li
353.137 578.951 362.414 566.603 371.714 555.922 cv
380.461 563.091 li
371.488 573.396 362.516 585.344 353.79 598.603 cv
cp
1784.04 601.738 mo
1774.49 595.613 li
1784.05 581.568 1792.61 569.418 1800.64 558.471 cv
1809.97 564.916 li
1802.01 575.756 1793.53 587.801 1784.04 601.738 cv
cp
989.759 614.617 mo
978.323 614.058 li
979.094 599.216 979.861 584.366 980.678 569.255 cv
992.113 569.838 li
991.296 584.94 990.529 599.782 989.759 614.617 cv
cp
669.192 641.441 mo
658.802 628.928 649.131 617.791 639.626 607.394 cv
648.192 600.022 li
657.818 610.552 667.604 621.82 678.109 634.471 cv
669.192 641.441 li
cp
2196.34 653.566 mo
2190.18 639.653 2183.67 626.138 2176.98 613.397 cv
2187.19 608.356 li
2193.99 621.313 2200.61 635.049 2206.86 649.183 cv
2196.34 653.566 li
cp
1518.21 660.495 mo
1513.02 647.873 1507.66 634.102 1501.83 618.395 cv
1512.6 614.626 li
1518.39 630.216 1523.71 643.874 1528.85 656.38 cv
1518.21 660.495 li
cp
1733.82 676.924 mo
1724.25 670.82 li
1732.39 658.818 1740.79 646.101 1749.3 633.254 cv
1758.93 639.26 li
1750.41 652.14 1741.99 664.867 1733.82 676.924 cv
cp
311.303 676.927 mo
300.827 672.442 li
307.113 658.629 313.811 645.066 320.929 631.802 cv
331.082 636.938 li
324.078 649.988 317.489 663.334 311.303 676.927 cv
cp
984.67 704.276 mo
973.243 703.558 li
974.111 690.542 974.995 675.913 975.943 658.834 cv
987.377 659.432 li
986.426 676.551 985.541 691.219 984.67 704.276 cv
cp
724.938 712.532 mo
714.462 698.642 705.732 687.237 697.463 676.643 cv
706.591 669.937 li
714.899 680.58 723.665 692.031 734.179 705.972 cv
724.938 712.532 li
cp
2227.81 736.964 mo
2223.2 722.57 2218.28 708.4 2213.18 694.848 cv
2223.94 691.041 li
2229.1 704.76 2234.08 719.101 2238.75 733.667 cv
2227.81 736.964 li
cp
1559.09 741.883 mo
1551.68 730.792 1544.34 717.731 1536.64 701.953 cv
1546.99 697.201 li
1554.47 712.528 1561.57 725.167 1568.7 735.841 cv
1559.09 741.883 li
cp
1678.27 749.523 mo
1669.86 741.986 li
1678.54 732.863 1687.85 721.61 1698.31 707.582 cv
1707.59 714.096 li
1696.86 728.485 1687.27 740.073 1678.27 749.523 cv
cp
279.516 760.114 mo
268.566 756.865 li
273.115 742.43 278.106 728.074 283.401 714.195 cv
294.139 718.051 li
288.921 731.731 284.001 745.883 279.516 760.114 cv
cp
1617.65 784.05 mo
1608.74 784.05 1599.99 781.466 1591.65 776.368 cv
1597.75 766.969 li
1610.28 774.64 1622.6 774.657 1635.9 768.539 cv
1640.83 778.567 li
1632.96 782.206 1625.17 784.05 1617.65 784.05 cv
cp
779.353 784.964 mo
770.046 772.769 760.392 759.877 752.074 748.752 cv
761.343 742.228 li
769.645 753.333 779.279 766.197 788.556 778.353 cv
779.353 784.964 li
cp
976.356 793.994 mo
964.999 792.576 li
966.758 779.315 968.334 764.794 969.818 748.181 cv
981.225 749.141 li
979.728 765.908 978.135 780.579 976.356 793.994 cv
cp
2251.33 822.95 mo
2247.94 808.277 2244.29 793.731 2240.46 779.715 cv
2251.53 776.872 li
2255.39 791.024 2259.08 805.709 2262.51 820.52 cv
2251.33 822.95 li
cp
257.486 846.322 mo
246.245 844.205 li
249.211 829.377 252.567 814.591 256.22 800.259 cv
267.336 802.926 li
263.729 817.077 260.414 831.677 257.486 846.322 cv
cp
837.199 855.433 mo
828.077 845.578 818.329 834.235 807.398 820.757 cv
816.396 813.887 li
827.173 827.174 836.764 838.336 845.718 848.01 cv
837.199 855.433 li
cp
953.89 882.46 mo
943.693 877.407 li
948.935 867.449 953.568 853.629 957.466 836.333 cv
968.652 838.705 li
964.487 857.189 959.659 871.501 953.89 882.46 cv
cp
914.164 908.892 mo
898.254 906.458 886.745 899.431 870.804 887.296 cv
878.041 878.687 li
892.006 889.29 902.093 895.65 915.384 897.845 cv
914.164 908.892 li
cp
2268.36 910.46 mo
2265.98 895.634 2263.36 880.864 2260.59 866.561 cv
2271.84 864.505 li
2274.64 878.922 2277.28 893.808 2279.68 908.748 cv
2268.36 910.46 li
cp
244.263 934.297 mo
232.87 933.186 li
234.425 918.163 236.321 903.148 238.506 888.556 cv
249.837 890.153 li
247.677 904.583 245.801 919.435 244.263 934.297 cv
cp
2279.92 998.874 mo
2278.39 983.954 2276.66 969.052 2274.77 954.582 cv
2286.13 953.188 li
2288.03 967.756 2289.77 982.757 2291.31 997.774 cv
2279.92 998.874 li
cp
238.822 1023.11 mo
227.374 1022.89 li
227.693 1007.81 228.307 992.701 229.201 977.993 cv
240.632 978.646 li
239.746 993.214 239.137 1008.17 238.822 1023.11 cv
cp
2286.76 1087.79 mo
2285.98 1072.87 2285.01 1057.9 2283.89 1043.29 cv
2295.31 1042.46 li
2296.44 1057.16 2297.41 1072.22 2298.2 1087.22 cv
2286.76 1087.79 li
cp
228.761 1112.69 mo
228.002 1097.65 227.498 1082.55 227.264 1067.81 cv
238.713 1067.64 li
238.945 1082.26 239.445 1097.23 240.197 1112.15 cv
228.761 1112.69 li
cp
2289.47 1176.96 mo
2289.34 1162.01 2289.05 1147.01 2288.6 1132.35 cv
2300.05 1132.03 li
2300.49 1146.76 2300.79 1161.84 2300.92 1176.86 cv
2289.47 1176.96 li
cp
236.18 1202.2 mo
234.473 1187.25 232.987 1172.21 231.764 1157.51 cv
243.176 1156.61 li
244.391 1171.21 245.866 1186.14 247.561 1200.98 cv
236.18 1202.2 li
cp
2299.96 1266.51 mo
2288.51 1266.19 li
2288.96 1251.26 2289.27 1236.25 2289.43 1221.57 cv
2300.88 1221.69 li
2300.72 1236.43 2300.41 1251.51 2299.96 1266.51 cv
cp
248.932 1291.12 mo
246.386 1276.32 244.029 1261.39 241.926 1246.75 cv
253.266 1245.22 li
255.355 1259.76 257.697 1274.58 260.226 1289.29 cv
248.932 1291.12 li
cp
2295.67 1356.05 mo
2284.25 1355.35 li
2285.22 1340.49 2286.07 1325.49 2286.77 1310.79 cv
2298.21 1311.3 li
2297.5 1326.07 2296.65 1341.13 2295.67 1356.05 cv
cp
266.491 1379.24 mo
263.184 1364.62 260.037 1349.83 257.138 1335.29 cv
268.38 1333.18 li
271.261 1347.63 274.388 1362.33 277.675 1376.86 cv
266.491 1379.24 li
cp
2288.38 1445.4 mo
2276.99 1444.35 li
2278.43 1429.48 2279.78 1414.51 2280.97 1399.88 cv
2292.39 1400.76 li
2291.19 1415.45 2289.84 1430.47 2288.38 1445.4 cv
cp
288.506 1466.41 mo
284.498 1452.06 280.612 1437.43 276.953 1422.95 cv
288.075 1420.31 li
291.711 1434.7 295.574 1449.24 299.558 1463.51 cv
288.506 1466.41 li
cp
2278.35 1534.48 mo
2266.99 1533.11 li
2268.88 1518.3 2270.67 1503.38 2272.31 1488.77 cv
2283.7 1489.97 li
2282.04 1504.64 2280.25 1519.61 2278.35 1534.48 cv
cp
314.913 1552.45 mo
310.232 1538.53 305.6 1524.11 301.147 1509.59 cv
312.122 1506.42 li
316.547 1520.85 321.148 1535.18 325.799 1549 cv
314.913 1552.45 li
cp
.862745 .901961 1 rgb
f
115.176 1617.1 mo
115.176 1617.1 100.22 1682.86 169.067 1700.42 cv
263.235 1724.44 795.664 1788.89 661.38 1836.85 cv
585.576 1863.93 720.405 1899.36 1089.62 1912.89 cv
1458.84 1926.43 2092.39 1873.39 1879.34 1794.91 cv
1666.29 1716.43 2536.75 1780.34 2483.88 1617.1 cv
115.176 1617.1 li
cp
.764706 .839216 .956863 rgb
f
533.112 1612.48 mo
533.112 1612.48 265.458 879.64 466.144 723.723 cv
600.284 619.507 731.246 881.887 900.95 760.351 cv
1052.03 652.149 955.315 399.339 1102.41 277.454 cv
1283.33 127.543 1585.54 871.821 1797.85 756.365 cv
2131.82 574.749 2335.99 861.256 2104.08 1613.82 cv
533.112 1612.48 li
cp
.831373 .882353 .988235 rgb
f
2357.92 1301.96 mo
2262.9 1288.3 2271.5 1493.66 2136.06 1493.66 cv
2012.23 1493.66 1945.96 1034.83 1810.07 1128.15 cv
1263.76 1503.32 1688.82 864.906 1321.48 852.427 cv
1155.37 846.784 1044.69 1018.63 1003.87 1322.89 cv
944.709 1597.95 807.497 1113.1 666.291 1158.18 cv
576.547 1186.83 586.825 1493.66 462.991 1493.66 cv
327.549 1493.66 336.471 1320.97 241.453 1334.64 cv
139.15 1349.35 115.176 1617.1 115.176 1617.1 cv
2483.88 1617.1 li
2483.88 1617.1 2460.22 1316.67 2357.92 1301.96 cv
cp
.933333 .968627 1 rgb
f
2266.77 1517.41 mo
2179.36 1511.57 2193.62 1564.34 2069.02 1564.34 cv
1955.09 1564.34 1958.22 1446.08 1881.99 1420.95 cv
1741.59 1374.66 1625.85 1608.91 1571.42 1491.35 cv
1468.04 1179.39 1166.53 1022.95 1027.43 1491.35 cv
973.004 1608.91 845.718 1399.13 716.866 1420.95 cv
637.552 1434.37 643.759 1564.34 529.834 1564.34 cv
405.231 1564.34 419.495 1511.57 332.081 1517.41 cv
237.965 1523.7 209.854 1617.1 209.854 1617.1 cv
2389 1617.1 li
2389 1617.1 2360.89 1523.7 2266.77 1517.41 cv
cp
.831373 .882353 .988235 rgb
f
1990.8 690.195 mo
1955.59 690.195 li
1955.59 742.506 li
1903.28 742.506 li
1903.28 777.721 li
1955.59 777.721 li
1955.59 830.033 li
1990.8 830.033 li
1990.8 777.721 li
2043.11 777.721 li
2043.11 742.506 li
1990.8 742.506 li
1990.8 690.195 li
cp
.282353 .403922 .666667 rgb
f
1427.46 603.124 mo
1427.46 638.339 li
1567.29 638.339 li
1567.29 603.124 li
1427.46 603.124 li
cp
f
255.88 1311.95 mo
255.88 1347.16 li
395.717 1347.16 li
395.717 1311.95 li
255.88 1311.95 li
cp
f
255.88 1364.95 mo
255.88 1400.16 li
395.717 1400.16 li
395.717 1364.95 li
255.88 1364.95 li
cp
f
1827.83 1464.91 mo
1835.98 1443 1837.67 1423.34 1826.43 1409.05 cv
1813.86 1393.07 1795.37 1400.93 1795.37 1400.93 cv
1795.37 1400.93 li
1795.37 1400.93 1786.72 1379 1770.68 1379 cv
1759.25 1379 1739.86 1389.75 1734.23 1409.05 cv
1729.88 1424.02 1707.53 1424.91 1705.85 1448.75 cv
1704.16 1472.6 1726.78 1482.24 1716.25 1503.43 cv
1707.81 1520.38 1718.78 1531.9 1741.54 1538.37 cv
1764.31 1544.83 1822.21 1540.9 1841.32 1517.85 cv
1860.44 1494.8 1819.15 1488.25 1827.83 1464.91 cv
cp
.54902 .258824 .145098 rgb
f
1829.38 1700.42 mo
1829.38 1700.42 1841.47 1709.58 1848.14 1711.24 cv
1857.08 1713.47 1878.21 1716.08 1882.54 1716.64 cv
1894.35 1718.15 1895.2 1729.04 1880.07 1730.08 cv
1880.07 1730.08 1845.13 1733.3 1845.13 1733.3 cv
1834.48 1733.44 1820.31 1726.05 1819.23 1725.76 cv
1800.71 1719.54 1811.66 1692.13 1829.38 1700.42 cv
cp
.976471 .576471 .439216 rgb
f
1657.12 1650.2 mo
1657.12 1650.2 1748.52 1634.27 1891.42 1649 cv
1891.42 1649 1815.11 1683.59 1772.77 1684.6 cv
1730.44 1685.61 1657.12 1650.2 1657.12 1650.2 cv
cp
.462745 .25098 .8 rgb
f
1757.49 1542.93 mo
1757.89 1542.71 1758.44 1542.37 1758.79 1542.14 cv
1758.8 1542.13 1758.81 1542.12 1758.82 1542.12 cv
1744.09 1556.59 1734.86 1575.23 1724.83 1593.53 cv
1718.04 1605.42 1705.84 1626.79 1725.35 1632.63 cv
1735.81 1632.61 1735.87 1648.6 1725.39 1648.65 cv
1723.38 1648.81 1721.24 1649 1719.24 1648.88 cv
1681.91 1646.61 1681.24 1603.92 1691.49 1576.8 cv
1700.99 1551.71 1712.16 1523.73 1734.29 1506.6 cv
1759.05 1489.77 1783.25 1527.58 1757.49 1542.93 cv
cp
.976471 .576471 .439216 rgb
f
1794.14 1542.93 mo
1793.75 1542.71 1793.2 1542.37 1792.84 1542.14 cv
1792.83 1542.13 1792.83 1542.12 1792.82 1542.12 cv
1807.54 1556.59 1816.78 1575.23 1826.8 1593.53 cv
1833.6 1605.42 1845.8 1626.79 1826.29 1632.63 cv
1815.82 1632.61 1815.77 1648.6 1826.25 1648.65 cv
1828.26 1648.81 1830.39 1649 1832.4 1648.88 cv
1869.72 1646.61 1870.4 1603.92 1860.15 1576.8 cv
1850.65 1551.71 1839.47 1523.73 1817.34 1506.6 cv
1792.58 1489.77 1768.39 1527.58 1794.14 1542.93 cv
cp
f
1739.98 1503.18 mo
1735.49 1530.93 li
1729.63 1567.16 li
1728.82 1572.16 li
1724.04 1572.11 1719.43 1571.43 1715.25 1570.47 cv
1704.33 1567.95 1696.4 1563.52 1696.4 1563.52 cv
1696.4 1563.52 1697.21 1561.08 1698.72 1557.24 cv
1701.95 1548.99 1708.36 1534.24 1716.74 1523.24 cv
1729.01 1507.13 1739.98 1503.18 1739.98 1503.18 cv
cp
.921569 .337255 .282353 rgb
f
1856.96 1565.44 mo
1856.96 1565.44 1849.15 1569.07 1837.93 1571.08 cv
1832.02 1572.14 1825.17 1572.76 1818.02 1572.16 cv
1817.78 1567.17 li
1817.64 1564.25 li
1814.69 1502.38 li
1814.69 1502.38 1839.98 1506.75 1855.08 1558.53 cv
1855.73 1560.75 1856.35 1563.05 1856.96 1565.44 cv
cp
f
1698.72 1557.24 mo
1698.72 1557.24 1709.89 1562.71 1729.63 1567.16 cv
1728.82 1572.16 li
1724.04 1572.11 1719.43 1571.43 1715.25 1570.47 cv
1704.33 1567.95 1696.4 1563.52 1696.4 1563.52 cv
1696.4 1563.52 1697.21 1561.08 1698.72 1557.24 cv
cp
.807843 .223529 .196078 rgb
f
1856.96 1565.44 mo
1856.96 1565.44 1849.15 1569.07 1837.93 1571.08 cv
1832.02 1572.14 1825.17 1572.76 1818.02 1572.16 cv
1817.78 1567.17 li
1832.03 1565.21 1845.3 1562.37 1855.08 1558.53 cv
1855.73 1560.75 1856.35 1563.05 1856.96 1565.44 cv
cp
f
1735.49 1522.27 mo
1735.49 1530.93 li
1728.82 1572.16 li
1724.04 1572.11 1719.43 1571.43 1715.25 1570.47 cv
1715.7 1566.11 1716.97 1558.68 1720.62 1551.83 cv
1726.23 1541.27 1735.49 1522.27 1735.49 1522.27 cv
cp
f
1837.93 1571.08 mo
1832.02 1572.14 1825.17 1572.76 1818.02 1572.16 cv
1817.64 1564.25 li
1819.11 1522.27 li
1819.11 1522.27 1823.58 1537.43 1830.68 1549.14 cv
1835.37 1556.88 1837.22 1565.87 1837.93 1571.08 cv
cp
f
1845.95 1642.64 mo
1824.73 1652.45 1800.63 1656.69 1777.79 1656.69 cv
1754.95 1656.69 1729.04 1651.92 1707.81 1642.11 cv
1708.69 1622.54 1729.81 1608.5 1720.09 1584.83 cv
1715.49 1573.65 1720.89 1559.56 1725.17 1550.39 cv
1726.14 1548.32 1727.05 1546.5 1727.77 1545.01 cv
1734.23 1531.8 1739.99 1503.2 1739.99 1503.2 cv
1743.65 1501.62 li
1754.64 1497.45 1766.03 1497.14 1766.03 1497.14 cv
1789.55 1497.14 li
1789.55 1497.14 1800.24 1497.05 1810.81 1500.81 cv
1814.7 1502.38 li
1815.98 1503.46 1819.96 1531.24 1825.02 1545.57 cv
1828.49 1555.39 1837.64 1569.16 1832.14 1585.95 cv
1823.27 1613.03 1845.19 1625.63 1845.95 1642.64 cv
cp
.921569 .337255 .282353 rgb
f
1789.55 1494.26 mo
1789.55 1469.37 li
1766.03 1469.37 li
1766.03 1494.43 li
1766.03 1494.43 1749.81 1499.28 1743.65 1501.62 cv
1743.86 1502.02 1757.98 1527.33 1777.79 1534.88 cv
1777.79 1534.88 1802.78 1520.97 1810.81 1500.81 cv
1805.11 1498.78 1789.55 1494.26 1789.55 1494.26 cv
cp
.976471 .576471 .439216 rgb
f
1815.82 1445.91 mo
1814.78 1450.87 1810.69 1454.21 1806.7 1453.36 cv
1802.71 1452.52 1800.32 1447.82 1801.37 1442.86 cv
1802.42 1437.9 1806.51 1434.56 1810.5 1435.4 cv
1814.49 1436.25 1816.87 1440.95 1815.82 1445.91 cv
cp
f
1812.46 1448.25 mo
1812.4 1448.25 1812.35 1448.24 1812.29 1448.23 cv
1811.98 1448.13 1811.81 1447.81 1811.91 1447.51 cv
1812.94 1444.1 1812.91 1441.76 1811.8 1440.73 cv
1810.57 1439.6 1808.12 1440.2 1807.27 1440.53 cv
1806.98 1440.65 1806.64 1440.5 1806.52 1440.21 cv
1806.41 1439.91 1806.55 1439.57 1806.85 1439.46 cv
1807 1439.4 1810.58 1438.03 1812.58 1439.88 cv
1814.06 1441.25 1814.21 1443.93 1813.01 1447.84 cv
1812.93 1448.09 1812.71 1448.25 1812.46 1448.25 cv
cp
.756863 .384314 .337255 rgb
f
1807.06 1447.44 mo
1806.99 1447.44 1806.91 1447.43 1806.83 1447.4 cv
1806.54 1447.27 1806.41 1446.93 1806.53 1446.64 cv
1806.61 1446.44 1808.66 1441.76 1813.07 1441.47 cv
1813.38 1441.44 1813.67 1441.69 1813.69 1442 cv
1813.71 1442.32 1813.47 1442.6 1813.15 1442.62 cv
1809.45 1442.86 1807.61 1447.05 1807.59 1447.09 cv
1807.5 1447.31 1807.29 1447.44 1807.06 1447.44 cv
cp
f
1741.15 1445.91 mo
1742.2 1450.87 1746.29 1454.21 1750.28 1453.36 cv
1754.27 1452.52 1756.65 1447.82 1755.6 1442.86 cv
1754.55 1437.9 1750.47 1434.56 1746.48 1435.4 cv
1742.49 1436.25 1740.1 1440.95 1741.15 1445.91 cv
cp
.976471 .576471 .439216 rgb
f
1744.52 1448.25 mo
1744.27 1448.25 1744.04 1448.09 1743.97 1447.84 cv
1742.77 1443.93 1742.91 1441.25 1744.39 1439.88 cv
1746.4 1438.03 1749.97 1439.4 1750.12 1439.46 cv
1750.42 1439.57 1750.57 1439.91 1750.45 1440.21 cv
1750.34 1440.5 1750 1440.65 1749.7 1440.53 cv
1749.67 1440.52 1746.65 1439.37 1745.18 1440.73 cv
1744.07 1441.76 1744.03 1444.1 1745.07 1447.51 cv
1745.16 1447.81 1744.99 1448.13 1744.69 1448.23 cv
1744.63 1448.24 1744.57 1448.25 1744.52 1448.25 cv
cp
.756863 .384314 .337255 rgb
f
1749.91 1447.44 mo
1749.69 1447.44 1749.48 1447.31 1749.38 1447.09 cv
1749.36 1447.05 1747.53 1442.86 1743.83 1442.62 cv
1743.51 1442.6 1743.27 1442.32 1743.29 1442 cv
1743.31 1441.69 1743.59 1441.44 1743.9 1441.47 cv
1748.32 1441.76 1750.36 1446.44 1750.45 1446.64 cv
1750.57 1446.93 1750.43 1447.27 1750.14 1447.4 cv
1750.07 1447.43 1749.99 1447.44 1749.91 1447.44 cv
cp
f
1789.55 1488.12 mo
1789.55 1475.65 li
1766.03 1475.65 li
1766.03 1488.12 li
1766.03 1488.12 1777.79 1494.3 1789.55 1488.12 cv
cp
.898039 .490196 .380392 rgb
f
1749.03 1459.19 mo
1750.1 1494.36 1804.82 1495.32 1807.71 1460.52 cv
1808.3 1447.74 1804.2 1443.66 1802.53 1427.74 cv
1799.48 1398.85 1758.42 1397.31 1754.73 1427.52 cv
1753.28 1439.44 1748.93 1448.28 1749.03 1459.19 cv
cp
.976471 .576471 .439216 rgb
f
1770.6 1441.49 mo
1770.99 1440.72 1770.68 1439.78 1769.91 1439.39 cv
1769.14 1439 1768.2 1439.31 1767.81 1440.08 cv
1767.42 1440.85 1767.73 1441.79 1768.5 1442.18 cv
1769.27 1442.57 1770.21 1442.26 1770.6 1441.49 cv
cp
.756863 .384314 .337255 rgb
f
1789.35 1441.53 mo
1789.74 1440.76 1789.43 1439.82 1788.66 1439.43 cv
1787.89 1439.04 1786.95 1439.34 1786.56 1440.11 cv
1786.17 1440.88 1786.48 1441.82 1787.25 1442.22 cv
1788.02 1442.61 1788.96 1442.3 1789.35 1441.53 cv
cp
f
1779.88 1455.1 mo
1779.27 1455.1 1778.67 1455.02 1778.14 1454.85 cv
1777.83 1454.75 1777.66 1454.41 1777.76 1454.1 cv
1777.86 1453.79 1778.19 1453.62 1778.5 1453.72 cv
1780.49 1454.36 1783.3 1453.36 1783.68 1452.46 cv
1783.82 1452.15 1783.39 1451.83 1783.01 1451.63 cv
1779.65 1449.81 1777.4 1443.46 1777.31 1443.19 cv
1777.2 1442.88 1777.36 1442.55 1777.67 1442.44 cv
1777.98 1442.33 1778.32 1442.49 1778.43 1442.8 cv
1778.45 1442.86 1780.62 1448.99 1783.57 1450.59 cv
1785.18 1451.46 1784.95 1452.51 1784.77 1452.93 cv
1784.23 1454.19 1781.96 1455.1 1779.88 1455.1 cv
cp
f
1780.01 1463.99 mo
1776.32 1463.99 1773.42 1462.48 1773.24 1462.39 cv
1772.95 1462.23 1772.84 1461.88 1772.99 1461.59 cv
1773.15 1461.3 1773.5 1461.19 1773.79 1461.34 cv
1773.85 1461.37 1780.03 1464.57 1785.51 1461.35 cv
1785.8 1461.19 1786.16 1461.28 1786.32 1461.57 cv
1786.49 1461.85 1786.39 1462.21 1786.11 1462.38 cv
1784.04 1463.59 1781.92 1463.99 1780.01 1463.99 cv
cp
f
1791.25 1409.05 mo
1791.25 1409.05 1787.74 1430.11 1752.84 1437.58 cv
1752.84 1437.58 1750.82 1419.43 1758.13 1409.05 cv
1765.43 1398.67 1785.31 1397.78 1791.25 1409.05 cv
cp
.54902 .258824 .145098 rgb
f
1791.25 1409.05 mo
1791.25 1409.05 1789.63 1429.09 1804.09 1437.63 cv
1804.09 1437.63 1807.79 1414.93 1791.25 1409.05 cv
cp
f
1739.98 1503.18 mo
1739.98 1503.18 1753.8 1531.8 1777.79 1539.86 cv
1777.79 1539.86 1804.45 1530.62 1814.7 1502.38 cv
1814.7 1502.38 1811.19 1500.33 1808.64 1500.09 cv
1808.64 1500.09 1797.82 1522.24 1777.79 1533.02 cv
1777.79 1533.02 1759.29 1524.33 1745.83 1500.85 cv
1745.83 1500.85 1742.64 1501.07 1739.98 1503.18 cv
cp
.807843 .223529 .196078 rgb
f
1847.17 1665 mo
1702.44 1665 li
1702.44 1580.38 li
1702.44 1578.46 1703.99 1576.91 1705.91 1576.91 cv
1843.7 1576.91 li
1845.62 1576.91 1847.17 1578.46 1847.17 1580.38 cv
1847.17 1665 li
cp
.0862745 .196078 .376471 rgb
f
1826.75 1734.74 mo
1826.44 1734.81 1823.16 1734.79 1817.67 1734.62 cv
1811.64 1734.42 1802.94 1734.02 1792.56 1733.31 cv
1791.91 1733.27 1791.26 1733.22 1790.61 1733.17 cv
1788.06 1733 1785.43 1732.8 1782.72 1732.58 cv
1779.36 1732.31 1775.88 1732.01 1772.3 1731.68 cv
1711.15 1725.97 1621.75 1710.46 1632.72 1670.3 cv
1647.52 1616.12 1793.96 1679.43 1828.2 1695.07 cv
1832.77 1697.15 1835.33 1698.39 1835.33 1698.39 cv
1842.2 1718.87 1826.75 1734.74 1826.75 1734.74 cv
cp
.576471 .345098 .878431 rgb
f
1831.65 1713.09 mo
1828.65 1724.34 li
1790.61 1733.17 li
1788.06 1733 1785.43 1732.8 1782.72 1732.58 cv
1779.36 1732.31 1775.88 1732.01 1772.3 1731.68 cv
1769.42 1723.13 li
1831.65 1713.09 li
cp
.462745 .25098 .8 rgb
f
1826.75 1734.74 mo
1826.44 1734.81 1823.16 1734.79 1817.67 1734.62 cv
1817.67 1734.62 1834.65 1718.4 1828.2 1695.07 cv
1832.77 1697.15 1835.33 1698.39 1835.33 1698.39 cv
1842.2 1718.87 1826.75 1734.74 1826.75 1734.74 cv
cp
f
1721.57 1705.47 mo
1721.57 1705.47 1710.42 1715.75 1703.94 1718.04 cv
1695.26 1721.12 1674.47 1725.74 1670.22 1726.71 cv
1658.6 1729.35 1658.8 1740.27 1673.96 1739.85 cv
1673.96 1739.85 1709.05 1739.71 1709.05 1739.71 cv
1719.67 1738.84 1733.06 1730.12 1734.11 1729.73 cv
1751.95 1721.76 1738.43 1695.52 1721.57 1705.47 cv
cp
.976471 .576471 .439216 rgb
f
1736.52 1738.59 mo
1731.67 1739.21 1728.78 1739.5 1728.48 1739.47 cv
1728.48 1739.47 1711.59 1725.15 1716.46 1704.1 cv
1716.46 1704.1 1718.95 1702.59 1723.39 1700.02 cv
1756.24 1681.03 1895.56 1604.3 1915.45 1656.73 cv
1935.04 1708.36 1774.74 1733.74 1736.52 1738.59 cv
cp
.576471 .345098 .878431 rgb
f
1736.52 1738.59 mo
1731.67 1739.21 1728.78 1739.5 1728.48 1739.47 cv
1728.48 1739.47 1711.59 1725.15 1716.46 1704.1 cv
1716.46 1704.1 1718.91 1702.28 1723.39 1700.02 cv
1723.39 1700.02 1720.39 1722.28 1736.52 1738.59 cv
cp
.462745 .25098 .8 rgb
f
1722.11 1701.75 mo
1721.95 1701.74 1721.8 1701.65 1721.72 1701.5 cv
1721.58 1701.27 1721.66 1700.97 1721.9 1700.83 cv
1722.31 1700.59 1763.16 1676.91 1781.18 1668.6 cv
1781.42 1668.48 1781.72 1668.59 1781.83 1668.84 cv
1781.94 1669.09 1781.84 1669.38 1781.59 1669.5 cv
1763.61 1677.78 1722.8 1701.45 1722.39 1701.68 cv
1722.3 1701.74 1722.2 1701.76 1722.11 1701.75 cv
cp
f
1792.92 1436.29 mo
1792.79 1436.29 1792.67 1436.25 1792.56 1436.17 cv
1788.2 1432.77 1784.1 1434.14 1783.93 1434.2 cv
1783.63 1434.31 1783.29 1434.14 1783.18 1433.84 cv
1783.07 1433.53 1783.23 1433.19 1783.54 1433.08 cv
1783.74 1433.01 1788.4 1431.43 1793.29 1435.24 cv
1793.54 1435.44 1793.59 1435.81 1793.39 1436.07 cv
1793.27 1436.22 1793.1 1436.29 1792.92 1436.29 cv
cp
.756863 .384314 .337255 rgb
f
1765.53 1436.3 mo
1765.37 1436.3 1765.2 1436.23 1765.08 1436.1 cv
1764.87 1435.85 1764.9 1435.48 1765.15 1435.26 cv
1765.3 1435.14 1768.9 1432.12 1775.11 1433.37 cv
1775.43 1433.43 1775.64 1433.74 1775.58 1434.06 cv
1775.51 1434.38 1775.2 1434.59 1774.88 1434.53 cv
1769.26 1433.4 1765.95 1436.14 1765.92 1436.16 cv
1765.8 1436.26 1765.67 1436.3 1765.53 1436.3 cv
cp
f
435.135 842.498 mo
355.182 842.498 290.135 907.544 290.135 987.498 cv
290.135 1067.45 355.182 1132.5 435.135 1132.5 cv
515.088 1132.5 580.135 1067.45 580.135 987.498 cv
580.135 907.544 515.088 842.498 435.135 842.498 cv
cp
435.135 1142.5 mo
349.668 1142.5 280.135 1072.96 280.135 987.498 cv
280.135 902.03 349.668 832.498 435.135 832.498 cv
520.602 832.498 590.135 902.03 590.135 987.498 cv
590.135 1072.96 520.602 1142.5 435.135 1142.5 cv
cp
.243137 .486275 .776471 rgb
f
453.852 856.44 mo
450.066 850.287 446.117 845.96 442.113 843.581 cv
446.2 836.704 li
451.328 839.752 456.195 844.981 460.665 852.248 cv
453.852 856.44 li
cp
416.231 856.747 mo
409.396 852.59 li
413.813 845.326 418.623 840.059 423.69 836.935 cv
427.889 843.744 li
423.908 846.199 419.986 850.574 416.231 856.747 cv
cp
467.888 891.542 mo
466.102 884.963 464.121 878.845 462 873.357 cv
469.462 870.473 li
471.682 876.218 473.75 882.601 475.609 889.446 cv
467.888 891.542 li
cp
402.284 891.902 mo
394.56 889.818 li
396.407 882.975 398.461 876.588 400.667 870.836 cv
408.137 873.702 li
406.029 879.198 404.06 885.322 402.284 891.902 cv
cp
475.358 929.342 mo
474.465 922.789 473.41 916.379 472.223 910.293 cv
480.074 908.761 li
481.291 914.997 482.371 921.558 483.285 928.262 cv
475.358 929.342 li
cp
394.862 929.713 mo
386.935 928.642 li
387.84 921.939 388.913 915.377 390.123 909.137 cv
397.976 910.659 li
396.795 916.75 395.748 923.161 394.862 929.713 cv
cp
478.725 967.883 mo
478.451 961.377 478.035 954.877 477.488 948.564 cv
485.457 947.873 li
486.015 954.304 486.439 960.923 486.718 967.546 cv
478.725 967.883 li
cp
391.53 968.258 mo
383.537 967.928 li
383.81 961.302 384.228 954.683 384.78 948.254 cv
392.75 948.938 li
392.21 955.249 391.799 961.749 391.53 968.258 cv
cp
486.728 1007.19 mo
478.735 1006.86 li
479 1000.49 479.135 993.973 479.135 987.498 cv
479.135 987.243 li
487.135 987.243 li
487.135 987.498 li
487.135 994.083 486.998 1000.71 486.728 1007.19 cv
cp
383.547 1007.32 mo
383.276 1000.83 383.137 994.208 383.135 987.626 cv
391.135 987.624 li
391.137 994.095 391.273 1000.61 391.54 1006.99 cv
383.547 1007.32 li
cp
483.319 1046.48 mo
475.391 1045.41 li
476.235 1039.18 476.948 1032.71 477.509 1026.18 cv
485.48 1026.87 li
484.907 1033.53 484.18 1040.13 483.319 1046.48 cv
cp
386.968 1046.6 mo
386.105 1040.25 385.376 1033.65 384.801 1026.99 cv
392.772 1026.31 li
393.335 1032.84 394.05 1039.3 394.896 1045.53 cv
386.968 1046.6 li
cp
475.676 1085.3 mo
467.954 1083.21 li
469.541 1077.34 470.994 1071.03 472.27 1064.46 cv
480.124 1065.98 li
478.81 1072.74 477.314 1079.24 475.676 1085.3 cv
cp
394.627 1085.42 mo
392.985 1079.36 391.486 1072.86 390.17 1066.11 cv
398.023 1064.58 li
399.302 1071.15 400.757 1077.46 402.349 1083.33 cv
394.627 1085.42 li
cp
460.805 1122.52 mo
453.977 1118.35 li
456.842 1113.66 459.572 1107.96 462.089 1101.41 cv
469.556 1104.28 li
466.866 1111.28 463.922 1117.41 460.805 1122.52 cv
cp
409.535 1122.63 mo
406.411 1117.53 403.458 1111.4 400.761 1104.4 cv
408.226 1101.52 li
410.749 1108.07 413.485 1113.77 416.356 1118.45 cv
409.535 1122.63 li
cp
435.135 1141.5 mo
431.328 1141.5 427.561 1140.39 423.942 1138.21 cv
428.068 1131.36 li
432.81 1134.21 437.548 1134.2 442.293 1131.31 cv
446.455 1138.14 li
442.796 1140.37 438.987 1141.5 435.135 1141.5 cv
cp
f
415.647 943.903 mo
415.312 935.91 li
421.788 935.639 428.414 935.5 435.007 935.498 cv
435.01 943.498 li
428.527 943.5 422.013 943.636 415.647 943.903 cv
cp
473.695 945.113 mo
467.384 944.572 460.884 944.161 454.375 943.892 cv
454.705 935.899 li
461.331 936.172 467.95 936.591 474.378 937.142 cv
473.695 945.113 li
cp
377.105 947.258 mo
376.028 939.331 li
382.384 938.467 388.982 937.739 395.64 937.164 cv
396.327 945.135 li
389.799 945.698 383.332 946.412 377.105 947.258 cv
cp
511.974 950.338 mo
505.883 949.158 499.472 948.11 492.919 947.225 cv
493.991 939.297 li
500.694 940.203 507.256 941.275 513.496 942.485 cv
511.974 950.338 li
cp
339.302 954.711 mo
337.21 946.99 li
343.268 945.348 349.766 943.849 356.525 942.533 cv
358.054 950.385 li
351.483 951.665 345.174 953.12 339.302 954.711 cv
cp
548.931 960.5 mo
543.435 958.391 537.311 956.422 530.73 954.646 cv
532.815 946.923 li
539.658 948.769 546.044 950.824 551.796 953.03 cv
548.931 960.5 li
cp
304.181 968.718 mo
300.001 961.897 li
305.102 958.772 311.236 955.82 318.234 953.123 cv
321.111 960.588 li
314.564 963.111 308.868 965.846 304.181 968.718 cv
cp
578.889 980.252 mo
576.435 976.271 572.06 972.349 565.887 968.594 cv
570.043 961.759 li
577.307 966.176 582.574 970.985 585.699 976.053 cv
578.889 980.252 li
cp
284.495 998.817 mo
282.266 995.158 281.136 991.35 281.135 987.498 cv
281.135 983.69 282.24 979.924 284.418 976.305 cv
291.273 980.43 li
289.854 982.787 289.135 985.165 289.135 987.498 cv
289.136 989.859 289.873 992.268 291.327 994.655 cv
284.495 998.817 li
cp
570.384 1013.03 mo
566.191 1006.21 li
572.346 1002.43 576.672 998.479 579.051 994.476 cv
585.928 998.563 li
582.881 1003.69 577.651 1008.56 570.384 1013.03 cv
cp
318.354 1021.92 mo
311.359 1019.23 305.223 1016.29 300.115 1013.17 cv
304.283 1006.34 li
308.979 1009.21 314.68 1011.94 321.225 1014.45 cv
318.354 1021.92 li
cp
533.187 1027.97 mo
531.089 1020.25 li
537.674 1018.46 543.793 1016.48 549.275 1014.36 cv
552.159 1021.83 li
546.42 1024.04 540.037 1026.11 533.187 1027.97 cv
cp
356.649 1032.49 mo
349.891 1031.17 343.392 1029.68 337.332 1028.04 cv
339.421 1020.32 li
345.295 1021.9 351.605 1023.36 358.175 1024.63 cv
356.649 1032.49 li
cp
494.371 1035.65 mo
493.29 1027.72 li
499.847 1026.83 506.256 1025.77 512.34 1024.59 cv
513.872 1032.44 li
507.639 1033.65 501.078 1034.73 494.371 1035.65 cv
cp
395.766 1037.84 mo
389.113 1037.27 382.514 1036.54 376.154 1035.68 cv
377.227 1027.75 li
383.46 1028.6 389.927 1029.31 396.451 1029.87 cv
395.766 1037.84 li
cp
455.086 1039.08 mo
454.749 1031.09 li
461.258 1030.81 467.758 1030.4 474.069 1029.85 cv
474.758 1037.82 li
468.331 1038.38 461.713 1038.8 455.086 1039.08 cv
cp
435.389 1039.5 mo
435.135 1039.5 li
428.545 1039.5 421.918 1039.36 415.438 1039.09 cv
415.77 1031.1 li
422.141 1031.36 428.656 1031.5 435.135 1031.5 cv
435.389 1031.5 li
435.389 1039.5 li
cp
f
437.135 846.998 mo
432.135 846.998 li
432.135 836.998 li
437.135 836.998 li
437.135 846.998 li
cp
437.135 866.998 mo
432.135 866.998 li
432.135 856.998 li
437.135 856.998 li
437.135 866.998 li
cp
437.135 886.998 mo
432.135 886.998 li
432.135 876.998 li
437.135 876.998 li
437.135 886.998 li
cp
437.135 906.998 mo
432.135 906.998 li
432.135 896.998 li
437.135 896.998 li
437.135 906.998 li
cp
437.135 926.998 mo
432.135 926.998 li
432.135 916.998 li
437.135 916.998 li
437.135 926.998 li
cp
437.135 946.998 mo
432.135 946.998 li
432.135 936.998 li
437.135 936.998 li
437.135 946.998 li
cp
437.135 966.998 mo
432.135 966.998 li
432.135 956.998 li
437.135 956.998 li
437.135 966.998 li
cp
437.135 986.998 mo
432.135 986.998 li
432.135 976.998 li
437.135 976.998 li
437.135 986.998 li
cp
437.135 1007 mo
432.135 1007 li
432.135 996.998 li
437.135 996.998 li
437.135 1007 li
cp
437.135 1027 mo
432.135 1027 li
432.135 1017 li
437.135 1017 li
437.135 1027 li
cp
437.135 1047 mo
432.135 1047 li
432.135 1037 li
437.135 1037 li
437.135 1047 li
cp
437.135 1067 mo
432.135 1067 li
432.135 1057 li
437.135 1057 li
437.135 1067 li
cp
437.135 1087 mo
432.135 1087 li
432.135 1077 li
437.135 1077 li
437.135 1087 li
cp
437.135 1107 mo
432.135 1107 li
432.135 1097 li
437.135 1097 li
437.135 1107 li
cp
437.135 1127 mo
432.135 1127 li
432.135 1117 li
437.135 1117 li
437.135 1127 li
cp
f
304.635 989.498 mo
294.635 989.498 li
294.635 984.498 li
304.635 984.498 li
304.635 989.498 li
cp
324.635 989.498 mo
314.635 989.498 li
314.635 984.498 li
324.635 984.498 li
324.635 989.498 li
cp
344.635 989.498 mo
334.635 989.498 li
334.635 984.498 li
344.635 984.498 li
344.635 989.498 li
cp
364.635 989.498 mo
354.635 989.498 li
354.635 984.498 li
364.635 984.498 li
364.635 989.498 li
cp
384.635 989.498 mo
374.635 989.498 li
374.635 984.498 li
384.635 984.498 li
384.635 989.498 li
cp
404.635 989.498 mo
394.635 989.498 li
394.635 984.498 li
404.635 984.498 li
404.635 989.498 li
cp
424.635 989.498 mo
414.635 989.498 li
414.635 984.498 li
424.635 984.498 li
424.635 989.498 li
cp
444.635 989.498 mo
434.635 989.498 li
434.635 984.498 li
444.635 984.498 li
444.635 989.498 li
cp
464.635 989.498 mo
454.635 989.498 li
454.635 984.498 li
464.635 984.498 li
464.635 989.498 li
cp
484.635 989.498 mo
474.635 989.498 li
474.635 984.498 li
484.635 984.498 li
484.635 989.498 li
cp
504.635 989.498 mo
494.635 989.498 li
494.635 984.498 li
504.635 984.498 li
504.635 989.498 li
cp
524.635 989.498 mo
514.635 989.498 li
514.635 984.498 li
524.635 984.498 li
524.635 989.498 li
cp
544.635 989.498 mo
534.635 989.498 li
534.635 984.498 li
544.635 984.498 li
544.635 989.498 li
cp
564.635 989.498 mo
554.635 989.498 li
554.635 984.498 li
564.635 984.498 li
564.635 989.498 li
cp
584.635 989.498 mo
574.635 989.498 li
574.635 984.498 li
584.635 984.498 li
584.635 989.498 li
cp
f
1818.45 1243.51 mo
1775.27 1218.57 li
1775.27 1238.51 li
1655.45 1238.51 li
1655.45 1118.68 li
1675.38 1118.68 li
1650.45 1075.51 li
1625.52 1118.68 li
1645.45 1118.68 li
1645.45 1248.51 li
1775.27 1248.51 li
1775.27 1268.43 li
1818.45 1243.51 li
cp
f
976.567 1098.05 mo
981.195 1111 972.202 1104.44 991.921 1105.67 cv
996.052 1105.92 1004.74 1105.64 1000.41 1097.16 cv
996.904 1087.42 999.927 1060.4 997.675 1050.33 cv
987.482 1005.29 952.993 1032.06 976.567 1098.05 cv
cp
.929412 .521569 .411765 rgb
f
1003.24 1113.38 mo
1003.15 1116.32 1001.76 1119.7 998.359 1119.7 cv
998.36 1119.7 936.223 1121.06 936.223 1121.06 cv
933.012 1121.13 930.664 1117.97 931.74 1114.94 cv
934.004 1108.12 943.976 1096.22 975.807 1095.87 cv
975.807 1095.87 986.175 1098.74 999.771 1094.89 cv
999.771 1094.89 1004.36 1102.28 1003.24 1113.38 cv
cp
.921569 .337255 .282353 rgb
f
950.852 1112.33 mo
951.018 1112.33 951.186 1112.3 951.348 1112.23 cv
952.017 1111.94 952.325 1111.16 952.037 1110.49 cv
949.049 1103.57 943.71 1101.54 943.484 1101.46 cv
942.797 1101.21 942.042 1101.55 941.789 1102.24 cv
941.536 1102.92 941.883 1103.67 942.564 1103.93 cv
942.564 1103.93 li
942.748 1104 947.093 1105.71 949.611 1111.54 cv
949.831 1112.05 950.331 1112.35 950.852 1112.33 cv
cp
.909804 .752941 .65098 rgb
f
961.085 1110.87 mo
961.214 1110.87 961.345 1110.85 961.475 1110.8 cv
962.167 1110.57 962.54 1109.83 962.31 1109.14 cv
959.702 1101.33 952.924 1097.93 952.638 1097.79 cv
951.98 1097.46 951.194 1097.73 950.872 1098.39 cv
950.549 1099.04 950.817 1099.83 951.469 1100.15 cv
951.531 1100.18 957.557 1103.24 959.803 1109.97 cv
959.992 1110.53 960.522 1110.88 961.085 1110.87 cv
cp
f
972.73 1109.18 mo
972.874 1109.18 973.019 1109.15 973.163 1109.1 cv
973.846 1108.85 974.192 1108.09 973.938 1107.4 cv
970.998 1099.52 964.685 1095.47 964.417 1095.31 cv
963.803 1094.92 962.989 1095.1 962.598 1095.72 cv
962.209 1096.33 962.392 1097.15 963.006 1097.54 cv
963.064 1097.57 968.844 1101.3 971.464 1108.33 cv
971.665 1108.87 972.183 1109.2 972.73 1109.18 cv
cp
f
931.74 1114.94 mo
1003.24 1113.38 li
1003.03 1115.57 1002.47 1117.7 1001.42 1119.63 cv
936.223 1121.06 li
933.056 1121.13 930.719 1118.06 931.704 1115.05 cv
931.716 1115.02 931.727 1114.98 931.74 1114.94 cv
cp
.807843 .223529 .196078 rgb
f
1068.24 1136.81 mo
1074.98 1148.07 1066.37 1151.07 1081.69 1145.48 cv
1091.73 1140.99 1095.07 1139.85 1091.3 1130.69 cv
1088.29 1119.7 1084.89 1098.53 1082.68 1087.37 cv
1077.01 1053.35 1031.81 1075.97 1068.24 1136.81 cv
cp
.976471 .576471 .439216 rgb
f
1099.21 1147.48 mo
1099.84 1150.35 1099.33 1153.96 1096.03 1154.8 cv
1096.03 1154.8 1036.12 1171.36 1036.12 1171.36 cv
1033.03 1172.22 1029.98 1169.73 1030.28 1166.54 cv
1030.8 1159.36 1035.68 1145.41 1068.4 1137.19 cv
1068.4 1137.19 1078.94 1137.76 1091.16 1130.15 cv
1091.16 1130.15 1097.57 1136.45 1099.21 1147.48 cv
cp
.921569 .337255 .282353 rgb
f
1048.17 1159.32 mo
1048.32 1159.27 1048.48 1159.2 1048.62 1159.09 cv
1049.2 1158.65 1049.3 1157.82 1048.86 1157.24 cv
1044.27 1151.27 1038.59 1150.6 1038.35 1150.58 cv
1037.63 1150.51 1036.98 1151.03 1036.9 1151.75 cv
1036.82 1152.47 1037.34 1153.12 1038.07 1153.2 cv
1038.07 1153.2 li
1038.26 1153.22 1042.89 1153.81 1046.77 1158.85 cv
1047.1 1159.29 1047.66 1159.46 1048.17 1159.32 cv
cp
.909804 .752941 .65098 rgb
f
1057.73 1155.39 mo
1057.85 1155.35 1057.97 1155.3 1058.09 1155.23 cv
1058.7 1154.83 1058.88 1154.02 1058.49 1153.4 cv
1054.04 1146.48 1046.64 1144.84 1046.33 1144.78 cv
1045.61 1144.62 1044.91 1145.08 1044.76 1145.79 cv
1044.61 1146.5 1045.06 1147.2 1045.77 1147.36 cv
1045.84 1147.37 1052.43 1148.86 1056.26 1154.83 cv
1056.58 1155.33 1057.18 1155.54 1057.73 1155.39 cv
cp
f
1068.6 1150.9 mo
1068.74 1150.86 1068.87 1150.79 1069 1150.71 cv
1069.6 1150.29 1069.75 1149.47 1069.34 1148.87 cv
1064.55 1141.95 1057.44 1139.58 1057.14 1139.48 cv
1056.45 1139.26 1055.7 1139.63 1055.47 1140.32 cv
1055.25 1141.02 1055.63 1141.76 1056.32 1141.99 cv
1056.38 1142.01 1062.9 1144.21 1067.16 1150.37 cv
1067.49 1150.85 1068.07 1151.04 1068.6 1150.9 cv
cp
f
1030.28 1166.54 mo
1099.21 1147.48 li
1099.54 1149.65 1099.52 1151.85 1098.98 1153.98 cv
1036.12 1171.36 li
1033.07 1172.21 1030.05 1169.81 1030.27 1166.65 cv
1030.27 1166.61 1030.27 1166.58 1030.28 1166.54 cv
cp
.807843 .223529 .196078 rgb
f
954.759 1066.92 mo
955.722 1074.73 956.517 1079.42 956.573 1079.9 cv
956.573 1079.9 981.163 1084.96 1013.89 1079.9 cv
1014.1 1036.91 1013.8 957.006 1045.57 930.526 cv
1052.97 925.588 1071.68 912.418 1085.62 904.225 cv
1120.52 887.271 1172.31 874.207 1186.56 841.315 cv
1167.75 833.534 1128.43 817.26 1109.44 809.402 cv
954.916 826.247 940.091 965.295 954.759 1066.92 cv
cp
.807843 .290196 .74902 rgb
f
1015.01 1029.88 mo
1020.11 958.927 1027.52 935.184 1085.62 904.225 cv
1112.91 841.792 li
1039.42 864.546 976.974 939.893 1015.01 1029.88 cv
cp
.647059 .137255 .635294 rgb
f
1015.85 1018.47 mo
1023.07 1059.76 1035.36 1092.25 1045.57 1124.9 cv
1045.57 1124.9 1085.76 1127.43 1105.92 1106.19 cv
1097.28 1074.15 1082.12 1011.85 1098.59 965.367 cv
1105.18 948.316 1122.33 921.575 1173.94 906.451 cv
1238.25 887.595 1228.5 829.194 1228.5 829.194 cv
1206.03 785.589 1164.56 823.965 1152.38 827.173 cv
1049.8 858.173 991.786 922.833 1015.85 1018.47 cv
cp
.807843 .290196 .74902 rgb
f
1041.72 1112.84 mo
1045.57 1124.9 li
1045.57 1124.9 1085.76 1127.43 1105.92 1106.19 cv
1105.92 1106.19 1104.63 1101.49 1102.81 1094.28 cv
1102.81 1094.28 1080.53 1118.4 1041.72 1112.84 cv
cp
.647059 .137255 .635294 rgb
f
954.759 1066.92 mo
955.722 1074.73 956.517 1079.42 956.573 1079.9 cv
956.573 1079.9 981.163 1084.96 1013.89 1079.9 cv
1013.89 1080.1 1013.95 1068.23 1013.95 1068.23 cv
1013.95 1068.23 981.444 1075.29 954.759 1066.92 cv
cp
f
1215.78 703.448 mo
1292.35 657.101 1312.97 587.381 1296.54 502.308 cv
1294.08 490.388 1276.04 492.929 1276.92 505.028 cv
1277.17 572.587 1245.83 624.245 1178.84 648.492 cv
1178.86 648.479 1180.46 719.66 1215.78 703.448 cv
cp
.976471 .576471 .439216 rgb
f
1272.54 681.04 mo
1272.54 681.05 li
1272.54 681.05 1272.54 681.04 1272.53 681.05 cv
1271.74 682.038 1270.91 683.027 1270.07 684.005 cv
1259.76 696.125 1248.86 711.106 1235.19 720.791 cv
1235.18 720.802 1235.18 720.802 1235.17 720.802 cv
1230.35 724.224 1225.18 726.981 1219.58 728.729 cv
1210.07 724.245 1177.1 691.693 1177.24 643.442 cv
1220.1 629.064 1267.06 602.192 1276.76 514.814 cv
1276.76 514.814 1289.57 519.495 1298.94 516.416 cv
1310.33 563.585 1313.15 630.979 1272.54 681.04 cv
cp
.113725 .247059 .439216 rgb
f
1300.5 523.801 mo
1289.75 527.515 1276.3 522.188 1275.88 522.017 cv
1276.21 519.664 1276.5 517.26 1276.76 514.81 cv
1276.76 514.81 1289.57 519.5 1298.94 516.418 cv
1298.94 516.418 1299.6 519.103 1300.5 523.801 cv
cp
.0627451 .211765 .388235 rgb
f
1139.3 702.044 mo
1051.95 682.5 1010.2 622.977 998.681 537.102 cv
997.218 525.018 1014.9 521.797 1017.92 533.545 cv
1039.66 596.993 1074.8 641.44 1145.97 642.991 cv
1145.95 642.985 1145.88 642.969 1145.86 642.964 cv
1184.48 647.43 1177.94 706.164 1139.3 702.044 cv
cp
.976471 .576471 .439216 rgb
f
1153.47 641.736 mo
1104.18 714.664 li
1104.18 714.664 1100.61 712.833 1095 709.264 cv
1086.02 703.542 1071.83 693.368 1058.74 679.146 cv
1019.36 636.388 1002.04 573.229 1000.21 547.231 cv
1013.68 548.427 1020.81 541.083 1020.81 541.083 cv
1021.73 543.132 1022.74 545.213 1023.79 547.325 cv
1023.79 547.335 li
1051.65 605.885 1101.61 643.639 1153.47 641.736 cv
cp
.113725 .247059 .439216 rgb
f
1023.79 547.328 mo
1023.79 547.335 li
1015.99 554.947 1001.1 554.733 1001.1 554.733 cv
1000.43 549.98 1000.21 547.236 1000.21 547.236 cv
1013.68 548.43 1020.81 541.078 1020.81 541.078 cv
1021.73 543.129 1022.74 545.212 1023.79 547.328 cv
cp
.0627451 .211765 .388235 rgb
f
1153.49 641.72 mo
1152.94 628.818 1156.3 610.457 1158.63 603.027 cv
1162.93 588.277 1186.31 595.8 1181.28 610.242 cv
1180.55 609.705 1176.13 636.679 1177.28 644.339 cv
1199.12 652.647 1130.38 669.777 1153.49 641.72 cv
cp
.976471 .576471 .439216 rgb
f
1181.6 609.023 mo
1181.56 609.193 1181.53 609.371 1181.48 609.542 cv
1181.42 609.78 1181.36 610.011 1181.28 610.242 cv
1180.76 609.836 1178.12 624.705 1177.32 635.577 cv
1166.75 639.482 1155.5 636.612 1153.44 636.032 cv
1153.82 624.505 1156.64 610.385 1157.96 605.123 cv
1158.33 603.894 1158.58 603.176 1158.63 603.027 cv
1158.73 602.695 1158.85 602.37 1158.99 602.054 cv
1160.38 598.726 1163.15 596.325 1166.41 595.305 cv
1166.41 595.305 1166.41 595.305 1166.41 595.305 cv
1168.67 594.602 1171.16 594.566 1173.58 595.339 cv
1175.98 596.109 1177.96 597.565 1179.39 599.424 cv
1179.45 599.498 1179.51 599.578 1179.56 599.652 cv
1181.47 602.282 1182.3 605.666 1181.6 609.023 cv
cp
.898039 .490196 .380392 rgb
f
1143.29 578.392 mo
1143.29 578.392 1146.48 565.952 1152.43 558.269 cv
1158.74 563.468 li
1143.29 578.392 li
cp
.788235 .156863 .156863 rgb
f
1134.4 614.888 mo
1140.84 625.531 1153.36 631.096 1164.37 631.329 cv
1167.8 631.453 1171.18 631.049 1174.36 629.982 cv
1174.37 629.984 li
1175.44 629.624 1176.48 629.199 1177.49 628.699 cv
1177.51 628.703 li
1226.92 598.048 1188.39 519.476 1150.05 570.934 cv
1137.86 585.093 1121.26 590.289 1134.4 614.888 cv
cp
.976471 .576471 .439216 rgb
f
1144.37 602.672 mo
1159.9 598.886 li
1159.9 598.886 1158.93 606.629 1152.97 607.378 cv
1147.26 608.093 1144.37 602.672 1144.37 602.672 cv
cp
.976471 .972549 .952941 rgb
f
1159.31 586.432 mo
1159.1 585.55 1159.64 584.663 1160.52 584.45 cv
1161.4 584.237 1162.29 584.779 1162.5 585.661 cv
1162.72 586.542 1162.18 587.429 1161.29 587.642 cv
1160.41 587.855 1159.52 587.313 1159.31 586.432 cv
cp
.756863 .384314 .337255 rgb
f
1146.4 580.987 mo
1146.18 580.105 1146.73 579.218 1147.61 579.005 cv
1148.49 578.792 1149.38 579.334 1149.59 580.216 cv
1149.81 581.097 1149.26 581.984 1148.38 582.197 cv
1147.5 582.41 1146.61 581.868 1146.4 580.987 cv
cp
f
1144.15 603.256 mo
1144.27 603.297 1144.39 603.307 1144.52 603.276 cv
1160.04 599.489 li
1160.38 599.408 1160.58 599.073 1160.5 598.738 cv
1160.42 598.405 1160.08 598.2 1159.75 598.282 cv
1144.22 602.068 li
1143.89 602.15 1143.68 602.485 1143.76 602.82 cv
1143.81 603.029 1143.97 603.187 1144.15 603.256 cv
cp
f
1147.28 595.811 mo
1148.19 596.145 1149.16 596.32 1150.03 596.253 cv
1150.37 596.227 1150.63 595.927 1150.6 595.587 cv
1150.58 595.242 1150.27 594.991 1149.93 595.015 cv
1147.75 595.182 1145.12 593.486 1144.94 592.475 cv
1144.88 592.119 1145.39 591.902 1145.83 591.784 cv
1149.7 590.742 1153.54 584.8 1153.7 584.548 cv
1153.89 584.259 1153.8 583.875 1153.51 583.69 cv
1153.21 583.497 1152.84 583.59 1152.65 583.878 cv
1152.62 583.935 1148.91 589.666 1145.51 590.583 cv
1143.65 591.084 1143.64 592.22 1143.72 592.686 cv
1143.93 593.899 1145.5 595.157 1147.28 595.811 cv
cp
f
1152.84 567.411 mo
1162.6 564.904 1177.33 572.804 1185.07 574.578 cv
1185.07 574.578 1180.29 587.389 1191.38 599.962 cv
1189.62 612.368 1190.36 618.142 1174.36 629.982 cv
1174.37 629.984 li
1175.44 629.624 1176.48 629.199 1177.49 628.699 cv
1177.51 628.703 li
1225 599.563 1190.53 522.348 1152.84 567.411 cv
cp
.898039 .490196 .380392 rgb
f
1152.54 539.547 mo
1159.85 530.919 1175.88 529.096 1185.74 544.257 cv
1193.33 555.93 1203.95 558.377 1201.39 568.161 cv
1218.95 581.78 1204.03 601.136 1204.03 601.136 cv
1194.44 597.622 li
1185.33 585.821 1188.87 572.498 1188.87 572.498 cv
1188.87 572.496 li
1186.33 572.022 1183.7 571.284 1181.5 570.128 cv
1174.68 566.546 1164.15 563.093 1155.24 564.159 cv
1146.34 565.226 1144.37 549.19 1152.54 539.547 cv
cp
.788235 .156863 .156863 rgb
f
1203.54 609.422 mo
1201.27 614.234 1196.28 616.653 1192.41 614.824 cv
1188.53 612.995 1187.23 607.611 1189.5 602.799 cv
1191.77 597.987 1196.76 595.568 1200.63 597.397 cv
1204.51 599.226 1205.81 604.61 1203.54 609.422 cv
cp
.976471 .576471 .439216 rgb
f
1195.45 600.408 mo
1195.62 600.384 1199.71 599.83 1201.35 602.276 cv
1201.76 602.898 1201.96 603.654 1201.97 604.521 cv
1201.97 604.523 1201.97 604.524 1201.97 604.526 cv
1201.97 604.607 1201.98 604.682 1201.98 604.765 cv
1201.98 604.767 1201.98 604.768 1201.98 604.769 cv
1201.98 604.769 1201.98 604.769 1201.98 604.77 cv
1201.92 606.367 1201.2 608.35 1199.82 610.706 cv
1199.67 610.969 1199.35 611.078 1199.07 610.976 cv
1199.04 610.964 1199 610.948 1198.97 610.929 cv
1198.67 610.756 1198.57 610.374 1198.75 610.078 cv
1199.86 608.168 1200.5 606.551 1200.68 605.257 cv
1197.04 605.052 1194.36 608.541 1194.34 608.579 cv
1194.17 608.806 1193.87 608.886 1193.62 608.793 cv
1193.57 608.773 1193.52 608.744 1193.47 608.708 cv
1193.19 608.505 1193.13 608.117 1193.33 607.84 cv
1193.46 607.665 1196.4 603.753 1200.68 603.971 cv
1200.62 603.594 1200.5 603.253 1200.31 602.971 cv
1199.11 601.172 1195.66 601.635 1195.62 601.639 cv
1195.28 601.685 1194.97 601.448 1194.92 601.109 cv
1194.87 600.77 1195.11 600.457 1195.45 600.408 cv
cp
.756863 .384314 .337255 rgb
f
1187.48 609.129 mo
1193.35 606.031 li
1193.39 605.785 1193.46 605.54 1193.58 605.305 cv
1194.26 603.922 1195.93 603.354 1197.32 604.037 cv
1198.7 604.719 1199.27 606.394 1198.59 607.777 cv
1197.93 609.123 1196.33 609.687 1194.96 609.089 cv
1189.1 612.186 li
1188.65 612.425 1188.14 612.444 1187.7 612.281 cv
1187.31 612.138 1186.97 611.859 1186.76 611.466 cv
1186.32 610.622 1186.64 609.575 1187.48 609.129 cv
cp
.992157 1 .870588 rgb
f
1075 815.706 mo
1075 815.706 1130.71 845.732 1229.02 837.512 cv
1229.02 837.512 1229.33 834.948 1229.8 830.483 cv
1231.84 811.445 1237.02 757.835 1235.15 720.813 cv
1235.15 720.813 1232.56 689.411 1227 674.094 cv
1210.11 627.604 1177.24 643.437 1177.24 643.437 cv
1169.57 658.937 1151.33 671.255 1151.33 671.255 cv
1148.2 655.056 1153.23 642.475 1153.47 641.731 cv
1128.16 647.535 1105.43 666.63 1095.25 708.575 cv
1090.48 728.219 1073.19 775.751 1071.33 800.673 cv
1070.8 807.667 1072.48 813.393 1075 815.706 cv
cp
.113725 .247059 .439216 rgb
f
1144.8 641.687 mo
1144.8 641.687 1139.87 665.039 1148.72 679.146 cv
1148.72 679.146 1175.34 670.211 1185.15 640.649 cv
1185.15 640.649 1181.49 640.447 1177.24 643.441 cv
1177.24 643.441 1164.77 660.741 1152.51 669.008 cv
1152.51 669.008 1149.61 658.809 1153.47 641.732 cv
1153.47 641.732 1148.92 640.479 1144.8 641.687 cv
cp
.909804 .752941 .65098 rgb
f
1168.83 584.726 mo
1168.56 584.706 1168.3 584.536 1168.17 584.263 cv
1166.06 579.523 1161.57 578.218 1161.53 578.206 cv
1161.11 578.089 1160.87 577.658 1160.98 577.241 cv
1161.1 576.825 1161.53 576.58 1161.94 576.695 cv
1162.16 576.753 1167.18 578.188 1169.61 583.625 cv
1169.78 584.02 1169.6 584.484 1169.21 584.66 cv
1169.09 584.714 1168.96 584.735 1168.83 584.726 cv
cp
.756863 .384314 .337255 rgb
f
1156.89 575.433 mo
1156.75 575.423 1156.61 575.376 1156.49 575.29 cv
1152.54 572.478 1149.69 573.967 1149.66 573.982 cv
1149.28 574.188 1148.8 574.048 1148.6 573.667 cv
1148.39 573.287 1148.53 572.811 1148.91 572.604 cv
1149.06 572.523 1152.65 570.638 1157.4 574.012 cv
1157.75 574.263 1157.83 574.752 1157.58 575.105 cv
1157.42 575.337 1157.15 575.452 1156.89 575.433 cv
cp
f
1272.53 681.05 mo
1271.74 682.038 1270.91 683.027 1270.07 684.005 cv
1259.76 696.125 1248.86 711.106 1235.19 720.791 cv
1235.18 720.802 1235.18 720.802 1235.17 720.802 cv
1235.16 720.812 1235.15 720.812 1235.15 720.812 cv
1234.77 700.14 1229.37 688.374 1229.04 687.656 cv
1244.43 705.103 1271.9 681.591 1272.53 681.05 cv
cp
.0627451 .211765 .388235 rgb
f
1104.24 682.943 mo
1104.24 682.943 1098.5 696.843 1095.25 708.578 cv
1095.19 708.817 1095.11 709.046 1095 709.264 cv
1086.02 703.542 1071.83 693.368 1058.74 679.146 cv
1058.74 679.146 1084.96 698.809 1104.24 682.943 cv
cp
f
1134.42 298.057 mo
1036.27 419.964 li
1256.33 396.202 li
1134.42 298.057 li
cp
824.734 535.604 mo
1120.41 168.339 li
1487.67 464.015 li
824.734 535.604 li
cp
.921569 .337255 .282353 rgb
f
1435.93 469.603 mo
1433.5 447.115 li
1437.48 446.685 li
1439.91 469.173 li
1435.93 469.603 li
cp
.807843 .223529 .196078 rgb
f
1417.14 471.632 mo
1413.1 434.231 li
1417.08 433.801 li
1421.12 471.202 li
1417.14 471.632 li
cp
f
1379.56 475.69 mo
1375.52 438.289 li
1379.5 437.859 li
1383.54 475.261 li
1379.56 475.69 li
cp
f
1285.6 485.836 mo
1283.18 463.348 li
1287.15 462.918 li
1289.58 485.406 li
1285.6 485.836 li
cp
f
1266.81 487.865 mo
1262.77 450.464 li
1266.75 450.034 li
1270.79 487.435 li
1266.81 487.865 li
cp
f
1360.77 477.719 mo
1358.34 455.231 li
1362.32 454.802 li
1364.74 477.29 li
1360.77 477.719 li
cp
f
1341.98 479.749 mo
1337.94 442.347 li
1341.92 441.918 li
1345.95 479.319 li
1341.98 479.749 li
cp
f
1210.44 493.953 mo
1208.01 471.465 li
1211.99 471.035 li
1214.42 493.523 li
1210.44 493.953 li
cp
f
1191.65 495.982 mo
1187.61 458.581 li
1191.59 458.151 li
1195.63 495.552 li
1191.65 495.982 li
cp
f
1097.7 506.127 mo
1095.27 483.64 li
1099.25 483.21 li
1101.67 505.698 li
1097.7 506.127 li
cp
f
1078.91 508.157 mo
1074.87 470.755 li
1078.84 470.326 li
1082.88 507.727 li
1078.91 508.157 li
cp
f
984.953 518.302 mo
982.524 495.815 li
986.5 495.385 li
988.929 517.873 li
984.953 518.302 li
cp
f
966.162 520.331 mo
962.123 482.93 li
966.1 482.5 li
970.138 519.902 li
966.162 520.331 li
cp
f
1135.28 502.069 mo
1132.85 479.581 li
1136.83 479.151 li
1139.25 501.64 li
1135.28 502.069 li
cp
f
1116.49 504.098 mo
1112.45 466.697 li
1116.43 466.268 li
1120.46 503.668 li
1116.49 504.098 li
cp
f
1022.53 514.244 mo
1020.11 491.756 li
1024.08 491.326 li
1026.51 513.815 li
1022.53 514.244 li
cp
f
1003.74 516.273 mo
999.705 478.872 li
1003.68 478.442 li
1007.72 515.843 li
1003.74 516.273 li
cp
f
909.79 526.419 mo
907.361 503.931 li
911.337 503.501 li
913.766 525.989 li
909.79 526.419 li
cp
f
890.998 528.448 mo
886.96 491.047 li
890.936 490.617 li
894.975 528.019 li
890.998 528.448 li
cp
f
947.371 522.36 mo
944.942 499.873 li
948.919 499.443 li
951.348 521.931 li
947.371 522.36 li
cp
f
928.58 524.39 mo
924.542 486.988 li
928.518 486.559 li
932.557 523.96 li
928.58 524.39 li
cp
f
1398.35 473.661 mo
1395.92 451.173 li
1399.9 450.744 li
1402.33 473.231 li
1398.35 473.661 li
cp
f
1323.19 481.778 mo
1320.76 459.29 li
1324.73 458.86 li
1327.16 481.348 li
1323.19 481.778 li
cp
f
1304.4 483.807 mo
1300.36 446.406 li
1304.33 445.976 li
1308.37 483.377 li
1304.4 483.807 li
cp
f
1248.02 489.894 mo
1245.59 467.406 li
1249.57 466.977 li
1252 489.464 li
1248.02 489.894 li
cp
f
1229.23 491.923 mo
1225.19 454.522 li
1229.17 454.092 li
1233.21 491.494 li
1229.23 491.923 li
cp
f
1172.86 498.011 mo
1170.43 475.523 li
1174.41 475.093 li
1176.84 497.581 li
1172.86 498.011 li
cp
f
1154.07 500.04 mo
1150.03 462.639 li
1154.01 462.209 li
1158.05 499.61 li
1154.07 500.04 li
cp
f
1060.12 510.185 mo
1057.69 487.698 li
1061.66 487.268 li
1064.09 509.756 li
1060.12 510.185 li
cp
f
1041.32 512.215 mo
1037.29 474.814 li
1041.26 474.384 li
1045.3 511.785 li
1041.32 512.215 li
cp
f
872.208 530.477 mo
869.78 507.989 li
873.756 507.56 li
876.185 530.047 li
872.208 530.477 li
cp
f
1277.41 473.197 mo
1280.97 473.181 1280.06 483.568 1281.91 486.235 cv
1308.22 483.393 li
1307 490.198 1301.88 500.709 1297.23 505.979 cv
1294.48 509.087 1278.4 508.822 1276.92 505.028 cv
1274.05 497.716 1274.31 489.995 1274.74 488.161 cv
1275.73 483.924 1273.57 475.096 1277.41 473.197 cv
cp
.976471 .576471 .439216 rgb
f
1007.76 502.911 mo
1003.71 504.112 1009.05 515.7 1009.05 515.7 cv
983.006 518.512 li
988.663 527.732 992.125 533.709 1001.7 539.5 cv
1005.25 541.647 1018.8 540.789 1019.02 536.72 cv
1019.38 530.41 1016.93 518.185 1016.34 516.395 cv
1015.77 512.723 1011.87 501.693 1007.76 502.911 cv
cp
f
525.547 625.203 mo
618.741 486.657 li
618.741 625.203 li
525.547 625.203 li
cp
761.359 625.203 mo
709.089 625.203 li
709.089 343.725 li
709.089 341.793 707.522 340.225 705.589 340.225 cv
633.272 340.225 li
632.116 340.225 631.034 340.797 630.382 341.751 cv
435.495 627.035 li
435.098 627.617 434.885 628.305 434.885 629.009 cv
434.885 704.39 li
434.885 706.323 436.452 707.89 438.385 707.89 cv
618.741 707.89 li
618.741 794.786 li
618.741 796.718 620.308 798.286 622.241 798.286 cv
705.589 798.286 li
707.522 798.286 709.089 796.718 709.089 794.786 cv
709.089 707.89 li
761.359 707.89 li
763.292 707.89 764.859 706.323 764.859 704.39 cv
764.859 628.703 li
764.859 626.77 763.292 625.203 761.359 625.203 cv
cp
.541176 .619608 .866667 rgb
f
2221.69 1127.9 mo
2194.56 1099.53 2161.03 1085.14 2122.02 1085.14 cv
2103.69 1085.14 2085.49 1089.13 2067.81 1096.99 cv
2079.6 1030.25 li
2239.07 1030.25 li
2241.01 1030.25 2242.57 1028.68 2242.57 1026.75 cv
2242.57 946.156 li
2242.57 944.223 2241.01 942.656 2239.07 942.656 cv
2011.4 942.656 li
2009.72 942.656 2008.27 943.853 2007.96 945.507 cv
1963.83 1179.31 li
1963.66 1180.25 1963.87 1181.22 1964.43 1181.99 cv
1964.98 1182.77 1965.83 1183.29 1966.77 1183.42 cv
2036.64 1193.54 li
2037.79 1193.7 2038.96 1193.28 2039.74 1192.41 cv
2058.57 1171.42 2080.07 1160.78 2103.63 1160.78 cv
2122.58 1160.78 2137.51 1167.17 2149.29 1180.3 cv
2161 1193.37 2166.93 1213.46 2166.93 1240.02 cv
2166.93 1268.44 2160.93 1289.9 2149.08 1303.78 cv
2137.21 1317.7 2123.14 1324.46 2106.08 1324.46 cv
2091.35 1324.46 2078.13 1319.06 2066.81 1308.41 cv
2055.42 1297.7 2048.46 1282.89 2046.13 1264.4 cv
2045.89 1262.51 2044.18 1261.16 2042.29 1261.36 cv
1956.49 1270.25 li
1955.55 1270.34 1954.69 1270.82 1954.1 1271.56 cv
1953.52 1272.31 1953.26 1273.26 1953.39 1274.2 cv
1958.59 1312.49 1974.76 1343.44 2001.47 1366.17 cv
2028.14 1388.89 2063.03 1400.41 2105.16 1400.41 cv
2157.98 1400.41 2199.86 1379.93 2229.63 1339.54 cv
2251.44 1310.06 2262.49 1276.06 2262.49 1238.49 cv
2262.49 1193.44 2248.76 1156.23 2221.69 1127.9 cv
cp
f
1860.83 395.736 mo
1644.33 395.736 li
1642.91 395.736 1641.76 396.888 1641.76 398.309 cv
1641.76 457.109 li
1641.76 458.53 1642.91 459.682 1644.33 459.682 cv
1783 459.682 li
1754.73 496.129 1731.73 537.757 1714.57 583.494 cv
1696.76 631.013 1687.19 678.292 1686.14 724.018 cv
1686.12 724.71 1686.39 725.38 1686.87 725.876 cv
1687.35 726.371 1688.02 726.65 1688.71 726.65 cv
1749.76 726.65 li
1750.45 726.65 1751.1 726.378 1751.59 725.892 cv
1752.07 725.406 1752.34 724.748 1752.34 724.064 cv
1752.19 695.291 1756.97 662.126 1766.56 625.489 cv
1776.15 588.85 1790.28 553.771 1808.55 521.225 cv
1826.83 488.694 1845.02 463.419 1862.64 446.103 cv
1863.13 445.619 1863.4 444.958 1863.4 444.268 cv
1863.4 398.309 li
1863.4 396.888 1862.25 395.736 1860.83 395.736 cv
cp
.956863 .623529 .623529 rgb
f
2274.27 594.865 mo
2261.86 594.865 li
2261.86 586.587 li
2265.99 586.587 li
2265.99 582.449 li
2274.27 582.449 li
2274.27 594.865 li
cp
.243137 .486275 .776471 rgb
f
2134.24 594.865 mo
2116.01 594.865 li
2116.01 586.587 li
2134.24 586.587 li
2134.24 594.865 li
cp
2170.7 594.865 mo
2152.47 594.865 li
2152.47 586.587 li
2170.7 586.587 li
2170.7 594.865 li
cp
2207.16 594.865 mo
2188.93 594.865 li
2188.93 586.587 li
2207.16 586.587 li
2207.16 594.865 li
cp
2243.63 594.865 mo
2225.39 594.865 li
2225.39 586.587 li
2243.63 586.587 li
2243.63 594.865 li
cp
f
2097.78 594.865 mo
2085.36 594.865 li
2085.36 582.449 li
2093.64 582.449 li
2093.64 586.587 li
2097.78 586.587 li
2097.78 594.865 li
cp
f
2093.64 454.834 mo
2085.36 454.834 li
2085.36 436.603 li
2093.64 436.603 li
2093.64 454.834 li
cp
2093.64 491.295 mo
2085.36 491.295 li
2085.36 473.065 li
2093.64 473.065 li
2093.64 491.295 li
cp
2093.64 527.757 mo
2085.36 527.757 li
2085.36 509.526 li
2093.64 509.526 li
2093.64 527.757 li
cp
2093.64 564.218 mo
2085.36 564.218 li
2085.36 545.988 li
2093.64 545.988 li
2093.64 564.218 li
cp
f
2093.64 418.373 mo
2085.36 418.373 li
2085.36 405.957 li
2097.78 405.957 li
2097.78 414.234 li
2093.64 414.234 li
2093.64 418.373 li
cp
f
2134.24 414.234 mo
2116.01 414.234 li
2116.01 405.957 li
2134.24 405.957 li
2134.24 414.234 li
cp
2170.7 414.234 mo
2152.47 414.234 li
2152.47 405.957 li
2170.7 405.957 li
2170.7 414.234 li
cp
2207.16 414.234 mo
2188.93 414.234 li
2188.93 405.957 li
2207.16 405.957 li
2207.16 414.234 li
cp
2243.63 414.234 mo
2225.39 414.234 li
2225.39 405.957 li
2243.63 405.957 li
2243.63 414.234 li
cp
f
2274.27 418.373 mo
2265.99 418.373 li
2265.99 414.234 li
2261.86 414.234 li
2261.86 405.957 li
2274.27 405.957 li
2274.27 418.373 li
cp
f
2274.27 454.834 mo
2265.99 454.834 li
2265.99 436.603 li
2274.27 436.603 li
2274.27 454.834 li
cp
2274.27 491.295 mo
2265.99 491.295 li
2265.99 473.065 li
2274.27 473.065 li
2274.27 491.295 li
cp
2274.27 527.757 mo
2265.99 527.757 li
2265.99 509.526 li
2274.27 509.526 li
2274.27 527.757 li
cp
2274.27 564.218 mo
2265.99 564.218 li
2265.99 545.988 li
2274.27 545.988 li
2274.27 564.218 li
cp
f
2111.94 304.456 mo
2103.94 303.126 2095.64 302.638 2087.52 303.009 cv
2087.14 294.741 li
2095.84 294.345 2104.72 294.867 2113.3 296.29 cv
2111.94 304.456 li
cp
2040.49 315.411 mo
2036.73 308.036 li
2044.53 304.061 2052.77 300.917 2061.23 298.69 cv
2063.34 306.693 li
2055.45 308.771 2047.77 311.704 2040.49 315.411 cv
cp
2157.15 322.412 mo
2150.36 317.857 2143.08 314.022 2135.5 311.012 cv
2138.56 303.32 li
2146.68 306.546 2154.48 310.657 2161.76 315.539 cv
2157.15 322.412 li
cp
2002.75 346.113 mo
1996.3 340.929 li
2001.77 334.112 2007.99 327.857 2014.77 322.338 cv
2020 328.758 li
2013.66 333.91 2007.86 339.749 2002.75 346.113 cv
cp
2190.97 357.389 mo
2186.66 350.469 2181.59 343.983 2175.91 338.111 cv
2181.86 332.357 li
2187.95 338.647 2193.37 345.596 2198 353.01 cv
2190.97 357.389 li
cp
1980.95 389.603 mo
1972.94 387.546 li
1975.11 379.079 1978.2 370.815 1982.13 362.986 cv
1989.53 366.696 li
1985.86 374 1982.98 381.707 1980.95 389.603 cv
cp
2207.39 403.165 mo
2206.32 395.066 2204.38 387.07 2201.63 379.399 cv
2209.42 376.604 li
2212.37 384.829 2214.45 393.401 2215.59 402.083 cv
2207.39 403.165 li
cp
1970.87 439.629 mo
1969.67 432.671 1969.06 425.534 1969.06 418.414 cv
1969.06 416.779 1969.09 415.12 1969.15 413.482 cv
1977.42 413.804 li
1977.36 415.335 1977.33 416.886 1977.33 418.414 cv
1977.33 425.063 1977.9 431.727 1979.02 438.22 cv
1970.87 439.629 li
cp
2213.91 444.476 mo
2205.82 442.74 li
2207.52 434.8 2208.39 426.615 2208.39 418.414 cv
2216.66 418.414 li
2216.66 427.197 2215.74 435.966 2213.91 444.476 cv
cp
1990.42 487.952 mo
1985.49 480.71 1981.33 472.935 1978.06 464.842 cv
1985.73 461.736 li
1988.79 469.287 1992.67 476.54 1997.26 483.297 cv
1990.42 487.952 li
cp
2192.44 491.99 mo
2185.78 487.066 li
2190.65 480.495 2194.82 473.398 2198.17 465.973 cv
2205.72 469.384 li
2202.12 477.342 2197.65 484.948 2192.44 491.99 cv
cp
2028.11 523.957 mo
2020.67 519.382 2013.69 513.996 2007.36 507.949 cv
2013.07 501.964 li
2018.98 507.608 2025.5 512.635 2032.45 516.905 cv
2028.11 523.957 li
cp
2153.34 526.464 mo
2149.29 519.245 li
2156.4 515.258 2163.11 510.496 2169.24 505.091 cv
2174.71 511.299 li
2168.15 517.089 2160.96 522.192 2153.34 526.464 cv
cp
2077.31 541.249 mo
2068.61 540.159 2060.02 538.137 2051.78 535.238 cv
2054.53 527.43 li
2062.21 530.133 2070.22 532.019 2078.33 533.036 cv
2077.31 541.249 li
cp
2103.5 541.766 mo
2102.8 533.519 li
2110.95 532.825 2119.03 531.262 2126.81 528.872 cv
2129.24 536.785 li
2120.89 539.347 2112.24 541.023 2103.5 541.766 cv
cp
f
1237.89 954.45 mo
1237.79 956.69 1236.69 980.24 1232.49 1022.68 cv
1231.52 1032.57 1230.37 1043.5 1229.03 1055.42 cv
1222.21 1116.03 1210.34 1202.41 1189.95 1310.55 cv
1171.58 1407.96 1142.6 1492.42 1103.81 1561.6 cv
1089.81 1586.55 1067.99 1615.88 1048.24 1640.47 cv
1025.33 1669.01 982.6 1671.03 957.08 1644.8 cv
956.64 1644.35 956.2 1643.9 955.76 1643.45 cv
934.08 1621.17 932.66 1586.15 952.45 1562.17 cv
967.97 1543.36 985.39 1519.48 998.35 1493.95 cv
1018.27 1454.68 1048.15 1387.9 1067.1 1287.38 cv
1086.39 1185.07 1097.75 1102.67 1104.35 1044.78 cv
1105.52 1034.5 1106.54 1024.99 1107.43 1016.28 cv
1111.85 972.97 1112.97 949.45 1113 948.91 cv
1114.56 914.44 1143.78 887.73 1178.23 889.27 cv
1212.7 890.81 1239.41 919.98 1237.89 954.45 cv
cp
.227451 .447059 .666667 rgb
f
1685.06 1517.95 mo
1666.65 1562.31 1638.48 1598.51 1603.59 1622.63 cv
1573.84 1643.21 1540.31 1654.02 1507.23 1654.02 cv
1499.7 1654.02 1492.2 1653.46 1484.77 1652.33 cv
1446.43 1646.49 1411.66 1625.46 1386.86 1593.09 cv
1362.76 1561.64 1348.28 1520.96 1343.81 1472.19 cv
1333.68 1361.6 1354.55 1185.39 1371.01 1072.16 cv
1372.8 1059.86 1374.54 1048.3 1376.18 1037.65 cv
1382.63 995.81 1387.57 967.98 1388.25 964.16 cv
1394.33 930.18 1426.8 907.56 1460.79 913.64 cv
1494.77 919.72 1517.39 952.2 1511.3 986.18 cv
1511.16 986.99 1507.98 1004.93 1503.37 1033.9 cv
1501.83 1043.53 1500.14 1054.39 1498.35 1066.24 cv
1482.43 1171.51 1458.65 1355.38 1468.3 1460.78 cv
1471.83 1499.34 1485.68 1526.01 1503.58 1528.74 cv
1522.56 1531.63 1552.16 1512.03 1569.6 1470.02 cv
1582.83 1438.14 1619.41 1423.02 1651.29 1436.26 cv
1658.62 1439.3 1665.06 1443.58 1670.48 1448.75 cv
1688.62 1466.06 1695.25 1493.4 1685.06 1517.95 cv
cp
f
1237.89 954.45 mo
1237.79 956.69 1236.69 980.24 1232.49 1022.68 cv
1231.52 1032.57 1230.37 1043.5 1229.03 1055.42 cv
1229.02 1055.42 li
1164.54 1038.7 1104.35 1044.78 1104.35 1044.78 cv
1105.52 1034.5 1106.54 1024.99 1107.43 1016.28 cv
1111.85 972.97 1112.97 949.45 1113 948.91 cv
1114.56 914.44 1143.78 887.73 1178.23 889.27 cv
1212.7 890.81 1239.41 919.98 1237.89 954.45 cv
cp
.137255 .396078 .607843 rgb
f
1511.3 986.18 mo
1511.16 986.99 1507.98 1004.93 1503.37 1033.9 cv
1501.83 1043.53 1500.14 1054.39 1498.35 1066.24 cv
1456.67 1071.86 1412.4 1073.35 1371.01 1072.16 cv
1372.8 1059.86 1374.54 1048.3 1376.18 1037.65 cv
1382.63 995.81 1387.57 967.98 1388.25 964.16 cv
1394.33 930.18 1426.8 907.56 1460.79 913.64 cv
1494.77 919.72 1517.39 952.2 1511.3 986.18 cv
cp
f
1738.66 968.12 mo
1713.74 979.69 1666.49 1001.62 1598.94 1017.78 cv
1585.01 1021.1 1570.22 1024.19 1554.58 1026.88 cv
1537.86 1029.76 1520.79 1032.11 1503.37 1033.9 cv
1462.77 1038.1 1420.31 1039.34 1376.18 1037.65 cv
1330.04 1035.87 1282.08 1030.88 1232.49 1022.68 cv
1225.81 1021.57 1219.11 1020.41 1212.38 1019.19 cv
1175.41 1012.48 1140.35 1011.52 1107.43 1016.28 cv
1103.58 1016.82 1099.77 1017.46 1095.99 1018.17 cv
1067.4 1023.53 1040.49 1033.32 1015.42 1047.53 cv
976.58 1069.55 956.24 1094.88 956.06 1095.12 cv
943.78 1111.54 924.98 1120.2 905.95 1120.2 cv
892.93 1120.2 879.8 1116.15 868.57 1107.75 cv
840.92 1087.08 835.27 1047.91 855.94 1020.26 cv
859.4 1015.64 891.52 974.06 953.78 938.77 cv
986.33 920.33 1021.45 906.78 1058.37 898.41 cv
1062.91 897.38 1067.48 896.42 1072.07 895.55 cv
1123.64 885.75 1178.35 885.96 1234.68 896.18 cv
1371.23 920.93 1472.96 915.62 1547.09 901.14 cv
1614.32 888.02 1658.84 867.35 1686.01 854.73 cv
1717.32 840.2 1754.49 853.79 1769.03 885.1 cv
1783.57 916.42 1769.97 953.58 1738.66 968.12 cv
cp
.227451 .447059 .666667 rgb
f
1670.48 1448.75 mo
1629.77 1426.53 1605 1465.34 1594.79 1483.26 cv
1584.57 1501.18 1565.17 1547.04 1512.29 1547.33 cv
1459.41 1547.62 1468.3 1460.78 1468.3 1460.78 cv
1471.83 1499.34 1485.68 1526.01 1503.58 1528.74 cv
1522.56 1531.63 1552.16 1512.03 1569.6 1470.02 cv
1582.83 1438.14 1619.41 1423.02 1651.29 1436.26 cv
1658.62 1439.3 1665.06 1443.58 1670.48 1448.75 cv
cp
.137255 .396078 .607843 rgb
f
977.672 1219.76 mo
977.672 1598.1 li
977.672 1636.8 946.305 1668.16 907.611 1668.16 cv
632.687 1668.16 li
593.993 1668.16 562.626 1636.8 562.626 1598.1 cv
562.626 1219.76 li
562.626 1179.99 594.867 1147.75 634.639 1147.75 cv
905.659 1147.75 li
945.431 1147.75 977.672 1179.99 977.672 1219.76 cv
cp
.541176 .619608 .866667 rgb
f
977.672 1217.28 mo
977.672 1315.37 li
562.626 1315.37 li
562.626 1217.28 li
562.626 1178.88 593.755 1147.75 632.155 1147.75 cv
908.142 1147.75 li
946.542 1147.75 977.672 1178.88 977.672 1217.28 cv
cp
.282353 .403922 .666667 rgb
f
893.6 1279.19 mo
647.23 1279.19 li
621.075 1279.19 599.872 1257.98 599.872 1231.83 cv
599.872 1231.83 li
599.872 1205.67 621.075 1184.47 647.23 1184.47 cv
893.6 1184.47 li
919.756 1184.47 940.959 1205.67 940.959 1231.83 cv
940.959 1231.83 li
940.959 1257.98 919.756 1279.19 893.6 1279.19 cv
cp
.541176 .619608 .866667 rgb
f
640.579 1394.66 mo
626.212 1394.66 li
611.665 1394.66 599.872 1382.86 599.872 1368.32 cv
599.872 1368.32 li
599.872 1353.77 611.665 1341.98 626.212 1341.98 cv
640.579 1341.98 li
655.126 1341.98 666.919 1353.77 666.919 1368.32 cv
666.919 1368.32 li
666.919 1382.86 655.126 1394.66 640.579 1394.66 cv
cp
.831373 .909804 1 rgb
f
640.579 1472.7 mo
626.212 1472.7 li
611.665 1472.7 599.872 1460.91 599.872 1446.36 cv
599.872 1446.36 li
599.872 1431.81 611.665 1420.02 626.212 1420.02 cv
640.579 1420.02 li
655.126 1420.02 666.919 1431.81 666.919 1446.36 cv
666.919 1446.36 li
666.919 1460.91 655.126 1472.7 640.579 1472.7 cv
cp
f
640.579 1550.74 mo
626.212 1550.74 li
611.665 1550.74 599.872 1538.95 599.872 1524.4 cv
599.872 1524.4 li
599.872 1509.86 611.665 1498.06 626.212 1498.06 cv
640.579 1498.06 li
655.126 1498.06 666.919 1509.86 666.919 1524.4 cv
666.919 1524.4 li
666.919 1538.95 655.126 1550.74 640.579 1550.74 cv
cp
f
640.579 1628.79 mo
626.212 1628.79 li
611.665 1628.79 599.872 1616.99 599.872 1602.45 cv
599.872 1602.45 li
599.872 1587.9 611.665 1576.11 626.212 1576.11 cv
640.579 1576.11 li
655.126 1576.11 666.919 1587.9 666.919 1602.45 cv
666.919 1602.45 li
666.919 1616.99 655.126 1628.79 640.579 1628.79 cv
cp
f
731.926 1394.66 mo
717.558 1394.66 li
703.011 1394.66 691.219 1382.86 691.219 1368.32 cv
691.219 1368.32 li
691.219 1353.77 703.011 1341.98 717.558 1341.98 cv
731.926 1341.98 li
746.473 1341.98 758.265 1353.77 758.265 1368.32 cv
758.265 1368.32 li
758.265 1382.86 746.473 1394.66 731.926 1394.66 cv
cp
f
731.926 1472.7 mo
717.558 1472.7 li
703.011 1472.7 691.219 1460.91 691.219 1446.36 cv
691.219 1446.36 li
691.219 1431.81 703.011 1420.02 717.558 1420.02 cv
731.926 1420.02 li
746.473 1420.02 758.265 1431.81 758.265 1446.36 cv
758.265 1446.36 li
758.265 1460.91 746.473 1472.7 731.926 1472.7 cv
cp
f
731.926 1550.74 mo
717.558 1550.74 li
703.011 1550.74 691.219 1538.95 691.219 1524.4 cv
691.219 1524.4 li
691.219 1509.86 703.011 1498.06 717.558 1498.06 cv
731.926 1498.06 li
746.473 1498.06 758.265 1509.86 758.265 1524.4 cv
758.265 1524.4 li
758.265 1538.95 746.473 1550.74 731.926 1550.74 cv
cp
f
731.926 1628.79 mo
717.558 1628.79 li
703.011 1628.79 691.219 1616.99 691.219 1602.45 cv
691.219 1602.45 li
691.219 1587.9 703.011 1576.11 717.558 1576.11 cv
731.926 1576.11 li
746.473 1576.11 758.265 1587.9 758.265 1602.45 cv
758.265 1602.45 li
758.265 1616.99 746.473 1628.79 731.926 1628.79 cv
cp
f
823.272 1394.66 mo
808.905 1394.66 li
794.358 1394.66 782.565 1382.86 782.565 1368.32 cv
782.565 1368.32 li
782.565 1353.77 794.358 1341.98 808.905 1341.98 cv
823.272 1341.98 li
837.819 1341.98 849.612 1353.77 849.612 1368.32 cv
849.612 1368.32 li
849.612 1382.86 837.819 1394.66 823.272 1394.66 cv
cp
f
823.272 1472.7 mo
808.905 1472.7 li
794.358 1472.7 782.565 1460.91 782.565 1446.36 cv
782.565 1446.36 li
782.565 1431.81 794.358 1420.02 808.905 1420.02 cv
823.272 1420.02 li
837.819 1420.02 849.612 1431.81 849.612 1446.36 cv
849.612 1446.36 li
849.612 1460.91 837.819 1472.7 823.272 1472.7 cv
cp
f
823.272 1550.74 mo
808.905 1550.74 li
794.358 1550.74 782.565 1538.95 782.565 1524.4 cv
782.565 1524.4 li
782.565 1509.86 794.358 1498.06 808.905 1498.06 cv
823.272 1498.06 li
837.819 1498.06 849.612 1509.86 849.612 1524.4 cv
849.612 1524.4 li
849.612 1538.95 837.819 1550.74 823.272 1550.74 cv
cp
f
823.272 1628.79 mo
808.905 1628.79 li
794.358 1628.79 782.565 1616.99 782.565 1602.45 cv
782.565 1602.45 li
782.565 1587.9 794.358 1576.11 808.905 1576.11 cv
823.272 1576.11 li
837.819 1576.11 849.612 1587.9 849.612 1602.45 cv
849.612 1602.45 li
849.612 1616.99 837.819 1628.79 823.272 1628.79 cv
cp
f
914.619 1394.66 mo
900.252 1394.66 li
885.705 1394.66 873.912 1382.86 873.912 1368.32 cv
873.912 1368.32 li
873.912 1353.77 885.705 1341.98 900.252 1341.98 cv
914.619 1341.98 li
929.166 1341.98 940.959 1353.77 940.959 1368.32 cv
940.959 1368.32 li
940.959 1382.86 929.166 1394.66 914.619 1394.66 cv
cp
.921569 .337255 .282353 rgb
f
914.619 1472.7 mo
900.252 1472.7 li
885.705 1472.7 873.912 1460.91 873.912 1446.36 cv
873.912 1446.36 li
873.912 1431.81 885.705 1420.02 900.252 1420.02 cv
914.619 1420.02 li
929.166 1420.02 940.959 1431.81 940.959 1446.36 cv
940.959 1446.36 li
940.959 1460.91 929.166 1472.7 914.619 1472.7 cv
cp
.282353 .403922 .666667 rgb
f
914.619 1550.74 mo
900.252 1550.74 li
885.705 1550.74 873.912 1538.95 873.912 1524.4 cv
873.912 1524.4 li
873.912 1509.86 885.705 1498.06 900.252 1498.06 cv
914.619 1498.06 li
929.166 1498.06 940.959 1509.86 940.959 1524.4 cv
940.959 1524.4 li
940.959 1538.95 929.166 1550.74 914.619 1550.74 cv
cp
f
914.619 1628.79 mo
900.252 1628.79 li
885.705 1628.79 873.912 1616.99 873.912 1602.45 cv
873.912 1602.45 li
873.912 1587.9 885.705 1576.11 900.252 1576.11 cv
914.619 1576.11 li
929.166 1576.11 940.959 1587.9 940.959 1602.45 cv
940.959 1602.45 li
940.959 1616.99 929.166 1628.79 914.619 1628.79 cv
cp
f
1414.85 1745.07 mo
1400.98 1745.08 608.816 1744.01 627.816 1744.05 cv
573.359 1743.85 573.38 1639.23 627.961 1639.18 cv
637.995 1639.28 1382.05 1640.11 1414.99 1640.21 cv
1414.98 1647.51 li
1414.85 1745.07 li
cp
.988235 .705882 .705882 rgb
f
667.837 1744.1 mo
661.256 1744.19 634.907 1743.99 627.822 1744.05 cv
588.7 1745.46 572.962 1679.36 599.891 1652.73 cv
599.901 1652.73 li
613.554 1633.31 648.253 1640.34 667.974 1639.23 cv
667.837 1744.1 li
cp
.921569 .337255 .282353 rgb
f
691.433 1677.73 mo
694.311 1670.49 1415.84 1671.47 1418.73 1678.65 cv
1415.82 1685.88 694.346 1684.9 691.433 1677.73 cv
cp
.956863 .623529 .623529 rgb
f
1414.85 1745.07 mo
1414.87 1727.43 1414.97 1659.09 1414.99 1640.21 cv
1448.13 1652.92 1519.62 1680.33 1552.19 1692.81 cv
1519.77 1705.15 1447.82 1732.53 1414.85 1745.07 cv
cp
1 .905882 .843137 rgb
f
1496.5 1714.01 mo
1491.74 1700.75 1491.83 1684.48 1496.56 1671.49 cv
1552.19 1692.81 li
1496.5 1714.01 li
cp
.921569 .337255 .282353 rgb
f
1414.98 1647.51 mo
695.178 1649.13 li
695.156 1639.27 li
1414.99 1640.21 li
1414.98 1647.51 li
cp
.976471 .752941 .752941 rgb
f
657.76 1744.09 mo
627.822 1744.05 li
588.696 1745.45 572.965 1679.36 599.891 1652.73 cv
599.901 1652.73 li
599.901 1652.73 598.667 1720.98 657.798 1720.85 cv
657.76 1744.09 li
cp
.807843 .223529 .196078 rgb
f
695.102 1745.29 mo
695.102 1745.29 695.428 1733.3 694.996 1720.17 cv
693.97 1688.99 691.777 1638.93 693.17 1637.86 cv
693.377 1625.78 677.656 1628.18 677.81 1640.28 cv
677.81 1640.28 675.625 1639.14 675.625 1639.14 cv
675.852 1627.08 658.25 1628.55 658.411 1640.68 cv
657.797 1720.5 li
657.763 1745.24 li
657.751 1750.39 661.923 1754.58 667.086 1754.58 cv
672.245 1754.59 676.429 1750.42 676.427 1745.26 cv
676.427 1750.42 680.605 1754.6 685.751 1754.61 cv
690.909 1754.61 695.094 1750.44 695.102 1745.29 cv
cp
.576471 .670588 .898039 rgb
f
695.044 1719.27 mo
695.151 1636.85 li
694.537 1632.29 690.637 1628.77 685.921 1628.78 cv
680.89 1628.77 676.816 1632.74 676.607 1637.71 cv
676.476 1636.8 li
675.862 1632.26 671.973 1628.76 667.246 1628.75 cv
662.097 1628.74 657.913 1632.91 657.904 1638.07 cv
657.797 1720.5 li
658.411 1725.05 662.301 1728.56 667.027 1728.57 cv
672.183 1728.58 676.372 1724.4 676.369 1719.24 cv
676.465 1718.41 li
676.462 1720.51 li
677.076 1725.08 680.976 1728.59 685.692 1728.59 cv
690.851 1728.59 695.035 1724.42 695.044 1719.27 cv
cp
.733333 .807843 .917647 rgb
f
1414.85 1745.07 mo
695.361 1744.14 li
694.996 1720.17 li
1414.8 1718.55 li
1414.85 1745.07 li
cp
.956863 .623529 .623529 rgb
f
1414.85 1745.07 mo
1414.8 1718.55 li
1414.8 1718.54 1552.15 1692.82 1552.19 1692.81 cv
1519.77 1705.15 1447.82 1732.53 1414.85 1745.07 cv
cp
.929412 .835294 .772549 rgb
f
1496.5 1714.01 mo
1495.36 1710.74 1494.47 1707.3 1493.86 1703.73 cv
1552.19 1692.81 li
1496.5 1714.01 li
cp
.807843 .223529 .196078 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.4.1
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (VSI594.eps)
%%CreationDate: 1/8/2022 4:48 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocN@OX9jp!<5Do!!/pA:YEH8H4L*g7RUuJcr*\3djfGK#`?T%F,!>=`@?l(YCC_URJXZV,*GVPlL&AK=!]URn*5hAfeKhn
%5P`FGWukYsqs<F:DdND2TC:S'B>HU;$Ut'@4aca_TD[;R^O,hU43fk!HLet3V_?qTq>/X*Vr*!=J+``ilgK>;g]-s:bMB?Ds&jgB
%Gk^m[kKdN6AU!bDnWWu!f3J>25Iu::r9<ULf.S2[fp+'X@=6"Os7!^,,r`WS.Bee]q*IJV4alok?:4/*kPjlc2sWuneSop+:Z'[[
%^T"bk;cAdmPPgudWR^=l)?2_pqg\MX\%2KLdDp_/oXi/I+2<*plD6W,k;t?;(\5c*iTWQkro*YlI@o>9QMg@!:Ns=fs0_akGE@3u
%X,=QCkMbdST7!,[EW"&@J'2Qhs2)Og0(+ldkK>LhGXg$nMVFsY^CGF<5C3AU?goAh]"`akik+B7h`PI?qWQ^7QKL@/^&;qU+FV1l
%>O>KEB=r-Gor>saG.n0)eLQ='KraEQZceXHnask7:]L"Wh1'kLptM^MXlHTl^\R0Js!Ji2+b[[B^\HUqc_%rN_ol\2U`BhS?$k_c
%YJ,G]>i'_9_<pj7*!`Ojk5X0R^OQ1XcVNH>d!bTb#BYoP^jO:CIX(C`a+&Mp+mSG<^]!TbbMU)2msJ,LJ<I+sebUmEIoT^7rfiK0
%.A`T]^@/W`UG("%@6C,ED@aQ(EPM%>MXL@>`pdnR5Pt&YQTph;Jiq2fA-;`GYFg6TN:.[.:&g85^M9hLqY8BC?CKluS#7p[fD+iK
%s6J3/EEBpS$4fA8r-&,*"a]9Wr-7g4?:1U9o2gFMh_%._GB/T`^9b#:i6cILaT^!sil2KNr'l1f*e!k^#PmI7?GH?q]3i;Mk>r09
%Hu],PX$8c'rV*3chRn.drVZ'N[t"7Ho#"7I?[NMSpa-dN9hb+bnbQU9.[(/XA\uG,nGAdU,$"Mo?S5%I3K$#c3OR#CkOYht5PslH
%ms$j,Ze%usqHLLr5E<MIF1nLTd9Oj(^54K+qr#/f>M`(dL\tMbO-%+LP^gl+2=:$Ba-T"SIK&Ln4C<#RT,79#7b)_R`QruQT<[EJ
%Eg(^=Ykln`*eiSGqW7/?m5&J74.c/sF2%Loj#9d5j]Be-o_lIpp\aR)a04[F+4IUs8M6<K;kjf1e_mKNVh5@Ai$&Z>3Vr^gg.>W3
%l'jookFM@.T0Ii!kLYd0qj1qkFuQUSq#4WD^OPqAq8^7a&$%W/D])Vt.,"Ntq>eg=YkgccOPTL+2<!$8n&s>%gV3VRV2PB8T:`e2
%288tQLM(Osl?)arqW%!X1h,$:Qdoeq8%uIGH]@l]B]aU#YMR[VhnT!Gc-rk6^\ku&0W;^4r'Vn&Zfc"5=XBY(_]>>]IeK]6):cKM
%M8t+o/dl[H>%Mf8>MA6lh'*5r^<f%?j?MFtbc<qp,dR*<#$X$<^+"!qq(qI:N3AglA=\1&+!Y6k;YbB>-GFq*csQ:[llpn`/bIR/
%ru@mkYXe[_HqbUlc_%rLpA7W>(5BPIp@if=G5&1NC"F`gX8W%oi_QbL5PtG62OhD&]%Qi_Bed3=r+D5Y/*j<,"7B40g/oQ9=:Y7H
%Z28dtdJhPE3j'9().(('p>l%uYQ"CsS#>^/Mq%[ZrUM7/)qZ::?g[POI/i?Z$V\TT+MRN-?[hh78(ZOklX,D=k^Srk.!QQH&btJr
%Z-.=fI?:(EIsL`c<j\LUB<D$N06ODna(O:%hgb=]nVckU:T#^CIO$98g;O!Dce`Peqm<t\\N]*kY9/8k9[*C+n%SS7bEn8sLuJ;F
%'CE`;PK-poMh@.92r?fHn4sQ:r4`aaLcZqiM%fp0mG4o=5)Rh<r3aSsLQFh34kt]X3(>8'7$`,JicX%sA%YN"aTtQdolQaBdQS]#
%mDB1^jcF'/jH>uP2gM#+q,l\i`KsE>4t-3T8h\e:m)uZh<`d8RX>8pRY,0_'jQQ9JhUMMA#PB4[Z/.BaYnie@5YJV0PFLLKelm"D
%Enp0:[t>[@G2$oHj5IUt7#uB0X*4#VH^7$*TZ]]Klh]e5a%bI7EStitEJrl2al0FU*RY)BM+<k!]N=nCH/7du#B$sI\ZoYjj"QOh
%*4InFh!+@u_2[UiGXNTeF(@ATa\hG=oB80pNdYtRYE&:JrT6)0*670&4!*;N\:*,:Q`o8XHQW5NLYVE+kO$08&%U`6ci&4%j22-%
%A^MpRAQNI.>t[[.W)nRH^;pHF18ssH#i/,O;F7.5fnUepN#+(0A-mjZl-M6t+&L]3P7r?X7,qh*3&NQg^RK>,6hF-bc!L#P1f"b/
%;aiiWP$_/f5QciQb.#kd1+#C"/XiV9(TB=0"PT2pkTnPJe4\)/PA2K/-YOpY;,eXa;PKr[Ei>Qj;HLuW6@B#s'r\MQ[8pFEX[^RC
%em6X/3"?H@:kqo+XYcG\Z`QF?,B%\X38/D/em%INU$Z_kj"4GQ3K@ka\3?i#A[\%.*(O*On]iAM*-jR*NmsuqER_H>ElWBoYr^Te
%%_:W5cF`N=4lhXt554O1Nb99,;4eiA'5[e4V671^%oK]*2L>V]jHeLFMDiSR9sBEpU9%R.]*rP>9V2_4#22K;M-)L(g'%6thclk3
%ASsQj/R$-cb$(hS]qTupTQRSl\dcrSWF<4rAn[U?VMSn0WKh";P%^)kdQ<BL\\=khk&Hp3mHGd<4Om0+SX(MQ&PnF/G-Gu210]cZ
%a&2<REi4]JYtYVp;uF1l4+?1gnG/+E>'F4cPl(FLFp'lpV22T+b!Ff#9O^[\Z#\ocf/25jm2X+%EO9tbfK;at<"Vh.bNG>Jl6+.7
%8n4h(FA8l[(j\hs<1rA'Ad;1SRGL!V>'n_$_t,A-<mXf9C+8\c6q>?FnuG@r"Bt%4L[$)ITdUgM[?'SlBUW.?)/'au'3qK)".DPn
%'[2'NoJ*ChIU^Tr`F2b?)oAZZfDp3)cEGf*=VLFgH:m[fNogq-N@,F<pG9IQiRKK/kc]f'K"i*D@r:hXeWDd\4ZW@ZLaA"pY:gkS
%G8tQ$,O<bVGi.Q>mW1L<E51uSrk=0Cn_WI.4l(*kPhXsIK++q9'.2VV>CX:K*lR%)Z;>1R?MrdUE0,Y'AP"K5Z@mkbhsM"12S(HK
%74*!/HPrGG)(mj'MIj12UER`=pGYiZ_*OU`CRH>GAkeHaj0,#tW.PMsCKZjiXFXO:?Bfa!A4@VO"i$2ae7Gd`=oX[f"#Bnq6?"]T
%O#!AHABK%_kuDP[/Cm<*%H+9#gZ0bD@8DgC=se8'D,E]65]]>uE-uY.5#?@D+cC!Q.<mG5#%g=>Xb/ip<`9S,a_(k)9QUr\Zoqh*
%R/@uIKOta4//O++'4mNk*Q9@XdM*uHV&A7dM;H.$8W&?8oq=hXN#\iLQsGgbNP&!8566Q';9slp45BBdni58V*8$roL'oerQSo?m
%C_%WWmkTs:3n!;LS)a.%?OjUkrc[I[^V/Ye^@`&>pE"tb?LWd+nU<aGc$^,5j1We;qmkbSm:VFL=egAq.%`B>Vn1o$NUg5II+B^<
%29Mi/UM5t"qoPV&f+/t5ec5RBhoGcfT1"',F8%9Qgf;2W5p!+$DOKraNX\1q?f'na1J[r^G1e%uNS>U&p<feKgWfK`Q:M"9]Bl_k
%kdC5:'Ce&gpa\"IFtm8;T@;rpe)-.#Wn\hSZ4$(ML0cgjSGmD2PED3E5*5pE(,3g#3Z*,EpWk/TGN9B]j:]C20#>9E.REuCX>nh@
%>SlH<Op+AoP/CUTc#D-n(h+i4]d718i%=MKSg@1H>sETuZQJ>EjW=6"s5"7,)J'AnaJi1*!W9jIW'a,,N0**BXukOaKn!>GP+Ufa
%k[_5*F0\R"(+kluJ+sS#.p2r]`k-$-iOJ@f)<(+cL=U=eea%X`>M:$Fo[eQG[eg3V_l(],6f]WDj$Kb?d8V'7,T$q4pmN>pXV_-Y
%"Rfet!;$_RI&ht6$2'0i"0bjk)T,F]Q=,mnId0V/3L$:i]@h_j)[;FB))_g;O@DbH!MI+0SSoCUM%%.4HAn`?+<Z&IBeTnR.X]u%
%a^re_Q<SuWRBRlpS!fGfQuJea,mR-IR;!HLppI&\6DtXhVZF"3nFT!8o@BR/[0^4W_<QX.L1hRRCgbhM>!\^Xh?!I'QQPkGd>hEo
%NXj+I#P.oo(cDW$\mnnaq,fP17H'8DEtIZ'4"BND]ukc6"4(6ngHW156]?55iOIA1\o<>i+a4>:Fi;`rmW^)U\E!0$htP8n^t^_B
%eLV"s_rcufI,`#"W"#W^EJDdae,?9MUCKp`N]8F[&:K5+OHAKR'W&XElO2\CFn#<T,QhWrc^#!,B*(i75l$!!h+.iG%$2859Q`CM
%HOYO1kZ\/GZ;b%;9f$X0@tEtYT[k79#W7YceOYMLMhW0"0:(N?k!PMM/PG*G8]Zd/`>cD&k=L-3S+Jm_8U[M1XLf,Al<UB:9DY78
%na-X1Db8iuS<.qb$JsUqe@SW!A5mFJD/VYeI1EgJ^!<sZ]_ddPhW(^33W<OGOd\`[[ndA_?#P9?3Y;/tYU"9fB'<+Sl4&<@.Pj*.
%bROcAN\]Vq/1IYG<\%RS-8WtUV#u:F\&1fF.P7lfJP(T\#V*q>:@^hM.1fI!"I8D,PSQLjOAZp7P'@mL5j8tX)IQI2@+#f]3WkKc
%5$3A,>6sI+HrTJm"cZQ%OkfIH/6ZGU]3q<Gk\#;T#.bmEF+))KP&hmm4H]D^n"X2MkR;pm;(`r2a#ebATuVZD4.\^iHWa8$D,FS[
%lbli\;qj.6aqOEld>9jmNH6ZiVi#DSA3,"`3_.RYHWcq?mprRH6&(jBh/b8P]?,A'A/1+[9`Su_)Q6R>'n`uJ!Sg13gc#>rIe\Hi
%-r#\C9<e;$E;0#t1E#BcrC$$0oTMW!$@[o)HME!sa-gXnO]0c!`k%usE`g0:f?D!,m8]R3QmX^33NYHn'qOTq>:'X'JPs0nE;;B!
%S*DqG\4S>S9[c;Zl(OJ&I*l>@\l\iC3q1_9FZg4X/;s*tc`gp_dmt-hW0r3RFk"r=:6'^BSGeR3`X>;HoC23.W3Pf<gs:XDC?g-c
%a*/VGa*X?L50&064)Qka*,fL0R)R\$HZ(Z2$T/HLFlXb4iJH#V5LPJI;]?m$X]$U`<KTlLn,XjSVa2TFJ>LVLV?.BMUqSl$WDGt\
%g-F%T%9A=''M_St6=LuuHsk>F/>Go%&uuA[Oa?F\?&(Z0$E.I/fW/TZ>&p+dFG+K;hi>gX(ATX(QGqO)K'>'BhSeDdfL*W@gM_J'
%Fj\UJ(o_A4\iD\19sbB$acS1qn_t/+&%Q2CY(,2G<hOU")#bS-n+Si&mlKNiml]d8a5QY53;uL1cZac/j*cMmN'-a&'\fcJa&\H6
%kK:1F.WG3F`:gA;_jgSq;QShEn$!.EV0j3K'$9#j!#=oMAed>ZOqr_!<EsLBaC&:SE*?LCksqmL$e1J(/KS#lPMaUT.7M;OS"clV
%l')rW>t^gH;(.\fj\^;%i,i;f1k*K.WV9)#^ZV5=#C#esS14mQDqs22(B#A8r]nCWc-Td,H:_\*8Y5l&JG[an?EEV8&fA$j@=((>
%hH45qF49!Kd\^Vl0=V!uCUL/um:]VJM?Ve&SICui/7>f-@F%tXV(m8LFm@@uHL<M6VKgnCpWhbm4*o"-oK\TKm3@o1q=5`Tr#Mp8
%?O$E`c0FtA2]d-^[9OO/aW409nWT`=*VJdO)!>q[9.'MGOoB7Ygl1]9VCBAi!>,^+*6f0Z=HMXa%'j<)9qtCB`@.Ka->(ud$o;Sb
%`@P5_AE_obMQP)V0nIOO]:Pm$SWRqMZdcW+-Im)S:cDu5%?j<lT4QY.l=pc>0,<ioPKNPe\L;ibe#s4d51%AIYhG0-SH\JJnD/PH
%mgKi[i*G3+)7[:jaR5_[3XaLBL?UGqFH*!))i!F6(528f\7pc$15L+uJ/L[_[g[=$gm#bD0'<iB/?9LP]s;V=?;"3([>5qY6Gbls
%f0Q3e1l_k<]NjR-0l98!+)qsRCnn;U+WN+EdpnO%%73hG+[TI)3_:tr-M=4cq*XW?na#K]&aXHP_-Tj20o<n<>#1kP]ULp8Q>*^t
%7,m6&mq+Y@Ca(HpLf7u30PeEL:Hp/N1A/-R.#X]Q@O,18AF5FW_kP1kmW#?,MN+O<Z0Mq,7S"RSMk$r,.J6E_nAR9AN^YHO`RM7<
%(o[i]:mC[.=W_C8S/->;:QCDr-HbH4c8)u?rOGm\8JNOqX=Gge>t9A<YpgGO\+-otHQCRer+(T>E@>X%k!P9OM(]oN0of`,U75#?
%DQ0snf$&]m%9bIs+/fW9$V$m0JGi@TZs-qGTJ;!"`e(R"9Jb<OeRB7g-ES0h9pTG2a?joEit$r.BZpKgLa`Od/0$7%TTK>,M@&L]
%XM^F6MUOL.[pmI8CCh&&Q5(,J'#V#[HkNlYs&ZHM5Mu#2n2pUYI2pS<#\&>ebB>V%1Wso<XF&,m(31WrVHXoa]3^U-"O[Yl(?m"r
%ieCti\"jd9Ee2@Wh&GKG/2S[#Z6GAH0sVu]KEB++X3X5sGU\iRjP&f#'XCr,#rj.Ccm(8X@Ur3?8L;/>]UM2;E&0"L%sH`g_oN#:
%bd,kB_t%Gb5kNElNp6,>O:Lmrb(2i>YbE1H-JFo?i/E'AKQ^`toQ649@"Sqo_?B:NXO\dU^ph?gW!M7.Qm_b;&&%#G=(ICkK;**0
%W7@W`Y(gIE83=,sS4s#(j%m$mT`c1%2=-_E6k9_NO-)3o6S4RS\IMSae2N?!3t5A/I[RO[gT_GBN'E5qR-.?/0kZ,4b"7Jq)A-a_
%RKXj@B;6GIa(]d,'8Y=pH;;@G>Q=@Y!&]@,bF`i?3M2#;$<+)[*B#_8NotlfgT7#'@\2%9mW]U2\:!'V1Ipm.m^"O>)g<?ITHPCs
%i/UH4aLJ-KN-F__F^+Cm/]hltM9F^.nD=[uWKF?10Xd<*qqXecl^GCX`HbE`(/omdlinh:Ru+d&Q1oM.2Gbs4XcKhqEA'/Bm5U<_
%r(LKk1M(F]"FVVmN<HV`+U/$)#aQ+#*Lqs.S1"?>dshlQ"^$t=NO^1U,[^bm7Nuf[?s0&b^s.6J7G_rp;Xd3b5.i0n=H@<&E*O[m
%O5i>W\@s7@G^XCVe$gV/T;;k;*UcN9hB!JsLG'\^;>Xl/ml9LV-;8[LJDZlN#1!C'-a#EBbg/Y*96fnl#k*ehgH)"6VY+'3/?_iS
%pMjG]iQ[?0463q6^NJeMDZ._g?QIV/[kP[@o[h,D>MFf2[`8R^&?Tpg0Q77bE,rU\NTYb?hVUGq++?m[@X[#BTXa$lBG>pf*D_9@
%W*kK5D7>`mN.M;bBWB/Y\sc;g<RXL5H"NVs3Y7QX$-qATRLLFKnr?Xr=;-n%[n37r%LSC6,EicGG]4dME)#hp1<hL-S^:Tpi/n=s
%2b`RRisj=40UJfrC2$8?oZKu"jXTe@gs*XVUHt'p7._4K9T%jDH9<&2W0$$>)`;'j(At'PO%#\8^`Rk-7A5'IdNUr7@4:a[iU+`s
%#Eu2b;oW+ChW9cdYE-2M^4gZED%%]1'YGMY[X<\E%3hOiW6K(P:@+dZlbfn*=<'GVM_MYs:SQ'TOd*X3)!,.0eP%O8^l$([aLhA-
%]PGl</Yln^g)Yf./C<]CV%:2Cgt9<RKt"Nf,-c\sd+t/b*I%-FS#D%)D*pq(T3nGP'fd_,3Hf^=FlR@'!?0uo%R,&2c>)kPN?d4A
%;8\>)]QKsoqeBH'k%'ad4QD#SfYf!#8b9Zbq6`GtIm1LEkuXB;@=68/>*4hdSX#J7gfTU$EYZ:1H-p84#dGTO*G`alHs1sB?$'P2
%mUJTcM&1RZq7!jW]VTCib<!L?F-=,e_o6BW:N<k)Sb2GmDFl*LH<O&><EO"5gT:\!8@Q4!_f-XZ?..uWg2T3bZO`@HHuAZg.sG+(
%k=KEX5grC=;`f/<[r1Tb4tY<IbT+mAFR+GhCr0m030S9DSLrApHI@tH#GXdtEjI)N+(oPeMKc*m(%Se6C=0sI:0?=`AKS_p)%K?9
%3,n7SQ@Mbkkn==n0GIs['A!XX@$S5Jqnk:k[RJ;P\,cmMab>e+L]<[eo=sB-^%#2S8,)\n>\OQW(E`!)Y_!?DodB(jP>1Gd,VL#m
%-eiC";.h(9rp[b*/m0Yrr%nLoB<B6Q&Mg@L7\p<>E_SR7dY\j$>WM<Z_'S5snDJ+O5aZgSf7]'Mr54/Q,nedkW/ZkR/)UWt+`IIt
%3S^lb_#iGoJXZhO+_^K:_#S=!@$C#W\b66SA-6I6g;[Q2OIoTYYELiPW>[.@)L!KALuOmRi$A+\h0J(j*+_.kNb*:]4-*&(rsSu\
%LYVEQVu4j#XnrY\LYQm!k'AW3@'kjr!`52IZ_C*"SFWdt['C@?Oh?RJ36,0n`sV.'f#D\23hr^%<;s&XEEG!NKVag:2"*='M6m=(
%QL'1_p:WDND^9W.@f,T2*%;)B:'bqFJeA9Y,>,<+UK*Q)7';ZjF`%Lo]"=[H8aXod1mu>h)9eD3?e!hq=:Ji4A+Lk1&#Uc+9!X9r
%ZSS+3,sD%I46.NUP2;l80rKES\2GFX(OH\?\";),,)bIk^5>#2H&(B/pPkt`[QF77;+Yp/*ZoA<HOk3E#slK=FD9OH_ed73b]<#P
%eE%tummA`-=DP*F2"h8m]sWL5Q*Juq\8XJ>7d&`lWT1@W&G^E7kVOZRo4k"(&cI0iL!J[GMds7b(tJl`PEB1K=LR_h*K9W\BOejs
%Tjs!@be5V+>e&jTX2r3:SR4A>Ntr?LU#>T](1RT@^+$ZYJfXi$s.(Is\rK@PB.]]E-7h&0GM1Y]0.uH&oQjWY,he2G*&``5Lc&En
%2fgO"=T#1tb<:uo+O+5RmEGS$A-#JIN&6"Ckr@@VPX^jJESs9Fas+'5[Bi:sc#oYRB+64VMf`]EZd!K3UQN^0X22*F_0.Y@gQ!`[
%eXe5U>n.JTq_WoDEFmpN@q70$C[@XUk&(E@mcQG#3]O3a:mjBca=)tI]aiUT*%[5Tj4Qsbh<AY?noWAE#Zd^:mdW+C.?(J_Fj36[
%K*S$:;PIX[`f/X#K[R,XOY_9_%+mQWYS/RV46SAaG$iL(CNW.C12Wb?<SDefcXT_2!7P%:QWTt'_]W7/d[S38'k?7S9N:Z$@]6/<
%XtJr^g'bf74gH&Mkm?YbC%"II/l0'<oaY5B*H8?P\!F1j'HHGkA7X-E0R;9IDkB(!BEn,nLN`0n56JGC_aL\j%QU8OH%ThOZ!S<H
%"I:V&ZJ)-jSUNRD0h)>P`)t<Z.A,6gSC!YYEN,pu[f8Uu4UA@B3o4EqJj0.D)nJ+d!@lNu!t=C]OLORMY\9t(3uq@Vh>fQ+qU=\(
%"eqED*bN$m*TeCngV!rmGrA5j3oY:C3*j!Ml"Q5]@JhSi$qRH\$"0"q-#s]OmY+%^**J+i37jsI;9'!-/\8:(NQlLi2$3*]2-hKO
%mV'95?/20ljP'>`^""FoN2pVc"n<:0NFoVF+5,p9au*+'VTu''<!u:$B+\jd!`Dg8<rp5kI!@"=.d$[UE:P$sMMX,@.B$qp\PK*:
%pF(,J.s#'Tgr505DDPji\GHa6`k-J$\#c`%^EM<NM>\ufT+Ug#U-;5o7gj:#AAb_Vqa_FcL4gK9Ni*JhGK$ITUJlgg!'Wf&%WIYM
%#r_,V1NW[,Ktp##UbKW<NueZVE&c\%:G`u3/26DMmA&W'`e1*<J&:`+d3)rYPE#q2MS8J7pgdmOH>q\qlX!ijj16ViIC\dj6q_.a
%k^%]]qfLAhRp!Jnf@dL9<r5ncY5>]1k52`Ff6t="Aa=!6#R?L2kj*A0?`)_k/+uX$M2)URYHRhOl1oJZYC"$f,1c)Z<uRVa#1fR-
%Y/p9^,co%<-R:-N6,pil1EP*l@Moj6qHkoMA)J)f(GQ'MF/5.-;]>>A(CP`MpJQ/(S^36U"/-"&jc#((Jg;QZK7`%icM`)rpsF!X
%jT;<Bc5c^=oN`e&hJm.V`tRY8Y"8$@fW/eR:Lh'ge)u+*\Q-f1`bb8tpN"(@D<54ZDWZC&lR";?il0P^1QuON)Q-H)BtadRXM/Fh
%5SkXU%"S;pT_0:nOo2$o2JCPX*j4s_*.r^[YK%TIfrC>(9\14n'E?ltqFks/,6?Jlg1e9d,np;?$-A^VYEoOg-StO6JX<4l,L*oc
%2d>-UH+W2:Q8`(*nR>H:8WjkuOsP:#(>GFGHuhTc^pgUt\+SKmhsYg,[aNaq.->e;X$g4LF8_ujGP._YpKRklEI_h6UfoUFL9-"T
%"gN,+P&RoD6m]s,JZ1DY7IOO1bFdpG<7[q_4c`NqI-Ht>X*!YrSQkQVEc7ht>nGQ2rcfAeli^*QFhlcYptY$phQaEM9)5&jCl8b%
%LtD;,laiYaPqSQ[9B]1AQ/`5-)LDQ"e`,GV]jAk=IeWj'Vn89/4([s).<`9l::J`LkLJGTHu>Zab]5j!e>.hgVO>Uj1:]mdn[JoO
%?E3ikSbmC2'&bW*`DYqRT4=j1U!'mgXlIc`P;K4\'%@+SeV#7:9sNWTCQr:fU+QUR$\mA2Y]q*O1@M\^kS240BV(3[?jLM8W;I80
%j-ZR=EdNP6Y/f)K4&BkiT.Y2LSW9teOjga):A8BG/6_jb2F`6p/[-:%[i=o,V,lMP5[$\-#Y;EBOHu$I0f2`%I`Ifm`nBU:Rd8?t
%0-m_1"(Kb+S]>6#<a2q=l9gK"i9<-8gaM<k$Ct*hrR,rC@d<D@-J"sOrPjPM$lK^OakpCFqKcN>[4\J[EAD[a`I5i+"g!+mcP\Q"
%(O$[&AX]7Z1]Fl";Q%@NEmG,*gI5q$i2Y>-+;\j:Ks"V-k3Z="jr.Ik-eR]BKRP[G/NMa6k:657?!t-g^tK:&3m*=t%?N.WG[hHB
%gT:Jd[bGRAWet(g'ig5,<Q/jY\#_cLF(N1*X[f/aceOBMAqd58R;0%cWKl]oMP_RZ4cp_&Q'_If9DsgG^'Bu#Gt`T,';*=`k:uM8
%1%B1?V>femkEgD[Wd^/a5!DJ\O2CX)OrZ`B^Z?96W$s*"jbI0@\VY842_Lda"WNfdP"B=V_8[b)cJD7pHc\I!8=X<.IaI1W[.QVL
%Su39Od,cA?jKg,K&%[.!&#RDN_j\:&**uf1@frI]6pCYQ$_h/-Kn!>u-N*YN^#t(G7Z?MKC3&4]''-eUs(2/>(AZ:+;mZB`qjmXl
%OT-gT9l`_KFp5%-nr$K7(NDI/7U1fWr3,XX29D?"'%IJR*].sjJjmOl-qKY``o#6\k%mQ,:uZCj$+O"GTAV'>bO!5c(dl`@m)D23
%ita_g_o8@mO1C5[fFP\brZj.[5PdN,a_Q:>1^V:DBNYN]7OERZ@1:#FW;sgNK,^RAfhc!MdL#FmDn$\]7/..k,h7mZ+R>V.%:!qd
%ZK@D3Q2:i)<]6^0(o:Ikq6YZ&fM4=0r^qC?d;40c+rLTVDNGi@8d1E]iB>7[lc"fM`p0rd]]G.K[bpFS1X%f(Ju[SI:^aT]iPgeM
%G#*1]OS''keEu%0AdO00GFFrS'a*E^RhQqM=<,P8g[6T@ba9oM3hKR:UJ\d+Q&er?0LD]Q51p?-X6K`0ZDls58tMl2-e\@1iK]lj
%`kl<%k-SK/=-!Kq!I*E<.E/_<Y>-"e3go1J:<98*cV!d/KMI\e]obpG,!97LRYJ<j$"icK3$N5GUa`3]0eU@7fZd,sj5Y4]p4Vds
%iHT;](LuT"/B-(d7_CGsO49*j_82VOj%(P:=KP]/&6@:k%GQ0hi<(EiC=:+1Nk_'o*V\gd,DEANfR:\]+B`k0q)=8p#4@Orj,W2J
%)naTij0ojilZ:4)l>sEFDu4KsgP7Qro^A*]M"JY1/TAVc&>1l\CBlS9OfShEom24)M:<#8qY6p0$*6Wk<AYis<[%*8,5Xo2$jNe5
%X5ma,U5!!a-cAp'[8>_1'&n)BcQri?as=,Mho5.is'(cg:$hX\\FKPDL?1AirrXcPEqR0+,W]K_>"9J`nIjZJZ4_/(]s*B)XkAV&
%-,=uLZdt('d3;bHM9)DpU,3&^OYRIWrh6Uqkd("t[Bd>,)gnr1=Mp>XK44"U44-+BJZb"2B/'7B'!JRjB!V!<;%BMCD6k):Gea*6
%9&*,.X<fVV@M9tIU&"[44u"5qN)@Y_Z!V/CT0u(;pA[0OE>kl;W</aPn<9_g`[k.IKj.`t)7*F6/XEZ.9Y%:c>O0ALISCimMHVRA
%kAqn$FXZ=P\N-c\\Qk-"M1:M"P]]+r)7;'&mnTI:&&XNgok9Pmq/JA,j#ifIc&]i+=NJ"of)/ViM'Vqu>g8>KOj64Bh(ShQ_u<SP
%KTW]Djpp!emH=GaG;,9F"0TojRrbKgI"u\XgS[-TY^hKOQ?=jU8htP90-I5i2[GgoPNP#KJ'dlWmou/X>Kjt17Ekbl(Jf882r+#c
%cNu.p'3IFGY^B2Rq4,7k3J$:5!mBa0QHojgT**Q7P8-9BM9f\ko9f<C_"+H;=@D`D2m6P:q>/df2pYh0q.Dor48J4"4FHXfn+aMn
%^\dTlRl=,M^SLnuX2`(VZm["YpnI3U*P^A)OKYZd*]n(iX&N?XV;/8cN2U#5ri.62=nnk0rTfMo_;@K@&&q&Mqr;&VkPln/rgtD5
%M_rrOf=QP/+)^i?6XKFImX[Ej2=A,(!V+hFGJDjfkF;EbF-A](gRGjos8Bk.lSjT3:Yn3\p%%Y=^[?QRqm$.<c)XplG@+VTd[K[Q
%n_7\p?G1f0oD$H-P(nGXqe+6I55O*a-Z=IFqnI-is+C?@+9.s_d(::ibC=:m:N3HoXn3<KZ]7ak/*O%N;RQ/;a*REe!E3f9dFGPo
%0j\EGfrTU2]n3@6@Mt[kO`rPuYJ`&pdX1r8V^qn!j^Zn@]GU%J-[MVQ-H_>-'SG;b'UChm//#KkXN+W5m0`2O4.jYqm4n)'\.iE@
%jOSAK/+JY*S62t*RKntN/,>,HP&f)^kotsc@UB>Q<-6)ZaR]$f?&AOd44,*NaiU`5]LlWtms`d8ns-.*^['i.MFG+/TZ+G,TJCD9
%5Duq`C]-ks4[)Gj\]KMAoa5paDr*l@mTPbA8@U4n8Eb'FE+Vi)\o<p'?gV%..KOCRUrcLc&AYZ>2XFL6oFM/!Pqnf4iR],K;,K;I
%52+,^jn@Q/.KXn_jS/dBhI'S9cN0l1]P#&pnj`1217Al\a3o-<CGQ30R]PKk`kIrjn)[_^%i)`sPQm3MUjX#tq]%aEmH!C+jQnBH
%.S.MMQ^^!\7p09-Td`H`GaIN#\75cQQo))?n<FZjK[4V3TLBLSot7\U6n;mTZ,])i)///_=XfLZ6X1o4$Ef@\;OEdtdB0OO=>,r2
%EYtU:80:)pS_ZJpON+,'L7CpNLo\2K0%PK:3[N37O[&"IEFHh2\*HF3D&q:R<L,.!5Y!Pt:-R$.]u`cFCXJ)dK1C)fK.,uu83\qm
%rurIOH7"IrDloU*ccFa_Z8CuYQ5Sdq4NM1H[>[#i;$M6`fZ(X*EgFa?A5:2^3=&NT!a4X*QRD%?!a1:jMb0dN^r+#hk]ds,B^iZQ
%b;(R7.d>RQ3PVR]]?6Wl(prj/^%"U\?lAFWG.4NJD5>9b>'Fs@H'ZZ,R=AL43c5=)!370LiuFE-!'mt67Z%\+g;$B5%4.VZ7&=Q9
%M\Q/pLr5LF-Kmi[WAI5Q=?Vo0<')D#+hP.%WE2ru(?l64.NL"Yad!M[jLqo])r8[k^l\8a6rjcEUbUu]]X3-R@=_41e5.>$3sTUG
%^Ik3aX^hkY=*iX,Qca)FG*#dJ+BF>XLmm!^:94V]7$4uZ4#Z_s1o>B'-r@1(7,(UJ=4,Ka?<'ISQt"RB!O&FD.cQW(MA%09OCZBi
%K(=gL&Y5TXoH;K-91-2Q'h#loosfpRTs5L^*[(t5M=Qk5!MP=hKZ9@.eAs9V2%cW9U+DlV"H/L$;;(eWTX*/_jZCCEOqZ6^:>/tp
%QFiMWON8p$\\uuA^TpM;DgH6RKagsX,ZTe,/oLMsEiCSpk[nRk3\H[Jj>CKS?=>4l*F9s[kLlBR`OM8u%IeC*dUXXD<u06t=@d^O
%PqGFmV3gFI]*oMqS'lk.p.c$&d@h!sapJ>YRP>i1LH),<n7N0S5$e`YL4L]c>Xiqf7moI=,WTsn.$c8PjSQrqQL@,jd8'%IR:pW]
%Lc(pc2%&A@6[(q34Zp<K[Fsopfe)43KGTsjLtie3Sl)^%9!:GsQc^_C4'$VrD0uI!4%+UJaLJP.6Ru-I-pbIC\laqA"=SHg3Qd_^
%Ug_Z%7('<kA2'(4K4ToBTOLZB%Tk(o]mN#`@@V2+D(t&u>+2!,Dc/9BC$AJ=h'o+M?gb3^b?@Y1%!j@Y[Z;j:(0<kX6l(>)>>CF8
%CcIjL@WQlAo2W5^p^]XndOlOb7o"%X@Y-!21"F_#DHu9*m%Ym\%nRGl9I(L_T=?`;=^<:T?&(^t(7%/(M=U3@ZUonX4KO>A.^3U8
%ahp.c@NpiK,f;Gtk:(T6_sPg<o!$!#M/`YEm-q7'VhValMS9KN#CG@*.jV5.?Y%90[^MIHaaMMtU6D)X6.[tHkotteH`hd3fSLkT
%q#XJi$*t'C7Fk4:?,VM_"t8[>bY3C#ZC&UbA]M;@+pp/X]E*=KL2H+=a<P/pbO'7%d=^(2"!?H*S<l.ZI5JN19D#/U]MM'8^,*P/
%$LD8*<JD,%EH*.#lo`9JN.D8H<^'<d3p_p+M^N*K^O/6SPl`04@\(<=*(*R0b]"C^WB.^jrZ3u'SB&)PLJbEOaEAl,S#iUnTCq5(
%Yr:!hdeAOuUDFg_^3m\ZI`XUsm`W")'%@EC&!J<PA8ohO=I,+BX1O9[0@,_4QaoIT!Nh=Ld-Pm'K3m&Rn1_esX?aD$]$BaMWJj+e
%Nt,VdEra:5O#uY)JfqJJBtZukejRZnCM&4AP'mK:RU$rl-)?&?`u`,lP;02Z^*n-Oq<2b]W%Ror@1a5[AmHpfWL-%.^,uQU(tF_f
%ZB[MJ1:_C.`>Va!$HkCCM.i-n3?feA)nHq_OY"OELC/,\,RnN<`iHg+r$?WA88,3QLGiFDdHY1DaZPe?<cb-_2$^l;D-W2]%i#RM
%$slhqAX7'`B1suKUi[_k3Oc/],akNCF#gFg:3T2HX]*Yg=hLOkU`CpJM#eB&I&TM5.O@!W71rlC/s#WrE%8"sAmL#AKNj97bL4i6
%\RqBCU3Gu[fNPZOdFBplGa]0!^7?)AOqkR[cYgR[93F`W3hD8,pa'"K8OO\u'*K%^EoQB2A.U;0>n+&8XL=g]DJE$"a[qf$dGPR'
%cf&)5/p8Ei3dJ<<==0_cOPpcD3?Ph,lV*?'^_:9aW-M3S;b?U`]Mdq<o4+:,]L/UcbJakg*>Ot<F.S!J08S`=`ZUMlN9Y*k39G09
%J[Nn>JaIgPp%-%M^'hLHib-]\9cfjS]).8dhRn=2o$=p$DJlVL4SdsTmp<\QN0@$\$`>rf#'$Pl,`O2;@TJ![K34U/7]6`]bkWpc
%;e>udnHe5*rK;TXV7BA`:HU(GgiR4?-oMq<'k:*%ZI0^XLBcI0TXZn&/Z&Pk/j(,R^P6k@p4c6L1%@>JWS!,kc9["%nRO$uL[#A*
%K37W5RVGs@6LISpg[G(4:&:L^n4E)WJWiJ2Ah8Ee[mYq3mRDqsr6pJ>N%`BmNeC/@dR*5$_;BJlf)An[iF!hE6:!8+kDl^Bd`/D!
%jiGgH@kj81Y'EbVE=!!eLW<G#`CpEi$H$/h"jB.YO/^]@$j4BZJ'$Ud&RaX2O]4<>:r37Fl"&K_*h2H]LD/u8FGH79aZ2>!E"i0o
%d'ZiM=6.QLo4.oV!9Zs\-'W""DRS..X(Vn^p_ah4*8X,QQKE1[Acn^a!$=rB5_q,m6]0hkM%S,k]GKE5.^/p[i2(ZJi!3^T]e!3U
%^0[#lmJJYW*Pm[!:<d&Be0/KU^E,JWRi'eDZs>8N?.*^]S5E:DBOiB,l]Y7UX-XG]T./?Sl74T.nH`6DYq@`&X:n]i@<m/&p#N_r
%0b&lZr&@Z2_dEfPh$4A1]UU+i=GPi:)hF;dJ-4NK<4c!tP?>$:l>Wje5Y)`-FB>b3eB-ngM$t3bfu8OT]b)]R==bR$BE1TA#YL<]
%Bn7DYg$$fLi62_q'Y)1T(AJ:RIn7MEP-nYU!(:4>l/L#:0kKihJ_L]3?ZTucQuj@WO>_CTaP0WDN-5[B7PUL@g1<ub(=6SW)%k(V
%RF$"0_2Z8)-e<,81'3;+;L*#2@k795O(6^sR+J(%A\M2,Od8`EW#RKIAW_a(&tfBe:j"J0UA3OgQIaCWNW9kdb`Et@Y,mu\HK[q6
%8P!McfVL@g&pbJ9XRm/XXpCL$&kn,rqRCn3G#^&F$`83eE9s16[@j<FaCO;SUcO$#&if^c6s0P(-\r44K:Tei(DY8=_cg?i$*ciH
%(!d2'go2PI+DNHc4-:LR\od)=[pV)965BVZ']EZgSH(T;<kT.%7aeNEhh7LC()7SloW/obfFq(n[ELrS8-H:8JQYA(<P6F59bpYG
%Y.RP;$2D/A\#V@?Hf5o"6-d\u0=7HA0h_7BIUr*RS<P>ZMXE+N%,a;P`:PJJciYJ+c8A47b_ANB@4C=Fqdm\_Uk:/@9JH^iBb1HO
%A$S,l-n&:N^Q>+j6t_mD#CeLJHt.::J2e5j&6>2Vo!-VF8X't'.S+6_ac(p4gH"0uPNo!8VF0M0&>rb[1Vd%9O7EFY`MM0T4V?ns
%gPQ_/*XY8"<&(;>#QCV6nOWhalji>!QN@Rc2mkUGI-NZd#T1TaN"_0-iHL-jABpC;8G.-h<,&Q"<T&O)224jKnTI(I,?e:Bm6mJ#
%0gX,o4%Vsm,";,P)d6<Lb,H%%-g0H7Agf)fRXnk/oPbRqMjP9&,mH@+.so&ak_tlD.*BAVD)'Pn4ec=!5/t9@/,"-HR-+Km?Lb^j
%!<3$?-`U3r%LV.9N)l_0/e$;I!Uch4[ceh.d@%$Dp3`PZi'SY"-e5)_-qX4t&KJSi13jP(+dgH/Mj-2*]pmt)N\o"!)7KsCb&Ua_
%]c\_g$TWb5AuJ1R>u+R(<^u:I=agc'L1!KK115O)=@8VM0Ij;e_["8M[WG[kD-S$_@]'6BCg<c_Og`T?U'p<bBOd_6.`o%Q`+H6A
%YL;WKNee2aG0@R07`]?lHRN>>`0@SM&&m9HO<jGGGJ;o.!gsZuVN-'S]U0jf17JEq9>q0NTeRDuCks%M@:fL=,d*-YCR>dcWG;&?
%hCb)uknqB6Z"Csh(WpPloWL:pYD?pK\f`(_<M&F\F`j5gOD9-U0`4#;9On@q1'3Ok;..FbiQcN`!6_7>3n#^8lNeaOW'<E$$kS_*
%)qJpE)Ib>BHb`UDkD1l7UE=8S6U2(-9J0VA1JJH>)E\k+#Z.8;jh5J`6)lXeW$5oS<%?mFOW^_L('PI67Wih\IG1b4$MNFa&jOSd
%74]:06J+^sVe[O6>Ld5YKV8NV*"<?>0*OHN#H49*T&LW=JH^E<bR@UGPY`Z`b4dUaH"e@N!iDV,bCP4X=A[EY$-!-FBYja-3P>S0
%jYI"s1;rai-PQS5Q4);$ku<AdW0d3fH'(s/22!>lN2qe;C4Xc*;>"q16h(()UJS8mA=aSL#8Z^NpcfNJjC0=KPp\nL`<UVsYVGqh
%3NL6n(8VOqMe+F_![G#e!\o#`FjN<-F^uKh.cZmZ#`JfH19W4]r-ATU@K;To$teQU3fKi(Cm\_'!8aZ6#+2/Od>Nq%mXh^-l)ol=
%+e6@SH*U(OYYB)Rag0!rTVb)@?Yrgu4@RL)&.W)&U&tB^nBDNS0)+[+J_K0n7#P]0[4KXBn0!`&"X-SaRS`F5pbE7D&Hjeqb32kO
%>M<9WBc,88Bqj[M8g">AS:qfh4JkKB+rH*Lb#hR'c"3uQ`HZU*dp]VMSqYgd@WX?/NT(T-$9:Zrr*J4o7LeB@*q_B-B;/AD(H2o,
%%Y(GeaOaH'#)k7W7"$dp`OJ.qP=Q;dcO&cFH<M%i\c[Odd>O,"2:nL2Y_s>C+u&?VU\-]lCF.-O'N4S2-t9!6#L+0H9#JcZej+p#
%oJeZSoEi0RNK>lDJEZYT!:VVR,9Xeeqti`On9Zug%^Q^Frl$Rp`Me^E"QJgj:s+Tt@O=m-W!2_@qJrR[O>>ff=@:GcPQ4pOF]Cn"
%[7_+OTIDi%rq[&5__T.IbiO1.]%0f3(WIAt]bI$%\Eo8h:kEC<hrF'-5CKlP%7^2E]5:uP,`[s5YfW%>X8TBWT'8_7N"ql,0+'%;
%`+hE_B+S73Q@(E'RKRaB^rXDGJKEF=)]1aokgYh3gIPqpYXpBTL9Q:]cWknW2gIHd$)XUWI`<)[Dj#Aj3>BF#'I+'h_t6VVV&Ej_
%N1dt$XU2=-,Qr2\;CkNNEF<42ikK#Y9!RG%p`^K@/YRt0;AD6GeaR(c5<8jaYgDUo<_`4RBgc)>`5'"m`d@3L`Kg[_h5'k<<D:7N
%=(r\"=+UTHcq(CZ?k>iS'IdQ`dO;#-[TRaY[$-,L$+HU$Zben<.MtW6G)M**iHP)-/sg`%5hN)POj#(6:QpKGoU?o?H*kF3'e<3H
%8DF@QFO7%^Ei#<ETS'3N#@]_:0^.^S67"EX#=_(Sd3&fS=1TK/o1#@t42=5Q/:la-TL8&R_:F9:K*3oNg61%h#I+J+2(9Ba$!8.s
%0.nhYjUo2lY^;MT[%r$\jFGs.L/:.PL`7.q7)p$V0hmuP0eA':(IOq5,h'^:2?HR6LaMUdm:J>aW?M?R0dntC+$Ps*J]Fl#Xg4NM
%Xb_f!f>DuW$rDcBcQ0-Ha>UrF839DkTc*5i^Cn')ZAN1?-8Sgn948)[3lC0PoHpgC$QO<4/b+W52@I2PEtZ<#9=TUON*E\N]ko),
%_$P[.-9Xh'`6hbBT,/?FMKhcgNlbj#=<MdkN0,8.`bsdmSi=R*d!S"=$5VcmU]ELIT`OTp0Q`69bDBLA29-<n/9q2RMHNJ\MU2$N
%Mc;P97HULm5-Pa[DB^2GAnN*cT$?IoU0\ho38:rQ":\N<A(R1p+VQU?ZP:C]RLVnfn3RdTV4)0$NTUA&@8f^k3>Nkm,;L0:N#4Pj
%/IfRkX(c>LPL8#Q<pSef5]akm`JFS-i(1ZXA)7RqG;4)Ge4^]Km3Z@tBKn7L+XYEf08Mc+3%_p_`2<f6a?U@0:q_rg,9rXXjO]V1
%$cIa4mAggLOe==A?q=:-]J+:1/]!`r\S>)>I*$p_<CLgKA\qi<oedC;5u<Z*aU2[^X*5BcWXF#LPF`,)XNg%0!`JaGpaREG"&Hi/
%M5_Y$\2!fVBMM<3`^!HA;"UB=06kb^K<P]\s+udb5aYsd(0CV4:lY>SKqN,^"H*S?`E'Dp_jd@-hLHS&c=uN_HtV$lc3@n"U4SGM
%LdBs3`B5o7R,Y)8FM;=E!^@QKU_Vs1@ZVb2$Fl0YT3/>V\O1u,)$C,7U@f8Z=$3j"]u97=jMmEFUnmj<+42+OpkV\?1Xfi3D:#mu
%7JM2S%Ub1<c^B[?B7c2cQ0PB%`VD$K&>XhCVr`e/(Z6C(h]mOXa>rie#o4`3#`3#[=<04K#]&T//Rg;ON#O"H)1fqhXFLut#79!$
%>PpmiV4^s%9HkZ]er!(1Cl!ZS9rW(t@=Hi_1:Rg=I;;>AO,P;7kkMG_VNHE<R#[NY\dIE/bWH0@:`bFGpSt+n(5:W.dN90'7J?hY
%PIG,kOjaFO]IWq]8@[C!Q(Q`8&>t=;kZG.'-KAK1_pg*Q45jZC"go"R(V10g&Hu2RE4jW([>%$c`[TitoO^\NphASEcYeFL$@INP
%k@48+?]R\[>5D'eT]tK(C"BP;6d^\;gaH%[Dponp&Yo]$:'nqQ@V'!_<AGgfPT]3HRon19qV-NFR>qI7WKe)5b>O<(1h[$*AsO0N
%-AA2s&dG.11Erel;(7BcB-_@=*tZOBThdHV\K"bY>r%19P^cYch_6Lp5mT0pGGh4!H$G83S*>b69u_dEls8!PeVqKd$,DimG;u;n
%M09I[6)##n#=)p]MAhmT!4dOuDs*KT+c?C(21tsD]4%,C37"r]MM3u:M@WN\&K`-`(j;!?^aoHh$!@@Be@\OGq86$0LrH\,.U[0O
%!OD-`jiT7\kj&8_Bq@#!6"#5Ioebo#L-]<FHUe7]Q"UR=J2E_KQq[<!7a,:n5_6`oR9@"$$5mZC50K\9*-a2X)QG#;ZKW@!=0)^W
%6BM^05"n>`ShW_HfW(6Eak?qim-]ZGjRMmOcXgC!T]7a:Ju4p/4BER12jk^DL[bA.R1P;\SlhHj;1-#'K-I&l#ub2l@BMbWOo"=h
%C60Re0+mhKHDsLJE,Yo&jEcS=!f<5kX7A$k;TCK7_Itmm5WZuB6:3b!U7$WGBco)FlBopQXPG3[,LdrS2"<Ko";Ct5Of]%j)b'fJ
%Koi[)__-Whi7+XRR?+92M-^Q`1-fJI#Ya,2K(esl[<\G9&:)TX`"b.?OfP*_,Qou7Qc-.fX>ejVcjujbGDZS@c1V`NYq72#5pA_h
%O_6q_&nXdWg<FS#C"FSgS;3*+hI]ZjHpOF;.4VU$R2G05!](8mo+]hrqZ2HsWe&`okJ.cp=ZGBM,%hF<Ne)_^^q>&YX;=tAiIVhi
%nArE;nCMHrLd-%ZhZ\-:[(&cj]b)N'09'rpY6T^L`FqpC>d:p^K&t^P=nAR"aoJ(S[HD6acFJXZ;^I_<mHo"<<)XmLW&0Gq$tZh@
%=\A3p=C0_HaSSI&+&&]al'c1d"B^J&E^7<5U_+!:-Ak78oY`4m6f4&ScbK,$2sT/eUCXlh[]0eAM#oe@"u5C"Z8*ee@Q*bMRcAj&
%8R0DI!"uA!NMiea:^eM#ZDHXrO>Mo`/X.Y%+"+?l$T:"H0]\I_3od$W?&'(2Y\#(_`XjYaAV#XB`jNE2Vhh0jPrEotBc;=`]R^VQ
%()?W$JI-(fd35R7'?sO0jRZ8a!CT[]!$DdY(+)FEjmaQa'@3=3J]oI"8j%_e$P?AC2^!)@iFJsI\cOQK13\A0or.*_=j:#=A0)rH
%d`*"JAX0)@lUe#(U[!Ll!6q/"7[AS6-BD1WBpUkLUR:'sOsh4_-"FuGT-08q(\jtT>!t0_'5c0*l/V/eNNhr7f_b>d4k@#,$lT_l
%N:d<-XItt"M'&$lM!!Z3,I%Rs7mMc7*k@U'+O0j'"b]DIMF`X*?;@-t+&iUO"Orj%!hZ!GR97G0?\`i^"P=nS>$TMI5R#&qiqZ7P
%<@g/-.;$n-8SC1V?oh-dh%'f!Q767&P$M6J*ZL7G4!5-SN_u;T$,FfsoPm-ZDfbNLnob<<M=mqs+KuD7lV['WUrDn7MT*o8cCrQ,
%dJf8>!OmT0\Hi`t2-7kFdTe*j*#ofk8!TeMO,?MGFSGos3AMf]#FX%_I1T_>q2]2#lgOr\`ru7toECMs0i(&JR2%A%A76r=E'ANC
%!Hqb:DSO*0^`1L`1@#?Ie/=/f!Z0>U8u,CHfEoKL4TbeJRKZ_"F*X:AQH:P/kM[juHCA,B$#i78)<+8CN.te%L">6dJLb8lW0<]%
%JB5)>B&ca?(+Q8Xl6GHrN_.E?+tMo>hGmtKiu*4\`:b\I91kL!ltPAnMDOVAKY2U2_0?1Ui#lHCH72hBBU8qSaGE5^UCd/t6./@.
%]S3kVS[gS*krof\,l$,mPsWJ<5(IVkB%OtoNR[//'*i4r0+$VN<3/+Hfb=oM($7t3ZVM]PoBMUBDC_/K7&1N\#'9uA#%FR<'c<T;
%#NN+!^iM-E2(Ntsl]mjj#,iI)7B6D&(N+\?ZP%ND=`qB9)#Pr:P;a0*O)-5=__Y@8W$\e^)1[?#7+)KqFi],Dj;dX3,&-,\c.%,c
%E7!\X15V8pSBqO<BdsmsHR;iMKs/_9Q.OH^(/9c$eqKt&U'5sZ"1)bA$bB!/V76OeFj[B4>tClGb7B):3m<[@]<*F')2!,=[tj4)
%7+kJiEY(cFm8J-4c$Tkh=l;R\0_!32]@P1(3#"&ES9GRL:L]i[jZHippf]3cn1sKS?EJN.Bb"0s)F@6)RLL/#%LjL:SK=4^3_K[c
%$S>?`@TTk3h#iGp!u"W[_Q!)>,mEO8Ft&/$Un^[*W+SEi@mt]2aifjf07^RJ`TPD2ObAT;"198W/Jcl%Gr%=P\m(;:n?.[u_$Ym?
%@=H+Tj$`*AI"eGbAqi8>q)r+D_gZPe"`H+o2mR!)7-M%WiE=1m+_XRG!SE4,4!^orTD5fa+ZmZaCI!=mMf0h[9.!"c"iDQ8_s.4%
%#<3`\]JB[1e7$3!n21KnBp11u(,!NtMU=`ERcY9f"3tHla&nO0r@j_2CC1[&XD1#DC1+Cl(.Q:$qIjo6a^pG0ehe\4.:oH%MnmuD
%P7ZbeB!Z]=SPC`(aiY3qe<qW+ieZfn(;UV?#)kFcGqpL_3r.brfUsI4b#SaBMdRCJWS.lskI+Vf%"oYUR2T/V@hK6I^,Gi('eFQV
%r;9MQ1dT^h=gTh")DHS*!i'agY)8lHS"KsAQ%9SP1iK3k/!PS"Ac[`+fagX3A>2*s'e#nrX(l*,*Yq&PPga+CM5fDP#,LDY\86H5
%\j08R`'VX&%^Mo$E:lMo50u;X4`odSOl/onLT`t9&@_bI0bKr9Lencc!l@!'.@42j^#I&Q<@2tk6CbCqnL_g/[0UDC]`GD7(l0')
%Y6#C!TTsiRe1%IRbXAdrWbSB)k]CDA6$&p.7O9Bk!>dAW)biQ8/o<k'FPXA=X''Tof`d1e2e.4XY`<bX;a"k0).L22BE;R7aGP,E
%-`lR<E`(2J@89_*"V8Aq4=Daga8lHrlfPd<MFe^7/GikK(5dl]c!Fo)57XK]'b,`^$\Q:?<^Q$'A.namOG(7TSZYp7!U^=C'@;\3
%lb$E??Xk!WU-\1qD"i[gH(k,VWb;i$+;Gi_Dr<U>5-3tQAAes6`7nuA,:FJ(2mGJTP2NtYf)`kk4qtp8Gc`9nN"i$PaI!:Q_2=82
%e*;[U;!b.1TP&o>c1HhY=kKg+&KjrW()($Hh4cfa:*XHeYnRI+IC!g64@h%o'dFuO=jmr%b^aj]%'S@A9`FDt=+it?WDWN,K]Fgm
%"04M@_BT>4"iiB[BGoB6LqpWAOGZ;nN2H>F:I6KjST_@aqXMO<;g$/9eIhY3Xs!Fs3U\fj#XOBMZU0Vcl"H-dJaii+Q7ag<$c8B(
%i.EC]FESnY'PBBF#X_Os(LFgFY[J!g^.19&Tgj_PhO!4!l.p,95,3;2'G8ifNXX?^G3<6/ko9;4i6qM[mEV2,i*uQEpQ'dtoXh#^
%h`Ul2O^)>(\pWM@+$Y,JB`IA0^HQu:cQmN,`TpSiI!>GZ^AHof]0H9>rcs(1krgQb:nLKOPH&s(02rkS1M3MBYdD)0D)!$ePn0NG
%KNm/&0d$R)\l$$p_N:(7LUgT4U5=.3,S),g;S*.#3+JYD.uMJG2X.Vm_8Dd/4XST.kbUc1/TS2A"0$.]*i[Yf)N'*tA3^*m-_Z3&
%3Q5c5*"c\Fa<JQ^/O/`<egg2?a?tNicc/k4:&AGQMSr)BGu$_/V'E$?^)LZ$Ea89,U,BO2&@js-KCaiZq0LkA/L9C<Y;pn0X;O08
%d_1)KdSD$"EEq,&I$E'TXu6sV@CcG,qHDVim\o=L4;:6e)OMuDXBgbLAn*;82/=OX")(VVR?5omK`37:K6.nb3j=T@;o)-e'XP\&
%KDLhh/PL&UG7BDk+[q=dl#6ZMMeC$F@8>TLN-VW"`!)5AMV"9pM]C;%@PH<m)SWIq&0q\2P:m*@-]i"$9-d.qKKp[\(oFAGAr0NS
%I7T`i&$W)gSr&E\0VBqH>oJ=rTa9FMkfAK60d_8?;-Z@BVL$E!9Ct-KU-ZlH@_*Rs+r5)>E<l.Kg?PV+Doel.d>rr_8B>CPk^p6'
%lJ\/bd\(BVSOTKBB"@"+]/n,&b_"3FaO+bo@8F])#%kii0<.;TiXO,kEE_PYg8J'W+@U2LR2-3XEa<U>RNX=^B5\Wrn!_k&Q^209
%)5,s*qG"I)0J]B.S;j'6jLjJ?p[_;ZQ[okkN&q'_Y\#OlFK*NFE$Z]99]P_ZA8@;4,ZsMk1b]pd3=C,^`3TT/'b[4>MotH2XV_J/
%j>N1"L6fOo`Ehd6R+oWi,QCZLPTnTqC52JEkbT\]NB+(86purCQ8_/GhBIfP&[<kFRkZA.lq6-8)4=@[>L\eP=Hp;<^2uc"S2ll(
%@C23;'ns]meb#ZmCCEr-;YYOqkG1"F3$/VR+\UA)Fk#$+bT^h>%;Wd&.Br-cL%N)':qqO#Nn/6g6]^0#d3sKD6k!<n>1%nq42`5V
%Tp2d2*QEPr!GrB4ajT7Xg)8C:<GOhh"I<pojr3I<0(k[kRM(6"CBtr"MFsn7A^fUl7$FsX-)'%h:io/!3a8a7NL_h)'6O@;0RHj_
%!U'W[UB/:\0Ug'F`gHt].$4SWX7L-jh6]EV@]CEEi/#NdL2(*e3_1P>+_%/$`O_P7b-[g"Sa9Y`6NUG4!\n($/(&((Qhb0SA5C5"
%a3Kh(]E0%aB$U+d-lA*5i6ZYGNlC`Z,!Dcf3a0</r7bt.d_aCrPP.GdlD0Ph%^QOj=GWtEi44UdnB*`Q)sG^P/rG0;oNc!60M(Me
%&e?G#"p+P&aiiKj(.WHZ2<1*t>1<k/'"BiUXVr1F`0HZ?OJkq\W7$B-At=H<6Bmn1;K*+$"Wtk80ORJ#k[j#E@Eh`+]R:=nFJne7
%A5YgC"hM4KO<SFF$aS/QRWT9@PKa*+,*R*)#c0o`GWnofI^9_J]o6kU8u"/*DDtoAE!*Umo]p$;%De7]#ae2J'(_"'nqGS_1g.&5
%F+Mb4F-#uN&$>nC'Z4aD9S&MGMa],G8b[rHn@[eELgc.Q7lZpXP(MBl;c42*%fo%.qGu-#n7#s`Od5"U[CPKFNAEWdl<(pi-U.iV
%VWcfea;!.*>n`gg7`2#%JJ08pn8[0$kos00M?mnEjU"Ut`%anbX+l]W/-oW5!4DLkOQHdA!*TR?'`qRN`(Ap9FX%D^:%8K(JqF*W
%GmoGd@mElq>-*srOO<2?R>:j^)iG^?TH,F!GF[996QjoN$C4dtNmK<Y?!q)NLl;CM3"QjV0Ij6J?h)7t9gBre3X\Xt@IBoeY7EQ6
%b>AM*;"\!M*Cp>`9"R,qq8DhLl`5,6?dm*4a[f)]@%Ae`"hl$5$W2dib=Pb/[K>On<>Y32.r]FV07hMBefb[A@_)6>j#t</47N0`
%Qj,$3HljfSR:!o9#mUti3YjpDKuDO%mUsbj9mloB,FVgc_'nVDk8c.?3gFj<1;o1e4('flaPf[-8k*B88lCHWF@h<sTOmc$Xt+8Z
%LABGTM=8>S8X>d&Lem=T6DY]U<!'ufbVlPk4dB,-k(sn:SdMKZGT6daW,RSeE?/tYCj#qdamfbn,D*"^c/W4C,k=YTP_9/PP7;;t
%K51]'Jq6U+[,J17NJ3L?&dfbV\kRM_f`\%?@5N;,W!Ini]N8?7/&+q#&6ESUGS833IFaoGi#Bo4"dk4DCpUmiB%L*_rXaUuGXi7_
%U`^kZ9sok'ZfR^sirCBP"&q;sG$$j`Z\hVN113%'-1We3Q]Y%!\X7?[!1bL^%4-o<4CIZAN]I2K8jnkql3T6/'pdhCW''[qhh?r8
%E$ZJk?SK*"a'i/d(fmmHfNs3-Y7`9S:<O?5-oT;mC_kZrjY?fl*!4%h3uel4lgqF'![[Dpl#jXced>$(R.LPa^+ps]d8WoE7'C!+
%cNc^cFGfl$V]Y]uS+:K#rUs[Q92L/a1R50oQ_&4H3Fc*B)dd7q1XlU*'Fm*I+!SlP]N2+q7+*n:nl]Wl>+$`Ig$4Qh/CF_4C=+d3
%1QGB(!+NY`[CcN#\;[:!j(?1;&)d0g:")JoLs-6pa2>h`;#aCEg0N@9@WYf?Jks/`:F9(lT-0%EXCAG$#s:Pu[8+i,6PJ[`_KCZ;
%6iD+j3YN8BGM6P#V\Nf.Xr1j0g)6T,<pgr@pX7Ph2GXa^@lG1U3[duNAmH!a@>DHEp4mY%,6#A[4H"ogPsEuuJWU>gZSAdm?7n_B
%lY&qXa#_,Ad45/#P"<Td/2*@9`_480<DqYgepn&!%"BiX8ML@lo?gOSC3D:9Eu&:OY6D*8'_<@t.@tEA!&@.nEYXI3;c4%%+>>JL
%:P&_q.e"DeN,&j?#V$TI>$eP`ofR'M7nN>J6P*G"7TT5FI8%".PNAr^_4`4(YUlnl63_AZ]!@3UheG??goIMMo$i>1n.>`!$)>HO
%C7oWGWhsA`hPNHbFQu+X=s2or%!-D!L'M:jg&qbJ#PkHZ,N"#s?Bk[`"6MilGK>)E+L7%(?P#W1jCg:^6HnEnnl-`#&%QW$D2bpE
%9eup/73LDC9Ys)O=oSrL+i6$E.U`]p\h[Elkk[fLbrT9nBN:>A%hH=[C;:aA9q[gd8^k<f8;IG<8HJshTORHA&hTk`X_=8eXYkJn
%="9HoF&sP,Z=X\RWQ?EeRmKrINT`BW[[)7bYil\#b"bSAn-fII;1M2l91Y?t4>PMZ;2h5M"N8q.RR>t46KS9Dhm_.&A]ALg=&=M&
%Eo`hr3mie4AiIdig592L@V-EB>^P#Can8Yl!!k3/,r7!@7rY5$MILT?OQ__@<;<$(2og)qKZTU1n98"c3NYOJRR20XbT?VT/-A3+
%rf7.+,geEdXL_sY/*l)CcQQIe*0Jd4/Z]Bd3-(FC:"33uK^90K2-Bs8/3.N(:XlW2$'QJh'9f%j-WM@`M5$e,FD)L_N(UB3Gt",6
%Vu/Fub>^XCZ@^Y_JcS:IqOVqGSMg_?[$j1oFK*`B(\B.)hnL4%'O_2fQVL;/)3qe:l%gI$3S91(Qj\RKrBN\6"m1E2B*<jL*X.B*
%eZ2`PoVoU1C3cpjC<\:%P738cE[MA54]C:)k,WW%9G3:V0?oZ[U<sc[<L'5'[IAb"5/KscPsONbM;Y%3MjZ1OVlA-b-!f^^_`B/%
%Jg[cdQKEJ1oPlcS+i20QP^n\@XpeLKXdlk&,nQ2IM'SLO#@Tj]hXD*gB@&n`q.:?M>*W+k@e5Ucmkmb]!7ISUXlP&ar"(8TQKpE1
%6MPPjW&_)b)l/PMQ#)uHjKG<r0c5T8X?=@pl/&,2.OHdlI?6mke3@[D$0,hflNPM>%U*aF0q;IXhBXG'KV2ooL_lYn0X8IV-=qj2
%doF!M6toeia-T%2M>cD%eqhR$$$'I5jGmlhN%.DgNqIO%%m2p"Y8T^>/c,eh-,[W3OumKhl:jFWLt`Gn1o$[+ODVja,f9rR"_";r
%8ihi\+N\cEQ[q2[m4khW*&NNT[Y@:@;F6b`9I-1l(dd0Q-e,qOgqdOPFiIWs]q0jVeh_EU>fkc91c!0'#n`gW&`d7=2DdIQ>@13<
%p-Bc8#l/%#^&tf@5m)1#@M31W91kR>9o[MTN<&QS:$-?3Q*)M9VIugQ>uK%!<LMI%!\7$j/Dk;i"_9r+(=0[!b&!39N4AY?L-Yj!
%L3Z1_$H#Ji951Sm.]gr:$U"1N;9`?R.gAm7^dtJ5H^XCpP($>f'eL7(DA'OiRPe\sP3Ak0!k(cti),Vp'+A%;203=H=%_2Jb>&WM
%G"knE3$A!ePXIniUM`.YCs+X3F<O](;N?kFCE/Ogq\)@,2s:_g/EUq5Wp,YuPqp@kFkSt*OdLj%IS#/)8pZABbD"60Q'*gT!F[/h
%L^"tg$q$c`3$S`(l[*?r&3K/ejf;-,K!dIW19TuSbJpKPALV'm&5&Z,YD#@i6FXCE7_]-0PH;]2nE_B64]=\eC2YrP,9\$'>pMmg
%;+\k9Kc8V1XMQW3K+:<6Wq%%jAWmS)+rI#t+p!-1SCL_NHPp?[7o.=,.A?F-0oFbeJGdTh-O2>afh<_OAV8_<6.BjVlM=\*YZIJa
%GU=#=l9mBi_iMp7'S2,rNC*QanX3@odt/%/4/jS)=F-n57%Q!`pB/#Xko)j^E[F@Cj*=hZ%$<.j1-oca>6V,9K5D$06f2HJg!%UH
%SX*PE0OI]Jm\:N$1E6Y-NKB*RZd+)P^KD0_Pb:L/&]I0l^)6^<H+D.T:gBEqR@\bjG\n5XZ`(l`4(G/!CC:Ol=LRjMFf'6a=lIjC
%h^-ZXSr9c#UeMc9-*%^"DHAnaW&`C4e'&9h6T(E^NI52>Kkbij*C4jYiYS,6kiWq_J$g7C6nkTN2Pf<2fKMiY1E8$5.P9Zha58GR
%?;lTb'H'0d?js5.>s&G2)/-/JKJ+;n-RgtY?T@hJ\?k"a$h)>"J2V6&=IYf'$OJeMrYg^<f4<hg'$t.iPELs!e:f@lq0G)3ekG&T
%h&pb`K>A8i(5d'T_@>q91_):?_/Zk"7"(a5&%(m)#rD@(R6_7Af<(>U6=+VA)1\f4b6s>k-X&EA_815EOQDcC]Yc2#I?K3"fLe:X
%SD``H&g2$N_;V1Yp_/8m**<BFcSga?`A0=U+aEF@CHVC-krXKBG!cLpKLTUR7L\K8q3<ZF,6R,37ld)YJJ7?YZ(FmE1JJWFm"5V7
%l*SR)0S'mB,QFkXJV188VnVYNZgKrHY^fgCe)_AeE24J9DIgomm^_ou%#;Y$%RreIO\Qs:cpf`T^?#A#9*8<q"q<O+.<D@F/E$"u
%ZR(9G3TT=Fk`3I[NXbc^eCP,e8.\+R_'B#I;1Mq_(]J?-cf'LokeH))OEZ&UJ+mWEd74+0VWF=D\A*C@nFu#C#(n0tj%93/p*'J4
%LA;d*PY`)KLqgd)A[F'?iboBCAYA[ZpmX@[KskIi#18^VVA3=tDf5N.R.OqgAq,'fS/_(o9!W(.<cJt8h,X9b[,fIk]t%JibIc?T
%hoN,H]BMG;6ug=%gu"$#6iO2s(,?g*2t)HRRE>G&)D69n>P;uk\LG^ts!A`f;ACPW2u1%hD8V\=RohM/k"5SIl7>F<mkt'QDF.t^
%A#0.e630j9ao>*#/5Ind(&p5;8E[n-s33.F=E6It^L7s805j5X9fcZ;>7^RKdQ_``JAM6pM=0`:iVs,OWncZ)s%NO+ce-"Cobn4'
%2sfFPG%\ZOK:O^n66o_.Rf8eeA*S^drAPBL*>%$ms,Ff)a5`KbgTrf`kCrmS&i,hKqJW\8)B\akrf+mS"C./h)s``o[;X^4$0@ha
%CpJO(!b>cTZ%!FnX&bY&Y^^.S!"Ia0s7Y5l"WDC-IfmV61"_fk)p=4a`M!8),^K]11?cIrd;o!krO:rj>U:rnhZt4,Ht5nMNAqO/
%Z9eLbU<$)2<U%7U)qLi!qX6[]gm0>dG9DHG3ar%8<=nmg)e,mh%$s`_Dle#?SAlNADf?D$'(cY,Dl\h!Z%&f"p_3LB'bc$TqX<NX
%KDo)I9(7+#s/iIp+4o_kQVSH/htj<&_3:]aVDq`"/]DtOrlle0E\lC`)%cEc\i'2"Z?(%WDqMgQ)1585rAuG#UL2ZgJ[)N)C!6Jb
%=A=A9_>Xlp:*WSfr>XoVmMEHCrsl-&CLLZO#-pn!L<9EhRTSYR?aG5ll5H;)Z%!DeE#-!XH/k[^MO`%C_m:WZ2sJ(#Tm8T]^QJ=.
%#QCsSJ!27_)<E+-^W@ouAs3]&2]Y(;,RsTgQ*e-LIkR.+keHAX0theXJ!3o*2``hmDj&=)F++r%DtJS.'H6p/dhQAr-hQ<O7$OD-
%63$>_EBrn!rAWqUN(eXos,G!N`QsbI)dUVYKJ!-]`4BICi;_qr5TpC42jPq&-#<Ku/9DAiab0Utfel-hr8/>0&\PUm-<B6+eRAU2
%]s.qWg)g1LT#;\qTC@>on>N1pn:+r9eq(QorrspMdQA'>Dj#q-eee=(&)]:uV3CqkEQcdarOY'G<&`mqnCs(k27UC%S$l3Bof)L4
%5^0j&e#l,,Z\/%b"snF0]\fP9D>'FlRfb4-angu+/<ZWqhdrU+D^`@.&52eZ`qW9Pa:Ab]#`>LDDY_!Y:LT"FT_nF.UO]&EUAJQO
%P?-T)^6r]ZrK[ZD2iA01Nda^s%<80S2<_bW[%Q/L);R4s\sq0'm^mK)\N&9V@:sOdKL,<+)o`.O(UieV*/h+aIHM30+(X8AIf&"R
%_o]7EgP6HFDfX]tSp`;>PDG-Gl6<4m*,MU\0l(f?3kTHKX!H2KLKcE#Df#clnI45<GVFL1HN;!Q&lKN4j)6S^jaLArJqCLYMmG)8
%5:b@MK:'B8EMitCCSl$;*8Kf&R(g[u#`iUpID]U5^g&[DZa+H,q;rHiX;DgChk$+^Z(DSU1[_#"AK0#U0Fcdjfnd@F?k\s&ZmPXH
%/Y1Y5o*p6cDle5u\L/jt-O8*Z"Mmm*Da/CTg@0LMI9Bi9R(g\"MT!lXoZ\0U&ADTLAcWG#JALkPgXdrC317K`\Kg7fG'QBl"^^74
%qIVSq(^1,k2o-eI[liOnH6c#Qi;'5RXW--#GeQb<ag.VVo?Go3e^<=N-5'QdW3td`k%<.S2&e[8A<s'7Yi5CiedO`ed!X;IT]J(F
%^;8CA>5p2!2`K#oTu`o&-6!oSm\'A&W?LS/2Dj;"68V#3#"EQM:R#?bRVt`aWP55)<a3uEL#s<e0sCOBoBf[8#"rPqo?F1R%5=5h
%U>sCk^8C^<.?$`!N96Vp74Fdejr64Pm]3mlq8UA3IcQ.CgQRI0;!*Mo)^l!@K-nc#?T"LaNTD*K"$(2+1uDOn&HS:Vh]B>bZq:SJ
%2^G3)gou0QZ49f3O)-pkgV$@JDd6Fq)JiNiq+NQ.%[M$:1p"/*/Dm$eWr@\4)rIVd/VE,RoU7>Rg5p\<+c3h3%$GO@2f[=VP&Es_
%q$RSP\"=Td%?bYD"*,q>aZ&&SBRGgJaYt_jL]JI:2d20Y)O'7:Et>?u_XU@[8NtQN^<qOmgSGh+2k#V<e6@ZG(>\YH(5?b?^*b0*
%@/0FfmngG$hiq"R%u,!p\D>VApne0;KIt)#SYTXt0bHQXq%H(T>D@&73RJ,G8b((!EcrWU^.E+^Cnil,2\lH]5Ek)2ooZEca#D>\
%m`esrDjj@Blu26S<k:aFi$QE%=ZDggYbCh=[::n;O;-UAqaf0p.D@Mb/DG&:n]a?g76a>WRDl$bi3#Yc2'uU11uEbDWD&b!jfPp;
%=_PMm[c"I=Ho&Xc]q#AP2rFZ^0Al8Hj/j2qSikp*17d2>So;2'ampP'r(>hq_;P./bubpiU%q.coYa]NU\Ud9A-MFpq:7g>9.)RR
%&1dA'T_VV^E$>&>g46EgQK/upS^dh+jI;QHbUMD1Ho!i0oG,J,+YiDu0M&pG3EIa8F!:?K$rtDF#0AfV<4XUTRcKr/9Ok]q@It=0
%\=5&,N$AoGhQVCV!*)(!V>4`*-W.<<oW=CH[^5p!OlW"Z":V#CB)@^4D\.?7dSLFn%FI,P6"Jag7,J!lF<A7`oF6X4phbi$+_F'n
%+Ss)&Cg6Zld5U#IncB>rDl+B"X;aRbHmnBA%FI+(V=(rRLq_9UUsPZ#h[HoSpglhbN?P#a3J6N7rPU;b-IFace4)!)dTWqjCKYnr
%Ogc%/VoC"Yf#06BE#YNih;uAQR(b_A:Ig:T/SZa"DCca(Dq_oS`J*R21E7IZ_Xu*s0((L,@JX#8bNaGb8hf@f$@B\_c(qpc=KSFQ
%-,Xm1ds(:NLq70oAm7Y2CQb.-@,A>]9]*Z*!k`+@7\_h!_-m+oc.uR*-VWEJfrC*]@JXU%nV*7mS"3?i@)MVrfNg/DmO$CA1;%bb
%XI-`<+=bQXh+abben\ipF'1LaZVcX!R(c_j`DZ$<oSm*ch907]IC!NZn%NE17`CeD()YR\9?F[Ge_p;D>83oU?ZUYUF_T#.Wc&;f
%/S*a8I:Jpcf*nZtPlLq*<8Y>f-#9N!T`2sZ?rZ#s8g?)tW4k,I)Af8hA=mq`K?<`pM)f<dVJl*ZDUC2+^6t.fFPXt/NH=;5Cl#ff
%c<eS>5D[&Lcrq3VDaZ=%3c'&TnPO&s%%_B*D&$G;U2P#1C*.8Z^<(Rb.Ybe3:#pM9bqkd%0n9u\)GK&\.gIB1Vi+bq]9WoV\%8'C
%03$g;mP(,G:jk^JlG5(&2qNqlSW9#oOe4u^2TWTU?nL8jm$hE,/;AfDS"C5OA'fXrq>Tj"4$K&"S%4^S4Z@K?SdBTl8hmnqD,BY]
%B6<%XLTq=6Em-0__m!5aftNkPW&lIIgGcI\8\21#qo30L,EIk,hol1:<XD-8!#m)&Jo'Yb\JfV.jXfuPa7qU)n+/42oSr_9O7&Lf
%8-&.gFPjGHiG;<$DiAiPQ;5#0o$ai8E'sAZ-Di^^l+S$5A\$Qgqt;8VA4uY+0`ZmKp5PJ-R!u>hA#>G.I`qGE.lElHY^KHe7->$6
%2]ojkK#./?B@'bOCu7jk!;=;>gGbZi'[]^bDhdU_#n,KH]Q"fiC!62Zf:DiMKC#(H!#&E=ff&n]7[nHdp'i__3[WN=>\W:8)e@it
%HUKXm]I*N1\9[KsD.MOWo)`tKen!Z_4&<HC62']V:Hb-/N9hMPTgZ+(Z>X,n/[8L#aM&f@B?,bm)_lQ`>tq>;6l/I#;115$`O-AV
%DZh\=aU?KTE_omp0SmHTm;9;nq$-au@TmHZ+`O\</Dl!V&d\Zl,i?sN#eEckD\i#TYY]^kgV%+?nD.q?N(NLJ(duXE%DfMd%7:F0
%_)EXn-V!Um\IgfhT[s>(i2U8sdbskS@>!"B/\cMk&.K#\2la7Ko*fe\#"W,%Crj<K:Qt(paLtHJ:F=N+m0u*4YchrD]jW*bhFs?N
%$UM]c3@""1ZEl-d2r&MaY^1B&C8U54WAcT4=O=M8oWD'%L*rlXROSaZY_CPq@PZ4;:2`[fJUDE_;hEr_QI?eJQf[+gdi6SD?SQkZ
%ecTOFQI'uC7SZ-ceD5D38.I\!G`(a=b8Y43SWgnOh/*,\alSLeZ//6C]Lc4nqa0A'[q61`&pY.W;s)C`OZ16Q$S`iD$39rs,&^"c
%HYePO4#muO_W)(i0D^,aj5%C8FHaZ_ouT(gKu=q@bY$a'k4$B"SD(j<NSjrF3sL0np<`K:]JoK=h9:REhbB[]9]*\CNAsglGsgGJ
%I4df11V(+PGmS['l>C:+_N_SgF#S]H,e"l>h$V\qR!6g1%5C(V13Z)PEkTTMc$VJdkA7*/+_D^%Ed'n!K2qLnHA:,r<[;Ol]294"
%E`f9PTho0<DMYppAWa@L`nSag"c=6'D0NHp1H)o%$q3Z:1L^mr'M^o3-Z:r:IVS!sEB!E:AD'Z9DF4<0L5!.,^cmWP\&@*Y:H3/_
%4dingM1`6ObM8*MM]X[A]<T_>HPmX^DQM@[S%$Vt3"[UFPIR*6:.FY/EAthc[Ze6@'#mKiFZ4`6:=>CbFZ4k]"T8RJ2lmBVjX510
%/.dQ^\('4jP$3\MFZ7Zl#OlY0G=/*)2B1q!7@cePW4NAhLE7db2lR1C&ZDm`.41"YB8sQneke9=oS'rIVHM+NG;m:RKt;5Idfa12
%_1oQ@fXKG3%IS,rK>eH=mVYgi"m'&0mV]<KKN&aoD?]ScU^)*&/Uq;4Cq70k3ph@SmT)G,0%A^'8j6\OB)3)`KTis9aWnr.@*IF4
%+E09S2/tQb-S4m3`8,*3B$!g-DK]!em2Hi+DBduFHO"[Ph+o=&=]9P)@u4>`l>BCR,VI<sE/b,;Dje4oqbj70F#O4Q\Xq%$N-2XX
%6JTg**3M2P\/Y-)F)EnSh6d%#TkVI$J.tNu3/G10\'ad2KXdKtrEOpYEAt5JB_H;1]AYCmZhRqrL/1CVCbg2bonHJo0?i6;DKPK1
%_;&leAmUk:M076]fJ%NUqupK\AF:cuW2/=jgl46;jM,9o#.W!`n7:rV'@79D&9gK6*hgF)c-r2"(h*eFNYE(0hJN<fC5<;TDBeYf
%2LJYP]*Z\;rI46Z6__c^i9^_@YBq.(Ge4:DYu5!!G!hFd;^QEA@r[(pgmY^A2((TaKt(>S#cTDoh=U(jR<7'!h;hb]I"i5W,J%*p
%691IG)22SkonL&ITjjf*:$QUG6eFV-l>EUiDT-&6h,K-&pk?9u'&nojk&)L^Etaj*h2Stkj^E1R1Gdh`Gf&92+AZE8j6l&W77U)?
%DFg"cF2QhY$0u5UWa=?b:_)dYF79*6R)TA4]g2g:4i2rbRlQ:m`jeliZQtT"%"l-\gq(etf7ge?P71r.W4V<0<kg>4__'DEWA_uV
%0Y#16175[2.NS)sgeI7IEDN&]F#RqBB$q4PDW^CD9m'9VT7?+'Dq)OsZF:a^eMXQ\n<I#94t.YE!a"#]6TX&GhT-?5\gE@G7$4nF
%%DcO6Fss'G.YbWK=GitE^`Z"'XO]#DY<'k:YR1DmA.^N>:Md!uL.Y8H12T)s:5KO/7-%gSDF2S.,;:"@L,gG^'qmFf%l-"%G2#7f
%&m%OL48)P'4ZlR?URSP:Xo>-j;Z,1PMi9jl4+cmO"V?ZP"Q0H`.]Bd["`9)Dj#Z"&JOHouLB1S`=g8ICORNm9T*)FI#9]Y#Rb2Jp
%TVd&HGpRNa`3qVA8o0LoK1&L)pZSI[+BO,`Jh;G?ZN:dEhQ]G<7Khs%c4*&VgL+lUBO.-!$;acuHS)a.%aJs=e$3^0=WJahKt!!>
%C1'7-$Ri\j891/PPOLbM0S!"YOAs_D80W/n!Ic"9C;Y.7kTS>J&<K66_8(k3Z,fglOP3EH?/XJ9!^Ln0O/*me/LJ,mmM._c#H:)]
%.3p35W`2r<ED_Kn01?,]&thXI2'eIA1I.+X"!(g.,pSmm5QrA`TPfF*1qk3T7oURmgh1p^CaqbO]dZL,BBZQ0AjpFOZZ=;/[<aUI
%,)&6!YlJI!@Umr'UBH=a[X/3FR?Wj[?pQ+3Xge87&u$u3mMWIAD9.DT*)PPXSrLu;s-WYEKG@Aj7c1"<!:>c%]c(!6"%$hb.RiJ1
%H$/G02;3aeq%`/]@mpB1E8_X'9HH/m,XGM[_J==I?(,k6#LMEh,o`.aVdpqjr4'<*C!@Ra_$#Trd?;^k=F)7i-'Ug5r_J/a(,fs$
%2@4-2JcM+5"-C=eL4Jpm&S2;*p(WWmNLC39&\t3!83c*'>JS0dA]rdc:g##SZQ37MYE6pO5(OGho[eAh'U9u:BY^\X"YD6?O3'MI
%fi;@$"?\CD2A!5,$hYk2`b\1Xg-Mh%qOl;peE<dbieKihJbD#@,D^dsGD#T=VKW]ajYE;R/!2n=Z1FK[ZqYj\YZN:;'L:"X\NM5&
%'NbIHB%GlIiN(O3J\4<MJYWq>%?QgLPHb.r-^2@_X40+kbU6eH?o:0I*GQnp2JD!,pRBO5?0[ZPN*St]Qj?&X3cP$QL-rX<I]8gS
%'o7S(29#(0]Kg))B605H"LKAa\JK)@2HcBW;*47hR$t[Pr1P5LO'6R8,;X)f;+sIX$OK=D)O)D@2#n\LA?7Ht'.=(V5/[cC$(l`I
%H:XDZ8-t-U@DDMuDN+#,KnJ&mSgN#f<jQ9mq_ALp,4"O`BT.7T:_pY%p5rRhGu[ZM`['c[8]^U9>Y5DZdY6_*"$=Hn#%gYS$1:uP
%V]sMu(>+.l(h8rd*uJ%7J&=7*XE>RP`R*$Fjj5e/)E$oh;p<*%N*(j?`lMW5W=H3C->rb%c2jMrB4ZuP7;b=ZEcJjgU5[LBEbV2>
%VO]2j$_*uJc'F896;>agE6.s/&4f-N1,<*S%b$'?CZgBIFHuRV2X(@E(<r-)Y+pM'nJWZ=`;Z9Eg+$cFR;Fpg.@V:=/pGlu,XW`\
%FchFZ8Si9"d'0[i;]Lll_f:P@(-I5WSJ\+)SadaoFU1HO+Pek]\ETGRb66k&+g'H65,Uhc=IqX4d(.A/OcS9k#jp>^06Kf8ckB>R
%8L$i<i$QlUK'i&_)CBu#k]P>3Tl5Oq[CmWu*8H#X5m[\;2ul=sL6"T860$5VIXHbFH424?AYee!3@[>28/MCI/jbDI(,H#l.D-I+
%R)A*=\@@XnTq.G.@'\%'%u(]@ZBh_V7W+qT/DA21:J:a"iG]\oJr_B)U(1*M<Mu1l8L&d"q0Mf@j&^OU-64i]b2@/iR![,q*+Nq=
%+qLecH,m($A8[0f`GPXj(c;]],P\*s9EoLUZ5lNZKV=)L;3W.g;W'4f4hDdedHi=Mmg-PMo@A^2\ZSX<k'E#+7r)krO;8lJj"069
%O$UnUR;rOhN9@J=-4oLc;.6l-M24%$b\J?U2G+Fi.5Ws1eQq1=s!anL[;S@I9O`(H)u7Lakq"!7:2/9RPH/;<E?6>P*W$Y>`eb=m
%'?i"KY?R6#;!9g&R+Y_AHaVH/*gQMO(7)1[2HsZg5m#bl833oLVHk(=A8#H?Fpg`.D[gn;\I=a/V!;\Q&cl8^V0I;aXMfl<kH5)0
%I@.>SJ[ZfKH$WA2Lrk70c'/=QXsqKJ/%(>@h)55f4JK!g)P/\X_rg:9Z%j//^=BA,/>.hKhq/VCI19tIB6dhH2'WMkLp?6;+("*4
%V.6E@R(Kr+.%12.&Lh1[04-T5&J@%t!r7u6.2>r)SqN!;DRB3b#dag)[N?e'-K.]s&lc_%/1#6P\B$?#=?t)ESW$65#HcYbh#.3c
%VPQRFEdo%j7DmO"pftYF3B/j_/fuL'KBG@%#]B5'A9dlk`0a5M%?b_oN3r`.)R^PE`s1B(bW)d'rr$Wu,0?<fZZqH6^)4ai)hO?Z
%9pJP3ga*(;5#$6sd+q/GKSHdfQVqX--imJY*P'OZ?&\miF_G2<#\"^alE82b/uScT]aX9<0X.54RVMNqBCFZF.lWKid<A%C5OcW(
%nq<K!h$]u*Z"<gVq/d"dSn#fS6:$`MM.9lgA$]`^If67R191EAc!.M56#nnn`cgep:d>c\P-m&dXj!!9-"M6s="A$"d1ei#=sX@g
%$tZ^MY-i?B?$[18FcY85LK)CCPO,*?8F:h/%=f"Ho0f:2QBSMr("lBFDqD&L9H!Wm]10n$je3;9N?7oa.B9)g"W?eTomlrE*G7-/
%OGT!!5mAt3)gkD:TAsn2GUmGYpL%QaFi!^/Qh<mbi8Va*MFj]_1=X1>"feYtM,;*4e60d7$aHk+`a7/3'<fe7h&pgBGS:;\@Qn!K
%CeVYf,Z%,6lF'q,.E5Kth@mr4%[+^?A!WfBnk:T"7"Ujs7=.%8`ccCt@.#X2&<0t0BIucM1VUu`Y#t$iSN:e["UV"'HgUDWF<\(9
%ZGOnD:P#qt15:T`!QZYNJrR<LJ`LI\#H"\THQ#"=hC)@pCL&t^$ms:;+Y4DB*d9_W57i^,h3.IX`8"WkqEco,P@r;["qgOpn5b@o
%'D!SD83?/>f-p4*;%`ke>"<U9'NfGW`R<_a64'k4'JR1s/b\7iV@YcuaY5SDZjln`/@[C@;\'/_N_f>^.keF8K-_e9WjKtF&[JWU
%WmJ9g!Y\[EZuZ43-I<1=aoVhOi)5eDO9O+2[[H(7W]I-'8OA77nMGB+>n)S/Y!Y*'#c2-$U%:Sh3acnl`g^V@/'ue!nE%*L!\/pU
%PY\=*L5mlR5-Y61$tpcM8B<4.LsS59BQ8<hg4Js`lR>L:)MKe@287U99"i't$DL2<Zj2Q@#[Jk):j)CnecH[6Shn+fg(X)_ef>K=
%K9[Rm%U]j[LA!Ze.bN?DA&)aY+2!s=8l0*O,D:,gA(h:OGm]%/ZNYqj"Lb1[d<eTR)3p/ErM:@s*NUEf((B!b&2Rs,JIecMdRr"+
%8g6>\>SrkGTiLc'.,Z>Ni@^rm?VPX`MtJ5lO$)D5@$b70ihj,G:gqZO/8*o@-m5gN&ge;kOhKd+<t6=_'/<d\hkg/m.)jpg9%Hlq
%8VN?iD%kaI5h&([!2\NheA*=+&')0%HqC*#9'i8JS0bn"g<<+n""cIhCX>78Hu:.Jbc?Na;cKK(85(6Iglp?@9%TM-c.D>uOtV\A
%+,mbmGSXZnV<C4j&).u2![=Pt]4nc==#\O<VdC*;pj2A&Z`ON]o=XB+Vk@eT9Rqf<,Z>!:Dsg'p@_;>W%)rD+"+6Lde1jKd028'0
%V/,F)HAENMD#tJ%*&KCR0f/sl0;7ckQ*N.P"if1A4^.q=$<E:,9QY`S!0KGfae%`+ob7t=*]pl<Tt,`%.NF,kYmf1jMMJ;YebEF7
%b*PA>;o!7+aN7=Vll+1_McO;d9oZM*(_)fSS3kX1d9R%5ZN`EGN#+3P5jCi!)mPbu-W60/E1^*Y*ZMNu2)?uF>XE6C!u][65_LS;
%@[&_L<N'WBXZ1uK;G\%9f^o2Q`]UV9_madY%Ig5>rXgdck3i:D%W3`tKY[S`,gaUL(fR7FHQ",'bA&q7"cEQ;.Ip0*'VZ=Hq$m.?
%R->lsjic0Y^e+[+R^A=KMj>?i0#?n;@X,I$fh1V,PB]:UFp-n>gl@iiM%ZtN5].G%N_^n`C$"E#=XTCuJ7M>(D[4<1UX$N6UBDWi
%H9!np/D#G:4eD)9pt,[(@UYi>Z,NkO$n%`C_GMN/aV>@_L"mUe-`GrBJA]fE"'Sfm[K%a,C')h4Wd_m:I1.PJcDg#qQc1]fOp4Pa
%,EkgaA.,Q'SL>3`'`7q:@).Xgg&adLeL7IB1BAJ,;d:?1PbggT5Y]+-Fdd0*"!rS$ARK\l\q?3:eQ>.F!^IMhV%:%E8i9ng5]4Ib
%/Ba9>n1^FVfdS4P%:S'IV@C#caE14?6n:s\glHm5A1(ak6i_=H)K@Ef%OIE.L.`25#bm)'ioXB9\151nHV56n8S'XXKk;QtqmI;E
%&D`!*/q\iXPT_prQT9AJ_9EM1+REDm1=ushL_ZDt2J7Z-i%`6iH,N]<">4KDZtH=V'^!MgIK1^R!G'Go>HgZf6ddWUQ!=Hm2im[.
%c>VVdp4L2X#n\HL.5KNXp^DLl&HcY8?p5B,:HI*i?ti#<Z\)V;DKN(knpK7)MCo.]FQ.?(afoAF>D_<RC/k$JCtoD^)_IeuQP'A.
%>i?=u"T_o:G*j`lJ\LDr!N*3EN<Mda&u5W2D(Fk1Raafk<N';`TL;%c2Q2CnOas[g,6]BD4gr.$'U/6GSHnJE(le9abSoH\6Y0eP
%'#iDp^*&o@$`MN*F<E/7$$8J4,P:bq.g0,O'*^5/o*=Lo33a;D^e':>S9)Rbaj?WiY`XbB,p['[;MT8OaS]tq:!tFbpjIJ*r)&[p
%EPaI6;j#!h!/+sE33Kk?AW*L-:j17$8"&0Qe8LX!Q?4,X\./GI2d6s@6/kOu:6pI[C2[%N#HIr,BOM#[K0P>f@$@G:&%ChGM:L@F
%8N.t"6+k94S<,hkfg%oAD?b;a2_C&)*#Wu1!q/L5Od+(T>?qqCf\m]!JY09_``c"ohl0D3XXV&0@i/s5;lb:N==$9a!,;R[LB7r(
%5soa%#_h3TZt8H:95m?T*GLZ\;$K</1K.mBZ\N^"JEInMMH#;LA=!2A7Zj^HWu$nT!HI7a52dVZPsG83&ue1d*Oun>*UnAo_a$b4
%TG*SO.WhpqCY=Q+$Vp>bNP*JnRSOR<Xh^-=dYNu#Gn`M8BU$p^XgdTQ,[59Vj^"k*RJeQ1""u2VW"bgr<fCU&ZHD92:P53=gN5Y0
%-9dHO=gg*TSHbt11RLQf@03DeHPP!cNAV^\4dZ8S9pJ)>>fZmia$W/Ck.ubYdnre=+Ijgthd]YLX4Yj`F%9YtG!>G\7Hn?FAmc,X
%$csOoWGIb"oF*%f,08"S+IF(AS-.@[*3pUj/r#bdit*&t+%an@n&dmg%k[ma`k3$5SqhNn&#.i7Hn\>SlB"sL*2!K3]8sNpA%V@W
%Q7P*nk\@8kB.a^hbkc'A^e/T?^?EM<``\Y>`RJ%nKQ);eGD8l#$"1<+ArkdLi3@d8-6BM0*Q+u+b8kE4:7TsJjHd%W@OrQ^!N$@=
%$LEEc751'*me#>^\VIhW^,_I)NBcZ,/s&^PJt5^NE%kfN*YV\&dDKaEL`B<3GiQp'CGI+<G`^fLhj.nuK96^Q^"#\d3KbF3(5EO?
%b)dYid=+ih(Ea/")^*D'JnP@#.63[`G'um0[?mO&[")>c.%qo2F+P^^EQ4[pQmdL7'.6Z^hrH9\)jk_V"YM/S*(i3[(dA>Z#UN^d
%ERksteNI$ZPF'?#*`R\XL^1fj&jYf;8B=DBhZ211Ai`L<h<<M2`(Q#L:#c>SNOVH0Qm2hNmpYWK+D,5KH(5?^*eV_[EUu"*0S?T\
%G1Q@4VTFEP'8T!h>joVik&IUn>HPh\:miHVP=j1*RaIBsogVMP?QBllfM-I%H'OpuQmmk.QpGRST3uN"hguFbTdJh$=9Q?j;?e$@
%;^@^5GR\BH>9S=QJMFQ`Oui9kJs%\g3R&bA"Mk\``MZ:uJ3ouS?TBA;;J([J7#BdjN%0AH$gHM;n4qCPd6lXuWG"[&#48?Y!72S$
%a\aW^0m8^06DK2Qh*F3qd$TT'!`&,Rec?XAHAK2*%S\3DYrg%dL#2rj5k5onM`!l!S6%B66![*]O+:[E^C62K3MS>A_.K"[UVXm)
%2P`p3O,(S*8'1EL_54B+!m$%DXc4t<JU$M%jb,FTX9VSePO>Bu"$mFRO-W[2ciSK]Eg"?),\jsm?jogc=!nPko*\sjVq`t9BFua[
%0ThqtD!;'eYrtYE:a_-aH>>1u+c^WPCgbCoNUajP7e])%U)>u^,LD6K>)lKIEq2I*RpP)$.#B)\KLC8Y?J-O\'I>#j7C/AJr+cK+
%OOVP-!c135Nl4VMnNaN^TFZcrFrhrej/!W;.B`*WD4'ibSOD,gAU1H?fdNa\D#FbC6SV.C6e.Vl$&<V14?6h\%bYTs(t"+KJ3sZp
%n/o$W`<-5$e0*E_L?B>DoUD+5no-kbAFIP`A2X[P9)a0cL8EuR]ML<OWO23J__eKWe.j8dL&SVp*gV5o0RQYC">Lp5A"=6jUP,!J
%*'^=>+:"g"EOn+AZNY:tK:9tnCiDOi\#9)@L/9F/;1_m0PG>;_6=^tOU022]aZG%L_;:HG`@.Ij'!]=$jlgW''(Ze]d8n_?!X:>^
%Dm4ir:Sq.o[U:eQ<.tFA2DnqgJ`njo",G<k%1r]2,#OG5Er`d@X_e97_V=a!ICYA((;NT$aWX,E</B>;*X9@+f`:bZ6^Rk>',4oc
%AGL0m+o-s>10>;h^lT3,8`ec#Ar$dC+pMEgL(.NMdqL':",-Y[d5_LZp8T2Q">LRKO9t^Wd\c'q(khcW3WL"W"@-^nEW@*\LCG71
%2*EZJ3gZOU;)FL>Z4WfEfThl*!KL0aP+f14lm5K?$7cd\dm1Mg7?TJ=P6hjMdHV<6?c>\?PuNA%2ScP:*@&;6AcT>#0M8X;a;j)H
%_u`;]]u5oY7t;)2\5DgD<jloTFnn/6PDjf:5t%Bh_Q1IVV$'PM9)]R"ZEkcHKj'<6-o!ju+QVmE^&ub-j+FJL@OR?U6d/gS%&m!;
%&0MG&./MMS6k#9#2^Dt5ON;$-0^@dSqUpohB`kJg:/"<Ks*1PKBI-S'?j(LR(aIQ+#IS,PplMomlPSk%`1COhB7U$%qE]1#Dfcn>
%N+E(dfRb)58Lu!$D&]d4*K`gUk=VoS+CsGd`d(P-HYaDHe<]\R!$9=bQ(I0bSdFa;(6Pj<`0_8.LX[1p.rLBl&.)l05i>r,FQQF9
%P^+\A"&H$rZKnnq5r=LF,_^UO9!%*X;U]\%'"AAS\Mo9WQ8*B6!QDoH4KZ:G/VXZ7h!3=[6/o%-jUa]&Dbp889ea)S;O/R0d]$WD
%'U(b'&t4gi2[-H_#@VH$>LMtZ3e._@L6_4Q7LQLH?r*(+ilh[^$llebf.eO-E!C=SCImr@9/kb-S)nVCU=;:t)H.i93M5D+$6qQk
%%Eng+,8;(Kd[D%u$fWSSllnHs"11_tnj.ht/p#1fE-M\%?_Bq,_?Qc+k]"9;!tbbZVl_YMA`3f%fU_+BOG(?.NXBg1;2-(qLYN)(
%A"^7cJlO'Z>W=j=WSKIUMBKm2r88ctP_B=*\hU4B6k;.7]a)H;'IT+Q-+Aep7kbI,C,0+?(8=_.(HTG+c6+VJq&>`G<"gWU,/W0/
%U\<QFXEKRB@_-h]Q>e$%8;q*u)&7F:R^KCmG0iYtRTaqK^EL!nH(j>QNhd^90J7f7`+iFQP'?J>R3R]P736&O+U]BM;dNAdFXHsJ
%?<38MW0Ke\U!AVL%Tj-Q$\X?\5#7B0$;3@<3V&FM;b2$8;?`C=dmDH[j@/<d#@Al'aaoUC.%)-)P`S[2DFJ^[T)]kC'?89"=Aqhn
%Ec=oo'IABT\"WY\>Y)bjin(l,nkof5,tsr<<W>F)"WqFoV&aTgJh%Sf44Wne:.H(@'':ho`)n?_;-GG?+rLY^1H'WFN4>P>OWrU)
%%t;UZ-e5oQ^__@"1/%\@-&H26k&STN;_\A`<$\`oFspdT_h$TX(q;gpg!H]BOi^LfcsIC8%e=`0P&_o_hm+&e;^(X#n7r:ZXr'`?
%RO$OWnqTrT$,rVc!K>J1UZ+q>266KsW]*qUb;H")A5%UH$"H@nKTXnH&seuTJP%\#aOaU-*V6nC6n:mN4@EL_:SFpBJR^Ibl)l7`
%,86@pHaBdiJI`D$[B'A2eC",G9Z!T_V+`BgPEd/Ug&X/t+EW,KFcA@(Bn3T;0+ko?;KKr+`oK"[-rF!o!/>^RW%3RC!N^GMc,2d^
%eNRW"qgnn>nFViG%2b281CM+1d"b)a\Fn@*pRQtd;fY%m)R*X,%Z>"cf"e;A)Ecu@\m&3'<<i.-*76e.!=b/QgEK?*--Yob*(6q>
%EqcEM6P7;+YtUD*_K@#,"'B$<d'5A,hic])b[;U4B_[%5HkkS'_J3mE.1<U/-s,(#9]Q*XU4pB'$Tb%.\$REsK@u_cPY"[R"hAX9
%_fJFiHUL`h7drOhr[,qpn6+k<KbHHRbp$<./[90&PnEXS69JM*!.E5LG)]+G`Di2r=a9K4%'\cT%i;2r/-4U^P*+l?&t@f4#763j
%[3l[tL)1F7_YUgUnF*$;@K$,NA;cA_)(61MSId:_3'=-`nutQ+[?uUjSo,D3:=OWdVD96NaL4CY/o!!UMi@uC_/hjTKM#:$be[/6
%!eQC\4'>ui6n-S$^tILE^:j*f)OGBnOi1pNI[m!G2s:bZMV8F"UZ%#<dV].:O#R\IBp$(2`rfr(HHDCch8TF'7h?OHQt1S!P($%E
%fgq`:U8rn&V:KM=oGtmj<2Wr`Cd<>AJeJ^Y+o_^3Dp:a+lpJhRQtV%=A_=jS84\H]Z.TKOP3n#>_[%bP:QHdu:)1q27V@E6T3*0`
%pf^o2$1N59i7fI'*mbmj`^:A69jN.;;T]0]#[(<_Pdr-AVRc4H^_`5E:D]iQ>\N1Li,F4h3>NpF>qld/-0gc#6DcB=#J:X`p#JOD
%:e9#AU7tc08G8TC^D&9(/W>b_o8s:C:@tAJb&.;%6s9*E/Nj-9.gYg!hAS5[X]$Dj=9T\Y,XCCe&S;!L>U=Eu@ptI@?76S#p4CqM
%/5V.Uj(eY!7*$!6qR1D`c(h(-QOG=UeZ!m,%K!P>8=j2.'QJS*7-fr:+B-i3(8)4D"7(V[Y/V<"eierUQ%1GmNm=%F_Oc/230'nC
%#n7*L6com3J.hgn1]S+^cOKq[Xk'G;Ljp,fbsD6V$@sW.Zs^oeD'@YM?NV6%^DYIRGt<&i:@1[?`]u=oJ']$Rd^&tr_?:[8!e/cs
%`[DUCVSr?m9CP^9FQbQ5Q^!fHPJLc\f0gkU*TBM($[)+$A]0[<3W_ndZ<2f-O.;8+S3u6696n%taM&#!\C1m[bS\EP^bYh7m:(o,
%$:.I#!+AECK=qad/@I%!P%PK#M0=8EG0J+.RtM\Ga@sM8p_5/Db]=ljc[*\EAdQ]4C)F7L)Ur/=&6;e*A!OP(d\g."<&gmL<C6_I
%Bt#:eXHW*K'8IA*mZlpY&j/F8Pq>e,L[pr>Mnh'K6!Xf\%LOIbL:6fmZ8rP>ZC+8Q+<)-!6L=?GN:;!"I:b4EfT;3IPBdukUgM_u
%A!TrP'S1%Z]nXK1Ns8A^]*-eln=!I_C!A'2&:kXpX@g@uL&2GE@HA7tJre*k%\"ML:UB92%P^0.DmOI"+XTe_;]iue$.tHmZ%1SZ
%R!Yaji<]pO+P.I/G#.EXQ>Rgl)3.Sp&P1OU3YG5CX\M!cgmW:'B$dCb3\nb^7/K.Pq3%0>J<;f6iB211,Xk!CBJ9^5=^n7Z^^TkR
%@+c50*ouY?$9_U&=]s&b#[p68BNW)37M,<?6T<o#:FI"i?Qm6Kc8-3\)Q.`XB7ps=iWs>XOVbO#V(\?O01_k%)%MRSB\s#l(`!<j
%C&"^E!\;*cnL.!ZjMu+X'o8>(I5N#$SA#Rp&Rcc^7,G/DS.ZpsQ4IFq^-mBhQr$bO#SR'k8t%*.2<2l=Gf]D)U=TeeQb+U$_K@(l
%==':;A.V/\Oa\k?@%rZS.uC#TAh!/%5ES7:;AkL;n<c2#<!pL]CWD$5mIdb$*c,P@POL'^CI;U1"f%hUZVI?!W0N&e0rt5)XGIRU
%n)V;aU-P5&U?V2AdL6bYK"m&F>:fstX,mnB+;fif#nD^B9TA$f^K*FL+`g+E2IR6j8Qiu&idqfsQ?9@H-`F?d6]E?@FEF6(apTs@
%furHAZn%V7pnX<2lI/T`&PBua:F1$_73]f:Q:F[_0'co?,e46C>?hdjDs*?C%nCE8+2Fp3SE$jiM.=OPeNT[,*]+EZe\hSG=sg"!
%A-D2U^a&/bY9A1ea!C1V+!e<^bpHPNLpb'0+XVdTG#*<.H),qlRuYG",V)QF]SqS?;T26>RR:"K\;m"?:iMlQNrT_8/#8g$-'*_n
%?d%r1:@^LdHSK_lA43/VEIG)*fandCOCjbL"g#A'@$e^`@R^UH(`GRtJjL^ahHEZI/d7!OWd[@P,8`?L$q]tH$ubP)-p*1U3NNNh
%@uTk4_Xf)^"C`0$.^N%VVip+6O!A"jfbJ)np/[%!R"3.$EZV$3&i\8:P2]eG%N+fWQXdI2e2S[BU3l'Y'"JbHRgXC]+[qDF?<J/I
%fqH?D8;UKnkU+"b4uFh58qeOF<3!3_;$atEWTl?Mf+I^HO;3C.;$&G;+ne'[,7<l.<h(oI5R@4UK,$-kEml6SR6FP@b6=BE$^-al
%%2^CS)%4faA%IF3bSVWOS3;s<A+fg_+VkcH5ogXrhr*7c![\/$o5ZYbdkU[O80C'jFceV?B/hLP4J)%bLJ1Ki.0GcnU/6,.8WmoX
%*is3,OYH4%nYpgb``86/I!XQnGdEUl:8ScId)6>'r4<W21(HkUCR1BAEmbV4-@i=t=kcp'9#>,Z8/95p:gRVn&PI.:<pF.$c_$6W
%l!BZR;OWdibi2`Y72#c/Ze)N3J<D8]BTZhP-k@FbO6"U5nJapA96q`Eq#dZYeR)0_ZBIZu8UP/ES##ff,3hi;l"+M4O@:>O#:::n
%&E%88aGhF"(h+^.9`rGK($=eq-R64%@l_\g>DP9^Ls&.B,+Ra;l@c+-KZhXI'cVu2aH50_V\)]O+q`b4M-1H0W4U<;k.X/GV2.Xk
%@RQS<CnLSb:'1n11F/L!A'R/`GbNGBP3PK%7WRKt@0ZMQ&uNYkMV\/qDrDrgNHU/Xj;=s,oW=e6iDY:f,`.eM)u4NYNA3<L8/`BX
%<G4[%9';q7*4.?7r/tMB`-1,o9L1?rm</_F>@0!o\W@dp@-o?/(M.NKm%/jj*Th!6C0;FXE-NSo(g@cBFAaK/0WPb&dT7s9dA%N>
%Lr/LICj@j:-s)-4*7sfga0X!IY7ll-;B7FrL7@g%]\l5L-Aocn'p$MJ0GO@cdhEC+;u.m5<_cP[0p-W%G07n!B@,+0Ys(NX@^N+?
%or?"_Tu&3dZ8)rO">2qV@#/2Y!C5aIBRf\!$:Z=(dZjgATO/%.Q-O->SmWOA8XRO2>f_&G<&+&HX4i3S0^rb#&\94[$4Nn!Z`Xr[
%91NHe53n2fo+$5l+C8Ytba*7%.anGAi9tggl7kh\2+XK677o\:':MeWH*dXQNL9$j-:$"MLI`/]%U@9;&RqVmmQs3K[GZZMW<NJN
%dQPh(:Tbe`S>8]%PGuD_8#mT9TUh4DEq1p#@?tL&f!>Mmg$4!Vi%8pE0kcd.%tb$CM/!\J-F$BE$Z/-V_'4ca9j_M),eHF!GqW+Z
%mhL.WH4mW<,g/n,KMg1HV*Y)R-TG^UHpMj3+P>:Fb#6YugE87fAF3I119"_&n6;]edH,qh&sNs4V'mHTZ`t(Li)se%;I^E2@aqmg
%,%@sTb'4KtT;Z%I%&'kq8&6KK8%4:aKnkDn20_-]hdR:XkT[Om9_F?BC.a^E`Vsrn\9.@eMjFS3:+hE+l0)^;32c)?;ak7?/OEGF
%9J"[1I$3nBL7e7/ciY4VENk,!.u"3e`RpQHhr#O$P?/0U(efC-EJF\)ggXi'NN,)1Z@2ub]+T3WS5VE8FV5H4!!j#R]"S"i0`b49
%b6H6PL>GKQ7b"V.0EBJL2+6@\!9E"iGf"iujHPZ>i3\s..M$&9AsR0?9WW(WaH'aq*askQY?iRD,t>+AJHXpnViYOu57?-S=sO*?
%5f:^#>?B[uj\Z?Aeu.&&nWBbCd%5e$7qm\R*ifb+I$[%->WbO.%GY:r'Et4S>"ork[2WN]9N"/e4#p+SRNqIJ4SF%]ksGj1(%s#b
%NrWo;4d*ilg^8:`TaXV2V22FPR9&]\3%2F)V[i#MN_qeT;2`V\(`l+4"snqIjA#it!c6e$JQsNl#HAO%'NH`6XVXlB#"tZZE$DLn
%6pak8VTm*oE2W4K/a/#$oc7p=7QB(`6SFBcL@P:iLs3s17BjcCrSa,l@mmu<Hl<=+,qV>+9Tg-KSQ=KU97g&qB=*4ennkVC_TKkj
%/+*oN3EohMAOG!PH+4DC8g,]3iuX.lSdD,8*TTkIPtml6A0FV>9./Ojm4-%:;Lf%FVAg!nP\bn0Ub`Y66^h;L'qIgts'!`l4RuA=
%R&m.bGr#VH<B,un^7COVP9KqEe^OUlm#ngqLO@5Re$mm9CU"/O,4oUE@O;C2Jmq%a%/J.j]5]sd-;ge>X]Emg,nN&d9o*bVQ\5Kf
%,&(YQ8dUg26jT7mjT^;&;tqq8N(/@]3!i9<;';'1j:WMu-Odk?FRt)g%>cO0_[R<K9gTf!+95;"3e>dPhG+RkSU<ok_Sm9U=q+t;
%&?sAt19?iKG%.hDka5r/Fb;MPA$<?M1.(;GG0?mj`5!J]4\WVeO%Y)=-CV'@e)>-V;.\9Cl_Li#7f((B#7(!+_ke"kM)CZ[@ZRaJ
%BMhnc&MIgKUM^upRi<XlcXn;qL$?`:']HqErP_'CQpKt+,&QQ8FCY]_)E):TCn5>cc5H8FlX35U[`C5(='3pJ7;Pju5f^*$06GLN
%iIMk,aQKH?*?JF*C@F=.5,SE;U>8r!'GQm60+a`lojTID5)\VKU\M&p8u)k.\_82G0@P,GF;TkRiVgrs-pA;@/tecTMJtDI/mm3/
%OgQ(p2JA8X7'pL!*":LfFD2m[U/BYion_O1ckHW'8.d)\U+3gqlqi#-Xb7J,QX'7AW%LH]k:3=J6XjrocjTnr`&<>,TlZCm9Y!o]
%b>Pu).'D5oQ/TJQe1O^+;_l&8o,F5Um86Y"AiI%IgVK-%>Fg"KWRZaU"j39c=:JjP<OAu`gZV-A*B<90.ZI3al7eVninGC)p"DIB
%I0Iln2DRl;I>EGTNUW2g4@+D6#PEI8i]\'?4GXlD=F>b$T/&]rmMZ4NKdqPmoED"_#73Jj/`rSCnoqdJh^WE3'aPubc<Nmnjsm%D
%S`DFXo/hs\cH'bhHh"AA.TqqA&0@PO>u2\&9%rmp)%_j]6>R',-&+rD,bbumrfUR'9#QF%3]W5jD^n/k/1'9AB2DWlI7?:].dmYg
%q'=u(L6ehIXB1igJIuiXMp4kF>`&"Af&WSp8Ona\C83Ui".;tKFn%;*<-[8H!PC2:23@2o%!eAnNL,Z9&;ELld5trS3mlTTllF%O
%ZHO'8;X3bs6E/)Fj"1,a_UmOf):u)LJuM@tH&Uo`Zqb!f^o3'!,9&!f&s[>^#u?S=M<M'-2,g1W8P48%>\!I)>P"p%#^R3siX.)U
%fUUFSA*`f]S`h4-Cel<Nagm.'7-1Em$=K+c*:AU+S_6VETA"..'F19r3!Q<\=mn0LL^P,bE7HHs6t2:g6UJD:nAgW/'Cls`677N5
%pfo?>.O6Ci>I.ej*M^V##L-3)MqMsPdI#*o`*=1]i1NE_6BiKP)89QSPGDGN<VikT56++9,hS\-"6hqY8EW`Q?,+rKp";tn%NRP4
%#&1Dp@N^!E>*6>qhe1DV"OuX_ODdCA$^:q5%M^s_B'^iN^F.uohW\"oN&4p><%TL2_2tCWec\B9U5+@.mBPF@^(=e47/t(7_W?oG
%JE@UL]h))Hj';MLUa\[.)s;cn7Ak6n&U"JD&-]V)>0t@<'[]UIXBj'k+GUQZCZq2kq')1U,%GMR;L=!'M7(5ilPa[dcKdA]oT.A%
%Ou-'jdK4Fo89ni)0$CX60p;Hu1EpM6(^<#GH'*s5W!92A_QO'%"bt^8KMp,k[,#u)PSfO/f=j&X>0=>^UoQ5V'Tj8p!U5?A6]u(8
%+ko<nJ-F(NWgHc2N[6HU!H'_uS14bK,:uI45oSH'V9r[%Eu%=KbViR[YpFM0(5NA?Q&3gWb%6]l.AVIVN54Lk,./\SVnHT)f9ViL
%"QPUp5g]T,D"nT9*/0\5q\[UW":nDj8W_q<7+J&L>jVsR;WLj]QuKjZU5oq9BV%W2WXg;!Gu.;2:'-<o>K^M(l-F&kg*C,FSj%9h
%<gY50&7dG%O7;(XpWYh*_I@YN5>>0.*#o3l%()@QaZPB2ED1JdGcF14[IRQu+bABeOF(X#;-65HSk>u*>'j9'%IN[\fpkU@$5A`1
%Y]SN;'EgLdB4QKb"J)fZ;uK8SI;E1u,f*lc!GWnOih2`Kdf#b$6)/Pk0r][bM(O>)',!<N5A[nD<9?"e'F0'j/i4o"]r@Lie]juO
%:!k7T-l%rQZiipY#8#.cRf6>'#n.k1\RIlS]S,K`_t;S,.MAZ0XH[s,\;T=uV.;5q/s$Bq,]XHo!0+qLS3;Zgk%q<FB-s;Q7[a(Q
%6ak1<1r0W.%aFLXp0'!q309Fs;$*f_!ZBB?=gFX`95h9p=,G&-7^^4&Zin^4Jbf1YHNr0OJG&Kk%J_i,8$+Os8A));(X,.gbsNY,
%_1@k*ecF'6B&QdYC[tMJ_NZn(/(9:jKsr23d=MSDFW*pRInd+%8>0g3AgbuIjF+*A(FcEKOV_T6$t;>r$_-+;&dV*ZF7A2!,s9&)
%bEZ9LY@`-h6Mm:,K?@r;\I5D\mP%Z)ZHb=2$l`s7*/"?`.UD%7b?hMbCJkpFG@npB6#$DD>L=o5O<$tQ[X""dWKo;,K0^Hr@`$HM
%S)qK=9;$qaSL-34_FQ$!1(0ur=Y1t7ZNOkm99;Vn"/sR#_5A*LoJ.Y2K0&Ga"QB&MD_,-F"9VJ'mT#;L]5`0IeVA+HTIEFK1QgZ^
%TTQA%3@%&A^E/R!)q-_u?O)Ec+`!HLoVr;IEjAM!WGK8RP;-dNatHnn>"Yt[N7KPM1(pViDl*taWriGR(J1j+'2NG4J;C-MEsEm%
%ULrPC\eeJ6>foE_*fj]'D1c%BAX>`CX^u_23a\Fi@eQfN5^h_ee5R0.@`PuqR'%PR6%h&&'KCZ-f]>D.g!hJ%a[ej?V@+qdNJii9
%I]34:KbMIg(g;WZaVaK"0hG#/#R"kC==*8ZH%uN`7e?"dOR%#KOMEnrlVQ@?-,U]lG;H9FG!anPqp3^];!AnAo4/Q4M/LhK5k/Qn
%'<u6qJ=#h"Yucm]X5pVc+KU/mk49f-V\dTic1M`j$`ck73$jbN3*-ZN`DdbR^dD"M0<<Ab$5u#m,K3[JHL7J&c9#PJAtV6W*3^X&
%T82WGbsobeToEN)":],:3e84fX"kpWd7)0;>Z9:_K,4PIp+Xfpr*2g-SR@+492.?IT.S1j!0jI_KNo+WD^4dm!bF+,Re5$&9S^_"
%6L3Eb6^k?O<#I*H[DbbDR7-qkk0X5ORcOR]P'2^Q`$C/&Y/-Ysa=q@d',0mcU05lZAh9H5.a9hCg''&K7m9kIX_:<^4Hr#MC>L0G
%JM8Ra=Sh`r&-HHrFK)$OZkqX54?cH>e(*2F15$5<-sT5Y*`<.b]9?*s0Ms:;2/IUV[7HO5Tl6mWMRUp3irrHd#nL&\=N5P5b,k+q
%'RU9S*Q!K*n5)1)NPJ.7TEpP6BpG*jYK?4n<&D:'K!hDD*4-IM8RkWVk"T`[A0iamK(`J'!MBSY)n=5<?tu>hL`<@ngo>&%pN6p7
%0ph%:f76h4(R+7ALiNTWLantG'Z:;:Hg5-E9jWBH96emiZ[4E35[_N$T+R;^)F]lG3K&>fCqhB\+HBbQI=,Zsq?$dtk?_;ckT(-O
%AOmE0X;Og@]R^qY9FJh-PhHC^jBR9C'rf8dKK)T!;OD,KlTq6N\\p3nkc&+O^i1MpJM.GKiKk93(P+\@$4pFM&m=UiOk*)1fh-K7
%%F)H(6a76j%n_fpd)M`ud6.ln@@#qb]1,*7:6LGs;bZ4:"s`;GMIgsOoKrl<QBd;9&#i0Mf1^M5?E>?d3BVMLRZrJFM=_K>4IJKM
%5pA7AFOJ@>6:'e@q@n1YA1hT@BnGk,p2[<V/KK+m'+q"%AoK+-FQs6YB`u=^WF\R+6`0>2-(&?[>DK.l$8F!HQgdUU'd3':%)Z1i
%BI"m>)PV\j"X1)l=<.EVL)6",]g^CKl],a_'F#PMQ4i<u'c0,lBS0d3Cf;#+;$<)>[dd:K-^H7k,Z&m==(??_Kh7Ib7hYMP@5l6"
%3\.j*N4$N?is2\bpftr"S?.<YE.0kTQPKI#7X9/4Wd,T34#*K&X0i<s1(YZ5RpQ5u0GOD@EF`3,-Btd)^ehWg4ckk^d$dpF&mE9p
%/K+gIol]GMb=0:FP%8He6<r!,XfQIefb2k[k=g"Nk8O!tA=m!)YUh6BAZNZn]M6\-egh9dU+OrVn.:Xgc@YdGSNsI]?P]>[8%19Z
%;b8gY7S\T]@!'imk(V>aGf/HhAUlUbcIBOMap?Cb]qX*D^hi5R/"A"pi)FJ4fWiA@;tXei@7CM8*m,TuY(o\K#4XD\,5tnM5EU.X
%'X#hp;AoY\[Hf*bL5Q2nO1kff1PE;?c,i`&ijh9-r.'Vg#XgUDL<%orRGLO!)*1N#GsJ*G`H^o.U4>u?YQPAt[[=5=X[T.F\13*P
%.0,>[bVeL.!Xd]eL#Cn@jfWt)fVRG>('NQ:I)sdJg,B]p1@^XhDI0D@,>h$-H!6tX3uug67Pp$3!Ptr#d?cWm_6/`[bn.Po@T[\s
%4K*uOH'i<t1=n-[eNb&K<l1&F:<![jZepf<'"Uk'Sjle=r[*&A?C7[hD;BTKhLmSrHYr4Bpp:VSVfteHK27Tpa$^#jrc?W:(>1`6
%HGL"&GiVE&ECBm=/rd"WOQEer(#s'*G6Uo#'X8V#h]Y1D%'`h3%RDqfVEt.j7]KH'PsP<X]5I&RTP9b7=Q3Agmihd?4-[T:JJbGb
%HtUR7@OK$:bQ=UlB,//H#0"2l7I%$#eD^\/45:i$:LpJIB5+rF'qr85.TPYlgQUbMOTP[AAVs8XAF@fdM>C;=4*Y?L2a8%fUHP1E
%6/rGEPjdu^EQ9`\;lapiEJMGuKCVW7\1?_ZU,Z)&];V\s:#CtA^,VidGrqT)616s6\&5Mi'2K@PMi>B0K=2dUfI;b;QF<!qn'I<d
%.(0T4Zmol^d(u1d@64O&.d08J*go<%>ZOuh&g[;g;7k8?oWL)S3s3*^3;GtncG9*?.Es>XB4)2gRf4LHB94Y1ID6tAQ^ptN2H;i?
%NmtD,LtZDj&M$T)/mHG'Cm&t_m@^o7=O8[1/<PTfp$Bc<K[Yq'g#80Kgpj>P*KCh)B5D%#3!+XBY%cQd2bY_CkeidmL(dUQZ@ban
%E8[U(LM9I?_247ZO/,'d(9<Id0hoH2XCGo$Gm*bGFmKO,ei&SBm)jlaGr[3<G,R)=%AF3_nT,g>TF';29#a2@;Jaf)AB1%3%!NGb
%1F>cip/K/ZJBAOW&&X*#35FaZ;KbFL7*A>_8bF]FG,u'c>YWGfJ.7lYl`lft8k!0uWnA7lP0Wnibml$4oIs.K1YtcHBN)5nUp<d6
%7El=]U**FcljO.0>`=<*SY;92Q0$#+Fp@^h4SDLp%ZF$(gLtVN?qN`gcrA7"jA):=D,ngjPYe*&=lnuYA[3_j2jUcPV3GZ\WL=h8
%p]4C=%Q?00H7EM31+(GE2DmPu+t1#b-YdgZl+B,_X.#TQ1]]kqWb,m_Ud<5f<6`]brm?Bbc-B;"NM^<CP-"4tK:!ZWY/qGd`U(\(
%7Ie4!R%9qT+I8BEAk+1,C=H6<46D/\;.D(f#L=lO:RdZ@TnkBK2-%m2?<36A:XnaHmj9,Cea,gcQU2\AlpqeFgtJ`rSY<2K8>N;T
%ST3`@1Fm3`L*<D=$u0t*Bu3J@ZU9QcG[RUbB;tEc_k:U32m`0-@Wog<E^%O;(k-kPfJbNHdN2;`CEd@\p'D'uW0eTN'^70J@WkXY
%c&.s\'GF;E27oQbWb*UhNAX&$-)fJ=a^3NaL)*bU3bdiWi*bc2<X_SlVtAkF0g#(`>1pj\%%SEgBi6ZII$qnb4V>$<*#&$d'sg91
%Mr]JjR%5N>(/1EYQlUd>"kp+gG2V0fLJeknZ\5$HT8M<Q!m:/g%UsV>?"??E'seS5aF7.5Nl7&(Ni0EmTPG3oZAR<QB'4iWU1S&.
%;_5,PfqH@V>sG:@)5b*ohArZMJU'n!%'#a:$-Pl(2,U[^rIV8!=#E&g_1bn6DRah`Ad?`hOX$rBG$nnqO'#Dg_ceR\]G!.a/Bjid
%;:Y$;mSPZMWb.%BMh5tDc-DD(2"cKiSKSGUa=D"KL2_n\(QnA"3sh+T->I]PQ/JYlB?0?%$EA,ifVceY3L-qg4t!/!<R/m7>>\Ie
%ZSPpakbdo:L9aH,%!$OhP"b/@Ed!2EeX]j*Zbu?0Bt#F%LTOa7qaA`T+C(O*AQ@"cArgFEA<jJW0Ys=:3lp!jR??8IAd?T]JQ'Ql
%FuYU?LoO)#i?44>1k7E#WL'uYWK<[,<2Dn$%QY\$qZns#Yj#W&.k5]^D_;MDFta37)'nQXW%rI)"Zo,o+cE0'fHJ"p&l2NB%`T^!
%SL<uNE1&Bb]W0SO%]Tk$,:Dc!-t\Ed;m/QFTq$@-Y;9IT<"npc'K_ncWd:4e$UM/M7D007U/aBSYJUU=&%%5G_=!uaB@X/[9r%PD
%K6SEH'bT!H[-L&$]iXU4[:B,OaN2&Yj`&eE#re-PK2kUa_'W+d1K-]*LQ\H1m1V'2bb<t9g)ui(;IIrr.joNro6[Q'LI\/S*lfr_
%j>?p;[1W]&@2#$b8cgk7H3=W2n.KO(gjGGP\R[],L*Uui+C%Dl4[U<c$J/EQNbHE@XW@U%13I.P>Xr\/O_gSba!mBA[uS,7=?NIl
%FYGY!mS[&o%QS$naAd<J@'g-Y8>NM.*>tHj<2-[@-r?@pZ##uq<A:Zaf.l==%'k#QWaeh9lgW'HW+s1lN(FG_'%HUFZHU%R#hLef
%/d=NGf*Mnm9&9k_-I1uM6VfT]KJ##G\E_W_ekC*PeZCY"l_P?L3^`?L]q%b'65,h#%hmVW>Y'L[ak#G3+@=g_[a%^o^r7&A3gb(3
%eGLn*aH15V\J<dY_^L3uW7K@lJ8Nn;lbK#p5(m-;XYVi/^T#d%dO:o?:ouOIdt#PsC)r0<H8O/5Pa%Kf6+%1K_O`GYXb0>6erch5
%LD!=Y;:R]pP+t3:o,II$mKch#cHpuOm##Nu$odj_W+m>FN9HJ)C)mUqnZA^hFU!G7WA9C+9;np+lr:>%+:0(a9sfq=,a,=!BH7Kg
%-50*RlO5eQq_Y8&)%[5o,rd3u/P<Z:G)%bVe#BcZ'<OWYE8FRA3^`JiA621bpeV=c<7*aq4!]Z_U322YZt;b5%P<rJQE"(8'XdR5
%NA^#u/5!cZZ]5`4(j8W[N[:5;.0e$XdfdOgAfZp.9_<+hFbBj%QWH$0?j$j,>W(iOJ+\AUHE(+\./TT:,jS:l9c+T1N2=hN+BW9t
%Z>.76@%AH8FnC;o*T#]7/e*DTBP8b;EFZgG(3=&iJorW<^j-Zr@gRMk;o(NIe(Lc!2ut@YW]fTp`e&=]VXM&EeetCTIT*=(O;VYt
%d6t7bcnc9OTNHtj-WBQ(A0%iSp#B#Wc6+gG`\>jfL1`I\P]Ht4H;/dV.+[?V+<`O@Z-ISA!LHNccB*f;RMEe&S868b1X`ABV"UJP
%RqgNJ=;2=IC)tlXkZ$T5,!B%#6ooC`>)-S[/$!D*8jq(>Wn*;XR@]_$C`VB$,iVh4%Llpfqc("ak9@*L&,_2k8h&^:Q*!DZAB11<
%etE1lcNkUmXlC$c[_8\EB0p`QO&bLBg;g?<<9jZC*&Quk3RA^*dB(5^-U3<"er`=l;8a-m3c&O>$u25RKZpA?=uGUS6[5A3dB!G8
%^7j%beZ;.<MNHgcZd,AHJlbD,E2uC[<REkCGLQkhMUpag<S^DMlbHUF-sY<)'=@fZ<cmY$<mJmc>=Z[7SCs?K*UF6m"ZOu6K3],#
%**1lV!.CS+<d!^V.R>]"M/F@*/f4amFmJOQ18iTYDB0<S$=$Te3f6Z8c'`'f)kT`TA"m04K?KDeYNj[>a.X8Je#d+$5*a&6\ol*J
%kGc)XecCP`!<HM,\'?a+<aB!`DB3+4!n1/X%LM83V.dG_'T5MD;4Qk$TiduQ.U6W-RAPP+#SA:'9hJh_\;l<JpMLPF1N\5\3!e+R
%1@W,#Rg@UPqF+RK's=<,"./>1E#nalW@2),l\GcY!33nYj;:Z2'\\p.J1k)`>?9]DP`PsE$.hb+4E8-@E1LQH"?Jf%lU^#cS?Jo2
%*B=^jk(eg#K!+/"<oH)gI&c(!K^5Ss&c4Bjf.jP$j(9K?LK$"s\hj]EOX;Ji%]7U$_\YYM]SUSJBnf.k=G?'3k!a.<.U5KT,,p#B
%>Xtn"8qg=-3p,O#A\C^fiB<p6'TT$UR+p3H6+IJX>t>e[b&nC@iV0=oF]+CXTNoNAV.?Z48%p$Q(KKQX;N6MYf3#Qn`L.'W.U7b5
%EtRuE_KANXP-`nF\.2k5f#fII-i,!s+,&s!%HcGF[gmEEO`HI^[uM!\FXgUN\9XJV'A5EYT$dJ8Z?>6X-4XC*lR4."cS,s6,?67N
%7&t8I;<"H4h(h)IOp*`ViB!PeX1fT=1lnG5"5a=E3]V^GDap#XW*.#OY,Y_s,m)(b:R(1dcr!6+Kij/TZHRo#m5iY1lJ7>@*=,H.
%>gp(G6r,=meE^.TJ_QiZHfrS7Xc'+(M0^0K[FjcE?72;$WN>B-=;P8CVIZ6.<#T4F>8=?::(_@C.UGWQ+]?<TeE\Mg+d$lH?:T./
%>]X:6Q0"-21/Y78=h7\MNcEc4qWehlot'g^DSB&Y<5#HIa</V*If:GWa$6.9C/$5b./<>uo<W@.M_7Yt?G+YU]q_4C;au94pnP$"
%o5CLi5CWX)J,[pe8ZD"8O$7F\7KYmRgK.a2I=?EoIh/+CYLA]A;YU=np$;V!gEXH%Vpi?thtkIj:]GKXE4L2lp?]$5Y]p)MhnNZ<
%T+0D;2I@I(o_.k>%55(MTDlmajg:K"hd/r-T=eW3rd&a8q<",9T'`08'0j7AfO''Z_(WhVLDNH9+A2I*^-A^+o(2nVnH[Zg5Em2S
%#FG?!A\\/:Cd1.Q\QX?-\<07TRanj7Y5@$[c1pJliT2^3Bo1EJg6h])Ens!1[q>R(0q7[e7[ii$isr%qNfJVgj`2RtWE&oUVRJ:(
%=I&=R2Odm)m9JIqp@e-JK?O4#O#F?0NiQBR#j',^=0mA0Irk7[Mkg=Lp?:jN1Xfg0`mr)"SUZ-7I!K\e@^tq4^>[Q?EdY0d%l^J+
%[;hOO07J4o;At!@=7bK[)e`<REihWK2<Ei]c.eH,/82GkpK>k'rc6c6I&D2b_rfO_j0Q9[anb7tMuCijG?EI8paAL@O#b@Cc`Z"X
%hU/&c4f]%frqu0&_9nl.p0[i?Hn\oc2UnDoS1cPA:LBa/3PO:uFLhC3T71ePC?MqbAG6W_427<PQBU-FZ<L(IO+"='D'>A@A2bHH
%[N+WlH*DX<Z!Y60ak,^rDjI0S]/O:]g+>h,j_/k1(+i%gj_4Ck8%[.8KPoY4ICGnEGZ<GJ#?HaMC,rBTi7c;f6R]]dq-urn(s5:p
%PWo@4h=AFY2b(LCg%mCpRiR"5!82U@[u8"5UGgKj.lFJibi?%IUK>KKf.W0q?r%paj,:C9ftBn`XZ#Rkl]^A8fp[&fIrb$Y.G77m
%L<<O9<SDf*5G*jGs7#OQo(^fG%E2B$qY=p@&%.J>U:2NIRkY0qeZBj[B3R<D6JTq":<HJ`qRAUM^NLGV`5[21WBL&f]eO->HtKu2
%'?YfKLd_2X#Js9mBB9XcF1%,FDT;7G<NW]Ns5]gL^WeY@bN\_@s'fIcAZ9J4e'0hL%QCa`*U;d/?fPf!m.bZiX47DMqe86qm-oq.
%?]R&UF<b2H\AHbsp=%-kTDaTcf8nLALI'"a5VPAdH2YqcLPB16H2m9$2okf.He3bp"nC=YiqGu/f`OQj#8R46k3[:IoJs&ZZ`__P
%A0KS^OL_>j@/o6]ns@h#bP>bo9WQ!G+PT+=ZN0p`>3LIuNH:uiCprdg_h.S!lh"d*[OLc%gXNcO&A7&Q0ot"BlbZ*IYmp[eQS>n:
%2Rr/-,k'WHYDt5aIYS,DC*S4m[IpM$=6t!M`IkdZDuAYT6XG/]1\m,F90ZX.aGUT)RJN$(6/J4CBioc(M[t+#'XILqn%CG?U^rk_
%#/&$cqeT;cA+:KkIcJCcI/@PYr5OZPGju_;8\ae3i6pTSX&j5s*5+I!/).qoAqo#CSSOP-Cb+;qMc[lXs1VV3S$>>Y's;DIo<&Ij
%CY#;qeQ2WlFE2F$cafKfJs=jWQkp"j-QDV`Y#`*e5TR%4YW'h^OsQ(G62%-.j=>\Y_fgJomS7hB607Mj@2;g[60/k]DF*A*%@%TB
%m^&N=NfMCK/%b,pB4VrCrqZJu?]WN/N\3Q.3'.!(r*o]m>5.jpf0'SQ/hCttP;oS_fl6>RP>^S`^q*B[CL\m@eu&EG4[+;++c<C&
%f6^]Y6nQ..'MHmsAf?G:CJgAM#323)7gI#'\_&;K[U/40I;p8OYRTg=N8mf_qN(Z&?#8d8J%hW)eHXSTQMcm.%_R1m?ZJG=(?B$m
%?5DU56!b>fATPqNi[f\o-k&HCAjK`=jCLV`(?D=GIp:ie?4`oFL`gO`=iL*1G&JbVn-H.B.Y,DMb/O<5#V5&\=FW<IMRgXT*ca\2
%3PPE7s7fcrp,Oa<><jM68-B5,;+59<'grf.[:(5Ypb4YID.%F2'Ou0<%<@r*SEA]#(D`pNh]*FJVoRO3n)&pk@W@ib9mnL1_nt@(
%OC.eq"CCI+/juNiMF)(]Y+lQO+2&I',]F`K/,p"&US*92l+3/H=nrrP(2:V!0O(1S4(fcZ:(MNf@C>=8U;poqK3_#$m^(2V-0`CT
%`b=gZ"[6AKMt:#RhAgB"r.?g/4a_6k33*.-#n=XXdQGg@F1<)tlgP6sCVD]C`n!3Km6)8hDf/`%*c'Gt2-BkZ=05W[0uH?NlK%m@
%:f8bArMPkXK7A9W,=Ue!pCE9;J,AtXG=K49[nUGW8PSY2NW+TKG[e!mlb_!)r3Cfsrm-p8Z8at<8b8Sb[]R!fk1uDraSFs)\OI?0
%^ZV5;54<MG';s_PJ!i%cEhW,PO)9*7o\5*`l-UsYig/_!4]@3'kn`;kgH:g5WD-*c`SPm3A38O`q970N[*\1k7a\o8rl:qkfiG.e
%0o?aABZVC3o1*"?aIi4h\R^dd3O!jGPN8#<nu&mi/K*VFEC!eaaR@r>-%ik<@>g<05)da+aWOqKa<cE8?1u8aJc'6KNCs?Kj6_j#
%Do<kHO?[>*jO8W"2P!FRl.#^oHbA81R,qi&kGgXkHhu"'jo2G&,.emt\%7^gG-gurIbK9moV[VBs82NRlsMX63@cti[dEGZqoe$C
%KBkWG&!/SuVu>`PA4,6k;Vu6L?<uoaDgM!Iq=/jRR/C_%/Se?]Re2rU(I,Sr.Go0S"tbH"&%Tj?qE5oP[!ek$s1@Q'X^nU'21r'J
%l$fUX2JSWb?75_WDL?LmI+`RG-K\\4T#rP!KX7k")P<(u9Pc6$a-L=uID@r3'B[C2At'GLT0K2.-,\F@NenRY*G?7PM%;&DmdV'u
%#PGP,=@],oJ8WcW4Sp#TWL*`_aAF]UF77D@Ji'Yk4e=sGjnI"RKcX`8GUg&`#ohCh/:W"hFRc9hMerM\53rFl\RU-"fKX`Sl7ppb
%mETONXip[8:6,<pF+EGL^==sW5<`H$oDW7b:N+Ph^3a>Teo'4+G*ZRFD8Y_d:MlJeAMMrR;7?4h!_'O-qKSeENsA-;UfCW27R+oW
%i(7)":D!A1[+jak-dR.,h>b)L;V:<qbjhSd)&Db<L]#<dM^OpgU.J\!OW^/NS#*`"k)=YJl:4a!fuhCnDE^=7M>Z1?jR9oCO9f`4
%q!rgiAI^3X%o.!451.NBg0j?S5]3/`Wa>T\)n(<9YYsNHQo[Dm4F2-t2C"pS`R4"HrQ?iPj22hf[bA*Pj0PNZfbj5hp.l143o>m1
%5H8P-;5LrRqsst:miNSl?QT6YTqU*g>IP'ek%iD]_;!GJ-i9Ba,UV'DJ#q,jC]!NCc9Kps)=MtB3E^:ErlID!J%O!jHALt\ErTTY
%ql/)Qg8$E,Et1.9g`9_/culs72KS851WJ/EURlm??(@O)Au;f,pFpU\c]1d[ZkE>rQ9R!nPRiG?EQ5?K'0.CUg<&hdcm_7L$c-u`
%-OI#Eg^c#@&RG,3P3l!sLecIPnK6Ze3*VuiLQ+B5;$,JM-enfW@Qqsq2k/Xr@F)L;\p9]bo?TEjV:<UlMk)iU6>1H/3j,MpMJ[Hm
%*?O*gLcfV!IX>19B:B8FqhN412rcfs<P@#<pXT)YlX.q5c@=],Vt-7WHuW<bQBcAkq:M:lk/+Fp4m:$i<kMfdBI]!C]HA_68jCJ7
%X8X:<+6R]k5G/XOms[2s1]DZI\03">X_G0t0C4(GfaK1G<K%VJ2I\K$<EFiQbrMkS3SK^\<3,:%)@Kc&r_8#NB%.;qBVup"(\36c
%j9Nur/K/BM=*=+S(:FHYR@:;g$d$okZ[>WXIc#<3NiMaWU&)E-U6SrgpIt8$s*[pnof&5PD//a*RbhgGIsa9B(SU/,>6l;<FDn`.
%S+0nLq\OG$B)M*eRdn/]3<d,[5@.<iT8E_ZH\*HNDtBU378F*EGcHE0M]h3[[c`2F3>XEq-bGU[S%!]@jF!:P/;ft"%;pMNa7fjb
%G\fgokICZ-B8<6(*e2[%l;"gjhr@;J"+<Ek;0FGkR\!`^`b\e>9;oiCWc>4br`OnhCnX2JQFP2*OGtPsj$Pr#4`>>TVfOEAe<ehi
%o^:skPi]"?Us<`05jPsdaX8FZesH[N:RSBu&!q\'QK46T9q^1&+;[FU5r9?Fiu&<:/O;5a(*FOe[:)?X(.@139];mjG[:r@-hpOS
%7-!eL%FQ#DDo9Z2K,[XI(klrXV<?"/[Z\Y=7;0^W&8c4cc,P]0C-amm254a6p?EE5YK\4i1Q$NbhPNWHH'nj8CBNs=<N\4CH(uJU
%2fJ.0.5f;B@n@hkie]U8cC1YO(u,m<L#oskeTl'kHXo/*/a'h/]XOF**h?>Of(7a7X]ga3Rlp+UTa^L4i*-\=bCORln1=mZD*7:k
%+k4OU&-(t/L+hT]1JKcug>ce'Nd*4c+b"^VM"66^Iqqf)>H+tcT;hF$$g]d*_ERk\lffV$4'Mp;eghgobLd9IfR*ppLKhci3Q1GY
%gWHgHI7T:J:YTh2S?ENGjR-j#9Rj>:GW^]%4e"Zc<]A`KS&jSYgS>eUVet?efKrs'I,ALqc#Z'ik(u'2Sub$Fo@X]6QbVmZSK48K
%Iro^QYc3iVHDRZ0mCV%ZqhJkBHDPCUBcF@mB&%JLddoTY[oh5F]:EnQq]Kf8-YM(R%.CscHu])Hou[3LdHT'3j]D>_T@fIYmF;0j
%=o5+br,]$E`sOb8>h?",VUK?om0?mo:\RMiZc-H;Zpd.4(R\d@T$Igi+r9iEW(qeadsuhIokcn7fpN/][NY0O^.-=$lf[#%T#e"J
%+'%!kB(d5lgr=]T?2QS7[=OCC;WI&83]TAcg7O@kXB<(>?_)+i[UrLlC83DABFrM`d1-\J09:V=d._:?Xg[N]r+s(o*?;^TI="<i
%`B,tm<8D;q]'E&[c2/!2IbrGoVDYJ6jjh>tdJqMcNF!WtS89[&q../nq^;F!s)#2_;`;>4rJQYPTMjBVPJV.\3SY%PVUVs'N7lKe
%kF4JoSZfM22RE50`VJb1AdKu6%sqpgm.bZi$gJgOq;\>GTS%*;7%(4j9-h[9,#K-TeL,oQb_EV[$sn.c.mMroP_17tjdoN,_]n:8
%I?th[cP[1\-\A$DYp`6rb!"I&HS!=U2T2?6\EQ+d/BW@t@TfIuQqYL4MfSPDkEZ+4m>OIo=CP.!RROnaYp_Ds!DgY.?=HdoN^Yt\
%L00]9)DT:6?XckRFkY`f*KMJA2<,C"+p6u,$>7U#fXH6b)o'<Ijc=XI+6&lAHrsE:o)6*AjR2+*9@$nVleZ"HO\!]V0!6:+c^"E@
%$hOoN-Wt6NBkO$s68tABqQeI"$f09<k[p:kb<ksNmlpa^e,B'^Zbs60Yq2R3a03h8^+D!X=l/2X$SC7'+SYXa++NqUlWOi!q#,-/
%5FnF2#5sWEqa2k!>OoN+-^9,$hgaGKI/`Y+h9OpWq=-snli2/jhr)8.\eG):)h.b#j^8$db5Sq]\t-$Jrp.>2S\oLBhnK!_UDGZZ
%Aga"nmtRB3r9h20lXFdJ@4AIir,4@4m7,^h;+\=kJG7-'>AkP6@ehs2Nr7fu\Q1Xo_<6end?=3nqKmINTpGP`U\;@upnPNpciN]e
%HbWtHI.GlFI/LmQT/"cSasaRhpH(%>h6&Q)[6*3I$e^idQX8J??0?S%:&47knsQ$(p";G+ISkUaah(jN^-"UA?#NZsfdgA)$?*/X
%a3X?qpdDbYo1<40qc*Q'qss+E^Ko-qn&mqI%pbgtO$7^ns+n+2GdI"NrV"W2^W@ij-hL\<;H/+c::d^rSZBNQM(a-3J(7cCGFS/i
%g4A@X0C*Rb2>YqqW@)o5mohZ"NLi8fX`%7t]3P:^I#TdKX`;5YN6,W[6Cgm:N9*(mpZRH/hT+;O#G0^V`kZ7IB\Rf@2XR^0^W1QA
%n((G421"h4\%Gjjn!B5=I*$=+Dh%`\UVFt0qqL)M+2sdHI_YK`s6o5.:>@LEp>QJQ]<O/s<+j>eqs<u;8&&h\a6lL1fl`#kf3mg:
%%-,EgMbG#.13$Jho([6AC].oAZE1"VJ'+#,g@UGSI:2kV?6\o"I=8_*W,JbI-LE/(do[r0D`fQ=GB:fMWe7D-mJC4=*XmZ\["1+R
%VLC:V%u*AT/&cEhb'N<@`._U4(Ni$RC(Z:$pLTMUXuDa202gGF.AX6P\;Us1\ceD1)cFNUE4`r+Cn"_rD0`>l]7'*h*gW.MGUZQ<
%Hg.](^Qf=Db)-dY\_!0,FXC@ADeZ`g#1G$^?"7a.ffQ_DF8,,#>jllranS[rmZn_uptW<6r>"/?mH2LpZTan_hMV6V=!-JWQPnle
%#"T58OMtO]G:r>a-71pXhi/ej]"n&s@if")7NLD1-4IQ$]OY(^ol=VqP_OsX3Nc<9p"ja!_CQP+6h9iANnH,"W4,6N;t-[`1`X!8
%DL3eRZ'=G]A^5ChL#qX>a>oE!UJ_tj1$]N.I^_*KMf("k7I%CKG&]GZY-f["15sh3lemM+/6c6p)J,"<*.-?[c)rM=YZi3iAWLoC
%4NEr^BTG*\jf=^gkClK=SgWdjZs16SAs+\#C<PnbEEp3d7Zm-o'`4qLc".*%%_$&_=4CZ+cc>J0os#\.>'=%$lUP+1-=cgp58L<g
%EbbFLm`/(>9%[K4#LGJVHZlpjk*Q%u7m!X3Rd9d]+(=I5GjWps=%ofu(AbFQ!NYQs)(HJ-o%&4lG@a"?`O6/N`P!hCJYTN0F)F[a
%+mX&L+A9aZ(L=YKN!'g(Q'O;'F$US!]UQ%IQSLm*?ft:sfGP*$M`r_n+s19<bN)2)2NLK'=Er3Po$FP+h5ZE?R7DM<Pf1)SAJ_?[
%$*A2J/iKEp4-Q7(0A)OFmG/_Y;;sD^q[98?VGVWnZJ6;B<51>L8lKTk9.m0bF_,M-qpYAHHG:k$K%G]-lm?n794]+o>:J]r`Rp0;
%k@MG@XQN[?=]U("pZ61TR8e!bdMr\Yq`T&iXq(uUlkZr<8f]XNTs;0>gbRI('n-$>lsA-lSCJ&OgHrC@Z])Qf8prQOb<&]3f;gc,
%rmBCm,HHi'+(T7'X1FS:;XRXnL.AKO`oS2lAXmF2^]#b+Y?oGQ]DqHpQXBdCXt3q5Hc2^.H`O8!%<nQd=_&k%R5BBXlE>AB\'"lk
%NC@[PlE<0h<pB5KU@Hk2;MPB>XaIt!m,Bk5bE@6V9?O,jKqk^S;@t7&(X,L6T`p2j^Kdh>53Z]o$EO;aMfW6d%Ae37Xt1J0h".7:
%9@P.k/ZMgQ49bI,4VF7p<sLm>N%.@L$H%MHg)Ut=F\NoU]"N3?XGW^3pG,RW@R(>:8.g0Q4]u[hlrm8gC[EjRcZ[fN;Q%X35*Jc9
%q_*_uc=1Fs[A$jVb%!-G\fdVgoU*SJV"&dmZW8n''7>b_T::_X:L*dK_pCIcMV.(fAGLfsfAiUTdJU/.RF\c0*&EX<FjNcY:E.63
%LO`SZ0r#mVX[sS^->&fEp"--0S6mcRj!Vr]jc._5^J\/1Fn7nu%.7ADOD^u:5.J0GG!"!dg;l>cG"N:D7*gs3S[00>fE078=A4=]
%mUBP)lKi']\T?#BGGlCKK>Z)cZErNJ53u@_`UHDX'CMa'fg^KK&UfRe'U->q<&_,]<O326RHf+_Z!PHH!CL'o6eTc]p-m-'dfe>V
%aufGX^f0"5dUYF4D*+d31O&0"g6f>;p8]cN@Js9>17!1ubt8QJ/npjW(,Oae,%KE(B`-B1?gXi3aRRC->f??=r^oOjeP;_NNBba&
%3to4Vae.mF=\<qm`*p#:`9j;`dula8l\?D1<$ufk`6,+?\SlS4d4fF$kXM\==dn)7n(T0I.B7M":VaYKbPSaEq6ke+n\&2Nqn\M1
%CLeF"8$/gD9Y"r^GT5G;D-_/FkIPfDh7dZ/f;,@r21C/)[CI5@6/Ja`InA>$i_Wq:[3e>MY$l<ED>S;4-ch%-a)B#)rNo,8^)K:&
%G,H::-;PV2X^Q1>%RiblqE4a\dY:Urh5f?+"-*TN0]I*_UCf*.dAkE>r1uDNVF>YbU8M"N51Xtee6eu"Qqe#)aZeh,+#<M)7C#\u
%2i]!XDZlop#H9(bY3m$$()YZSc6pOLC-/q>9Rc5kB@l)FB'7XVoCEUs"l\4rIiY)-HZ\fCkho@o2?2#%g#:%6=E#kSd->Z/mU'9A
%?(Cl`D#^DsUHcLV5#c1Hms_VG1srK&fB`$dbJ.#Kf<)5&[Jo4M[sE>TnJV@6rdbOEe*i=j:F*4cJ"Ad's8M*Si9:&jrKH9JTDs:Y
%I/&1p2.?I.^,u2eps%n(j/GQ;Vd7]1KS.$5]j0/N^68@:"ZX<?s/,QYMFj=H&V'C65EoHHr29IK]Q!D"/Y95d1\TdQ`d"q\HH'!u
%@QP6afZk0%L?[$H2pB%'2p=CM2s_I/dS8T&>eO&*DVhVs.W<t1T=]=1kDD2,.fd7k3BrTabeLVG/7.]QP=`%E%>,NVO#P;=h&Bto
%lj`Osl4&[%/X:6n9;Ud:nn.BGEBMW%j_f$m_)%qU0L'T5^&)mFmeg>b_`S`_nVF`p,BaTY=Eg$#XBRerMb!-)4^r?e_'rDc_@aR-
%^Y7q^FG1=-DHp_k^<'pdp]1o#$!1pKj3=M.>=hsFgffC6p+r@%;kQ?sQ??Z;o"Mrhjl;#i)cmoE@rSt@hDlfB&XMu9VjMLS(KLmd
%E%COdg-`!Tm#,-^/$h>e)tENdBq\R7);lYL1F_oC@Y27oYN94)&>Ski2tC[.1&T1b53m!KDs_6?Q>IsNZVn=(DF:rdZU-Q"@(]U.
%iJ8pQPceo<.p_kS5ptZ*g[/G3S.8!Lq<\:DgH"dQPegh?abR"mhLaRu!1MahSk-ZodOE.m\,sJW],AUOT_$NAL!I#,\'Ch-h8ch/
%ql;>jA^aG`U@u(H[Wce0=R""SisM`6'3eNAI#E+^I-fC#*,Y;e=YVele/e3DS2Hl?*G/Fk3GE]$WN1.rL)TEf<rMFCWcVa+'<up8
%;i[1&\rTkbN7*3iR/NSE:\kjnipp@Q@V%'pAIr-q/_hj^H,f'Sh-0:(mIeWrldo1]X6bE%](g^qR(hTAPj6]=AYDhr^+GnN,+Igq
%..[qt=,T.Cc$C$m,o@(L21O=Vh;C^qm8q2o6Utr-/qF^aK1^]-,[E"-NFSWfa5U]R_5jW3'gm:N=@S+'D-:W8AUj03eA-dUWr61(
%ij)D3,no$IY"NB;=I2]([GHl3r46D?j"Y\mo/rc+$kTLG.9q/-TtII@.0j-!b=X9H:K]GqQWWRY[Uf*kh^Qa?X`5O9.aLnamVqr9
%\n7DZoZ7>S2\3^B7[Fcqk'PD=[YlaHTN#2l_W[8hDWl+m".s;N8SH:=3LFu-'`>77]ej58Ah:1]QG_^4_P9BV+cKk"NMGFGn#ll2
%=h]cIa!ZLna#,DQ?[1;/a%"#7P=NPA%]>,-l*u2=,CAh!#rXtP2[7@j'*lVM9&oK@EFYqp\F01Oj]Pj./"%Z+"Z,%Q?M[MG8WB-?
%a3M;jj2Si8;=o%b.[7)Ta'G?[_-dHqrONS$!n=!9??ZoZh*"8-4l:pm]8EW#9nV`_4E`>R4h`kRT!(^?iQPF.e\c2P-K4Bc]"9bs
%*Zl(qDn-p_!n@00\;aTrc1Qmf'GIP*[Yn5E92OHR*"rJrmebeQ4$T''-8`pM<&Y2`ILf92?3R@`-N^;Lp\<2<eWWjX)oq!nnSL>h
%ePjGro*q@=Wh?pB0_KX=k2'C9.@>F6eCTlnhZ6Wi(.Mrko_@59UJnZ,"(iAQ!sFj",?QC0GMe#*iGd^[Fqq;5^Z,*af^7=sj*'O+
%@^F]'JsUT]jEA5G$J3rRprE5R!>^1J'WSdY^:g$%".Ed4B/fVhmhl,]9>#-+Ks(*\++c1NO6WQdLR"TW[i!!jTQ*1]"+=9PP_f>s
%:E/#T"S;$%&,mr@6JrekM==^nr0@W'-,OSWn9]ml`"M%<7//>GIS5@OP6<+r#eq\&DfZM>2]r`rF#V&0NAL'ENrXng8V5t4<EAh[
%69cs:-=NW+CGua.HbTHi-.L!Rhn*!1MmA:b=+qQ<]8I-L)FY.1N6^@0<lC_;;-*OY95N*V_80uRls3g%-EIFX48C?Z(`_2)8FtS,
%Ue?WGO[';-gMqT<Z<m")2)3g^pIU)Kig6%[fU"c:kJas8fkmhs4(45ob-A)C)Mi'<I:m_u@g!q6CCm-.Z<#?LXFZ1uNIH]Hk]:o&
%K,JkXk($5"Z5`YCfa(d6O0$H,<49T@2HADsI&sS/Tgi=jo[PNoigiSo.t-Zd;Ns`k*OfN]5iiY)>E3s2k5:S-/r%fmCG*V#[/-Wf
%>k?emC?>O+am?&aHSTNs1ZjYVV8\s].8sk-XS"Q03Fgc`_Khn&p.J@\=kf]-iu?H(\h(3qPpW5Qd4>\Ej^5aH"4QBuR:L#*(?-Q?
%QEkIK9Zd?D*$7\6EAk!7$BnkUb15L181N;7bIZCd^+poHUqD7u;'X;B;:O_pfp=P@[TH0\NL1:R/6j($b_:4jX)e:r]4n*\qIW*7
%=j!M=Q>s1#HT=Zo:daMKqX!;V7J3?B;-a>_ehASG(79)m)&J\1_h/gK,V\Kq+@iaB2en<&4lODk6_C*iIN06W_LCH9\?XH:qRaS'
%B`pB/qfAs6f=g=W!]TffDX@<7qm=:*/[8(n.,=TnA"OOHELYn+IKDI2Z?pjY.2"uOE8toEmB+6bE6\kNRXPT&%_lldPoTAu/#ZFe
%rAAPh*H48R.TDdN6=\\e]0=0t,o0=NZX^Z<\m"g1XbD:81j0=I,d\qENJT\#]#.]/epuS$f;/LdZq5K\D>DPeNZ7#\A6'M1WmB-\
%"Jt38%U6YP/U+fb``PME',<\$-8hI>acHk?_CX=Y!,[s0_tS#(@k#rbNJ31rQAOgX_N8>>gQfY?HaRl>SX60Of>//JAS!2?hc3s*
%-eRr!,G`t15f\$V;@8sl][&OC\JT+-86:Nl<]8'80",(;3uKo"XEj7E24#>X=M2q_O!Lp@%+*W<;B8>?848XU\^oP"\\*\J>EEXR
%SO#67%)tQ8NS*hiiUi%fb(9@KYO>%e<#>^`!<UI%`P<jM%351TI>>+i)9&f<eGZ[jLH^N><f@Z`UV^eQ[Y/,\UGF9/e$2l1@@hc`
%/PP<qUp(\^TQ7`GcSdYF"D:I[cuH4\6?)'*QWZAL6g"<sf9YNoR/DC7@,G#ThAn(Hr&R"eIVlYNIa)4%>BW$g^t]epg.q2(@KqdK
%LgNNZ@eI`q?e=Htr0f%=X:];@F_s]%'?cBV,heE=gj9'1b(`o_e8j,s?!8[.NR+a:[oO!29h]]>>)<I"&OCe0=E10s&PHl.#"BU^
%ArKo[c4rh&ZCY6F^(D.pV\/qk.9q.tTtJ$0n9q\u[&p!;mKZ.np=7@;K0`4!JCu*cdEtaVP:Z5#Qh>AO,2rTA53hd?'X:tX/uF>d
%(EU`X!V!\oKXRBR$20X.W65Kl&5qi7:mVj^;U@i-Z>QO^3@W^_n"]:p\o^=W>LTmC2f$Au"B;2B+AjP+!4Z.gG1pSe"5lOd!#RBI
%56sY-bGakFgjd0=(Yo#m`;LKd]kanQ79XVlem"sC(2:HN>&TPS>B'Tm+8Rt,s%QYB>fOm@R@?6q67M#c%BP52Q<bV,Yi/cKbZ`C"
%5dm?n(3S:@$.HL5a$JYE78'[&B2es<8580D(NHJ2S:h[_-G))7\_'41Af7SY?C/iseVSj=fA9SBJH-!g$VaFj5aOO0Kd:!c2Ge"#
%A#>)_4:[uOJq'a#Q@g+;8S;:`Z\;DF[a*uL2.<uTI-8_:V6Y-rM(9kXUffT`X.XfBAlGJC@sM*W26%BBE[em*p342D[V!ND<qh4*
%UP"Ym,-F>h.UXSl($;De_!#pjCJmtXEL4V/Y)J5=jU%Wt\:*f\d*\H+E3Jn;f"#,'*$RTP%F7cnrfYDtQgM80/<,@;ZN>rE]U&fF
%*t*/CI0R2VFc\j%BLCnSlD&(uQ7q<X0#t3\K[1BiA1]"T3^GCWeIf"'A;:$\f$&SQHps1&a?ga6$5D0$,^9l0Q<g4sf_9MF@X+,/
%?QBcH6"Lm>F0PttXD;pJGH6#X%Q.b5Q7;)WRdJFb$-=Ft2(4/1qiSa'NH;R]K</D0[$=OVrZ1<`3fgiYJYui=8#s`'(Z=,"n4prr
%4"8=BU0(8R-//$tG6q;e7,/%a,1/_YM6]%8Y1=HnYQ:V1K2.%SV:sljl5Y#aKjb3^I1d"8ZHQFM^n\7/"A'aaGqVYg-VD=fFuY,?
%VCjYa7jVG<qG`*gK-6_5kqPu0'@`bq9Wn,bSB=kM^kWmPPu5&=ppS=9BR*`lZ5kS@J5,ot>UVqD1!(-:Xo+XqIWOa2,/OLP]BZ.J
%am.+W>T!b]#qi9;?4;3Pm4[''M82:TDmL.D5)F$.1^cm83MQ$JdpHcWbI>p@Gl[V'f9MAdf<R4LH[*X"W65V?4Ohb^3]Ka>]r8F*
%R+0c4\2IS5>d`.>K<:A.Fa8sZ`nqRZMf$IuTho<RL=:>b:EDC%r/&dA:6B/I=1JBMNpCY*f1ck?G394rXOg0ck;^;K7o-f-I!u4<
%:-XK+rDaF$__ZI2=E?qk[$8=mJC/Xqj2p31&EsEEn/OT0N)J9`Z(]\7]dN3Z'!E?6I0*U(.RqLe*'k=MT"N2G?`+Y6qRu)Udg42>
%GP(rMbI0HdZr`^a`qN2b2NMhOf-&i`m2I;*@0PX3cd<Jt40@Gr%mp2.buM"B9uNY=qn@[[1JC=1(^49=4f_DhEE>Eah3DCCXeAJX
%$AN34Utmm_jf=bj)R/_(O>N#^f0\H16K*AY_Vb<cHZsn:i8FCO6Fl%r*!]:=)B?D9l,G]mX1k2\%Naso3-`(C#PT_KT"c2[o.(AY
%=MaLD3Z+Hk!lMoUBR%$*%bKa['FrGjT]+#=&IEq%/0-2kXX&-i=S`s($phcMmm]&k#/]9kfQB%KR`A#?r'7lVSg>F!YK"K?$6J&I
%Yq[Xj?8'@?Ge828*foXV3#76!iGnC,Y/9301;/4#97Xtq,8[Q!?$Sa5.kpOZ1@=T@A)t`\>RbpR5\G9C>b+>$GuhEnE<TG!.2[?5
%)#4F]J*1J4h=[1haFcg3%nI,/.eC2Sfi`b5.&uYQE+E%"l'8`2Sp%)WZ&pE$"K0F;FJ&uj.7ht]TeV*F0i]Qepak^iX!F?>e?X:8
%/OKCR2G3r$$V4:"cSX&<:Ar6Od#1a^r\\A90.=s@q*(#5IG1TYQR'C=C)l(4`8<0!aF]C&fZ8Z(/D/$qN@``'JrM>6aF]C&fZ8Z(
%/D/%7=@uL$k341VXTmC9")fZL0P2>"\'b7Q/B(PLU5Ge#oi"B"28YAn3s/pT'HM2TkQ>=+Ef#^dUe)Q$,M1GNGASphNhl@'m4dsu
%'ZZc.i]%DsLXf`Bf/\g?FpoC6P@ho_+l(F)douIJXl\in\^hPRJ=n\[YNEq_"t8"UZ(@NC1609;0>17^A`L9E/mk`TPX`,SSG_I"
%:si8p>qi;i!OJNeDC;\Q_(IaC9?uaa1\q.7N%S@t$WlE+'tJ9P/mOMH=6.45\`A]5LRcb]5p)mX<h4pil8&%:?-MLr8U9[@9@bJ$
%W$qaHFQ+nSBjIBW;$o>OeIj=3Wm@-;f-f=;/<JDI1iJ.0Ti,PTR2V4>PSJ2gg`f<8`3-1!].t4N'K`/X\daI9.dqn.Z<T/08%((U
%204oqhsC'R2hc'D,\3kpaV@PAGrjh<e4R97?R!fd`A:,[b>m`"MJ&0jPbgU,nN'dNC]/Vcf$$CM%Y]SYh7^K'&h9(qi[BF"cd?,"
%K"6BbT/[?-)_5q56mh!\/p@#U8hP)GReQ5J1Ks25MMDRP1*bBEcZS@99P'F3OJ!Z92S2Ln-;#oB$Xl!$c:FWF>C`N+`fCLM9eJ?)
%n)O'"@dj)*qeG3U`ZKDYBX:bJ6'LPpqT!iWnqel$>9A#Ml]h=k-d@9rg2^6b1P]I393;QK.EA.k7-)Kke&@Wu(7,up@)mt9WqU'G
%`AkOJ-?F!;]HPeR;@H]NQXdIDTUZC\U_"=E%^rq7317=jUt<dq9BM^mM>H2F:s<u^Z6O]@ahnisA%"C!HHTko[R1^Dp2P$18fP1B
%jTTB#h<8$5@Asr7Z*EBg&k-)Z*%nWO!m@C+&!DT%:V_N\9p4/<afB2M%rB\&b\SZEQ_1ginT(n`QU40<FZ&(2R)CT]+_ud4b-Ur)
%H[jX=$Y;^oA(6mSb#LD>WEQ5p-tb1nJW)7jZ>m1Slc%VI<Q'W.FpZIH2GQ"qfS/G4>4FdfI:'XS%g"t[53h@r`99sKTFRW&UVk#^
%?Nm=f]tcbagKY%$Vo.F>,PbVG2.s^g)mQJTQpW?/?KWI%nbZ:R?>YbbiOWgJd43NsJ+*p_n(h;)B1>FmCYE,S9[S\+[Vd*g<2*-'
%H/54$*4]XKW`sQoFRku2`<<5C>(!1O(=XoS98dT(cFIf>^#W*b@GR[$![iASKH"`KWeV`m`O@G1X=iUVeU0f&MtY"i+T&SsWkmoC
%3U+96#Gk`tA`9ZdW,$L=AKnqXW%=a(X0hfJpN>?D*?+KLlJ?GQ%nma_e`46tc&*j]*RHRc3*d819cAg\47O<K,a=kFn%(ZI&(TuL
%(tte;6<uL\[QP'9Qds)GYOZ'r=)6GrZ.Jni?b3/dd'rtq8HQS/*B#;HYYRk7gpd6]<!smO?$LDET<R1K9(F[+X^dT;kgkVlW&8[6
%K,Q?p917U/U2WB=Sl7Qr"(pZ'6.s6Y>jO^%T)^m)DG]H'Ctdl-q%P@V;lU4hQ*g-$oIY@Mj<H!/LRtYjK>Oc>=N@A">,Z:s]Ac'o
%?^p<b<Q7l)eI'Y4WgNh.&)Xqc:UpcBiY=P'VqAJP>PBKi(8Y'iL!,^Q3QL!T*@($+jk:'J/,<EVotcZ&qeLIXO$%n).ecCANkXmV
%TZ:'\OC>)&Tlr]S[t6Cd(V=u#`XM>5b#MaA-d4U2L1*tpah!mCTqs@lNP$oNbVuN?\j(aDgU-o.[Jd'5c`H,DZ0b?K%;fHr\EP\,
%(aHutkeQiKNj<Oa;rFdT^IQAD+oT)OX&b3;-\('hj5N.)HtSB+D"4&J^9be&[eS-S/AAI0GII:l(>mg)4+!^9Z`Ak1%4KO#8.hrl
%G#g"iHg^Y\`S@ZqC4prHEr$/e7'11o[+dp(GD6rD/>MOXWYGZi70PO>n?bee3W5_:#:k=N_sMePh+k]:5-<!F?+lnZntPK8A\@_J
%A,,]nEo&tVH0:C)^!@3!hO]1?I`Z*cFA]YmGMh>bXrJDL)<ECt:E;m0lI:s37Am!1LUCLBNN\lO8hD)fT?tHB2q8kRoX'9R0@A>)
%"<)QBWK%?5ZsZ3.-F@/I$RW5g645-I?pY5JZsZ3.-F@/I:DXZ_`N3AZ<F(5[Z!`1iKB>k\j[LsQjWu`7,+:ffVoL-^8a+"d.c""r
%7u9.QFia:iQ-f`lI2PGQf/(kOm@>9cMA0o9c*0Z\A=JHCH%Y=>hYUJ^Ystf!@LRS._>A[Z6m5hfW[JF1cVgBihZ8rWWL;X!27gLk
%D(0YXQc"F?ps`JAW^1%`@/PIV@m?p&50i*+p[tE?Q'7cg._k;%[2(iM]e;lEOPI'_a"HhEjn"<m`VLC!3<UA1(hRG_>CK$l'KN'Y
%\SpTD`e1fSBq[6o6Ok8Nci$2K8VZ]hMr]_K*qkVCHAt@pdEcq`e?HC/J>r#^Ml[re.XRWkom-*/.1[+=bQg9IdnjE'3IQn4R\6F_
%%-rA="r-d50Xe\K",m@?FYIA2Vkn+T=tb?(?2_+$:]uL5]%Hi*5ZgS'Rli0e<@>gh6iQ^g0e1B[hUqtD[Cf#.X[Z-qC3u>N)KsZf
%Tb\+]@]#T:ojYiF\s6H'g%5`.io+a03lgVkl\'n1-OC;M*VcO"d:D0N&Yep1*-;d=(.DAS3XOQ<ME[bG4p\fF7eSsoY'6.rQ^<pQ
%!+!aC&CIHo&dNQ1WT?G*Dl(H+C(omhdI@ORS`nh/Q(jQIU2QY-JQBUV*ZA4_IIaZV7&75^d\:n0-GQM+9?!Z[W4i`t&qgak^5ban
%99?=+;N*aPihWF2_K!&Db(i/kOC^>aG-hCEdKK$jf>t\.DXHg]+uR8.DrL*$H9LYZ47JRRXP?N'X.6`;<<OX_(GO3rn&.M"GW\`4
%oQG,.k3fKG:G21Y)X:cX0Y+0K]k_D7fa7)\[=IXQ;h%S?/>N>h)I5pCfuf+Tc:h,B:,8]?f%Af*=lj$&LUJ2gU0]'M4Z)^(qdj%R
%AMl_M>=3aCkA*bk7(T,X[cbR#YSu^cg@Go*m(2^6JU%sBTLQ%32D[UqP"$UaXQR<(`g"RII%h5+?.0qGU/$Hn\5nfn&t_9'^L($"
%WG_3XAf->d9YH@YL8.rF[m%;'Au!uTE`@^UK:CjkpjQ6?C$hD(S4"9*o5^(-7D;6/lNbU#/,(pYVacP*$.P;.>5M3bF#31Jbt3-4
%o$sk>OmGb35m?[GA#5/>'T"F*F>u8ogXE_P!c;C@7OcND*U4keXJ*4JI+E`%NQm/4RTj4TlsU%,aY:TQUg2N]BWVdaFUqNe^=T0Y
%EWY]b"@\Yo*gOJOBJ,1QL\W2)*Yjuj):peC<o/2.E$j*ZY;(5.-e<L?Ka5"3RE#'t@Kb3pr#!u<b,0)2'G#+De2_Eu=sk;'s/9R4
%#Q![]1`>L\"Ect(js\^9b*p(#l2(8<colfjUn%Uhkp=\]mtt8l!&s97XUnq&UHO&SO2E$"IEe]8;]_t/s1+thZrbH<nBp)VbMbf_
%+@`fCp;sPZYP"+q[2UjPD6g;'dDAghLM7dBnY=^pj?\HID$3i5N0k`iV;oF4[uAIb5/_:&Zh:`$3D`*eY[:`NLQI,]p3Q.pIWYNO
%?D"-D1-tdZhR3.nI?aiJJ,K0@m+[HYZchpD(GE.c0$Nim55sd3fDJj=^O:J"[f#kY5Q/pU_<&]ZIId3mq+jLBHP^VXr3GqErn7:s
%7i+8E>T=ejr;O,hm`8aBm[p!h(F/8=0?4<Dl!I'7J%G6(Zf[$P/,\=7=8q6/E5)5ti.",i?i6h>^N\JYlc\+T:WN/,I]'R9PP;)b
%(fI3a:To+<H,?phDl"6<f4k[P<`Z9sbPBnF?ZoaJh.mh_HFpnF4uo@.;;-la^AMo;UXFDEa[;lgr(e\GJ]i%IoMQIRY27''V:&KF
%Sc#D#hq?P";9%%+<'7r%];Esm8D7ip(Z94Da&r=jfC;)#s1A+*n+eT!."WEMk(7hP((%jY<X45h)1H65;a8H0l'mdj/P7K#IRC(7
%"%2Z_1q1Hg.m)"$!A0gCH8l<>?<t\4WW4<5<R)k=dbjc7>8B%MLO'>GaMf%i]1ciX&tSt#n;??W]V;K;nqsUJh`HnPqolTWr`8a.
%mk9/P3I:;e8"]dQZh&[<nJ=+$:Hh!)5MP_Rr-mhXYKMb>S'7e&QgO@qUNXn[0@fmhVrNuH1\%o?^[*&7mDpSO/2;LDl8=($qR5iG
%pCI8nm^M$6Bm]_qNXmIt\iB`1dEOUQr]'`968(ek@q25)anb%B7gJ3g=$,JMj[/@'STbA+WGqd5?Q?c5q/#6SO*3])e]#f3ZQ25W
%VeklbT74D%EHu--p.gXn%WCTiS(k^sVG4:=Bu9)aLFTHVo:)6>o).kDmIB:\9pjeMTcnu*rE_XB$AORNct$d9Le'dG^%WO6Kt7g$
%+Yeu/-c:FqCSUeP=MPmAYfeV.a/k;lp*T/+B$gPMc-[V_4Z`K&n8R\`eFp8Kh"/R9*?Df3bK(c.`VNd:?^8ZS7s:>o!JoBF@N((^
%A'9r54^QRO5<aLD1+_\ToWHpnr_LPpGOL2+If<*[f[O@-D4.u%2n&@6eA:9d,9puP8(C(a_:D3EPc(jQ4bZ>nAda?#Dfkk(isU,Q
%0&,2HIU.8"9TjGd;=37]_D#"c'Xs\kjR<dV4emrG/CVL,H.62]02ITdZUJq+kH=9`![mc3!f&Vc!]glLA1ld`"0G]*a7[=ibJ-Oe
%>T)pEKDjC"rfasb.n?;q?Q?h+IBrmBr+$h?rjc-ehj$_0qp&JC-TedHM,20hB6j5IjLg2eonm^Q3mN0q2BOCEijar)162?Ts5J8/
%Kl;J?%YOTDkfoU]ho"aHoe$85n<bkh?C-B<br7-fno&:Sj))3,C[Q#B1:aBLY2(tJb'-?'qcH_pErMFFCptAS?!#jA>&EjJeXWln
%GJS?pjq)m-Z%tFk'/nP]Bk_-_QCKK)ERTjU:s$B%I(fAdDfhEHk1-Lk8!c<pmU,t!^,5l1aiRa2K'*r^8,kW]DF(^g%/H]78lsVE
%/@J+X]'66>Ku`-r=b%.-9jO<b@STrX[FgI?kaOeS"]><_m.*#\OlTY'eZ!fmlHLWuI4[HB3BhkHagLJRCR3`bUVFGBLa&2alJDE'
%?1t=Cgok[7nGOp8e^F[/hYjgB8/6J?Ul+CtH(>bbbkT`P'Z>Vd&#]IQ,:s"-@fsUWM:9e">_G35b=4)=-iJbJ>T`_Q^pOFDe9;,K
%"C%o:SE;5X5:XnLKKLM%MQ>d.i3J-1aO^oah`'SBE9@,NBR9[PcKia7rT:d/l\BJ4(b_7ZT=^'2HB1lb,@,h%oE[+l`]YF4e.Wqb
%W]!%Nd?.djE&':'5TK]\%hNJK4c"5VGI:X?oLB#2W?^6d7[NsHkSCa8.m+*nY,gF)D#2fG)ds!k('nB#bSS?JZ]KI@*V;dNP\4Nd
%l3*C:#Us$1P>J)/'=E`/1-l_8Hp\`r6kIIlOZs%>^2-OP5/,t8cPHdCI_j&hoRTk@HZ7273Cp54;79nh/5Z.B+4rfD1ZV.%MsD,p
%_S^tB@2+ERj+1b"":`mMfW("$>;HanrS[V^4MpqIJ:@[VD9aj?\a)R8$f#VNk?$_I6DVp3JBU#DUsQ8Ko;2osUI2h8l59DSr=Wp7
%;SfMq.?LR:F:6Fk=T5E/N/*>P,Xo0rrV64qESJnlI0SL1fVPZXs)afgM*TCiYG3B^P8NkKi'?&ScnBi@qB^85B4A.Yl>qOZ3OiZ`
%\SQVUgSWC`+l1Kc@5i!qLHt,<D>2$Rk%0j@!hU3P7Vd$>kR;.gb15,&A$ogp-G/ABjgtiE(cr;bF^W!=/K4hEXMU+$bOZ/FlQM&6
%"$jop3M"!Xdm1tb]>?\G:p=@G$P,$/8d@PdTeOY\Gfi<,mh6>@*%c(i=u(=%O(X6Cbl-9F!5@8R3P)jcP4&;b.+k(h3K[N\PrXGI
%+R3f7B%?5:hnNfjr9\t[+n_usIJhL%#A[)%I7a+5Qb.DTeuR\b`t$/YX7AR$nEeufVnaSFhUmjQ4_D5(]0GcO$rd^CaY262!V<.S
%UK8OR(ZJ3/;F]3pN*dOss0MI^D/no5hWXn>o,T6`0c3ham1N`.]O56%NK*\/J7:76$TQu*r:,70)nuYi<Ycs=qmcOs][*-]jpY9>
%V,/QSRmI]nT,E5;9Vd.kk<Job3;_q4e,X_,'j*,'.qb@_'jg4dR+_XNN0Q?&NaZES)r*8I1)8Ob*64[kCK01qV:_*,s7*?tbJ;^^
%#L2eAeGh_E.ck/J)^SVgL4`(=YZ(H^PET2e>^RK7gW5tG\+EMT3UfFK]SEk(:[X?"3-3EWJZ\[H&EDDt,W7p)#[1sPLi&q=N5]fg
%9aH#b:Ic>HptAgN--#a0>)\#*P@4;>kY)03i)nM&jBa<2O%!*)@CT2IOY39H!jQ7_Y)K>W]ZC(SJ4n:>Bs=<iR.62hmuUCBM&DhX
%2/MFu(MNrtg*f=a;i]r>(BC#:k>IqlI6a7kJe=kWbs;Pd%6_X?K;<DgR%UZ%9ES^X0kRH%ZnXum.$'3@?l##oJs5U8LhFb+N-o0f
%Y)h\Op":F?%lq%Hc)*')7OT`kWeeM-=C_J<^-<Ag8m7e+nk=!BdDTo(Gq7*<T`oRa0ZV6^qg.BGB>p"<U=GRWM[Z>?Bio`,`FG!;
%3+QAjBl*'bf>Zj5%%Y?Qq#2&I'G?b$0n`@>nq`%6@lC?7qJ?hSp.ZK4T]cVM/:]hFqWg"&PeOMl;VhXYmU`e4+ltg!D1/s"V.sLc
%BB9l*[@U0mF\8VQACL9Aq6OIS*)8glD''*+5p<A+3;jO(&MeI,\&7hg)!a9^A4.s/$h1OsIH5Z,V0m+-a<FifUDD?ddmn1mTf*.X
%2"m>IE/FNdO`iSM?r7W#I?+N)8^'<8O&Bh4$(.VF/MGY?E%*g&`;F1NKo9V='G?fCiPdf(.?B/(5+6jEpdBXdi"8e>4m*40M*qF]
%Q$9"]!GnAo6>/&[.1\ju_b-C$#l>S,CghJ/gsK^[\&O7sp?#mqWY6.?[S$ju)U-R%d%4`t2)-JtM"<oj^G8;+1#in59-2;G)@Yq*
%VC$FqjPu>r%a5rMoFi=W65PL3;A@\_7pnRA$M+s;@PH@.-F#AqK`Bfjdja5u]GHl.=n/JS%>Hf/pE^[DV.E)L@._+2L;4S^Uuu2>
%r3TTTa!^e=5PieY0f_`f+Z2AC)u5F2&q5kc/FT_1!eO5)7q5IQHa,SR6&ACY6tIpAiVpBoe;\[(O=rrNBdE'-Gm[u3PuoP>^DRSu
%`"F3DYj\h]YVVT/i#iV\Tm:%D4VPH6FA/,!91G:m8dc0Uj$l;XVqUl:PAi$-gk;>GbmkX4Et!kV<0mTMgXk`e^-N#9/tD*'eE=9/
%BSf<9[SJ"kL>rHU,-XMjp)+ZI3"QkAY4lsMO!Ci1@RXQe"+`sc6tH3hS^a:IGW.ZtSSI`=PgVT#T`Ou.iiC'WND!ULc5/CCEeMRc
%9GFjA)f;2Y+N#t:WDi[!11oe.=%cB,61Z8od9)22;K&3V1*_mf)-+1b'jk(md@>^o6#n'fFF`FMLX]hW3%!9GZisq;R1(jdW]Ycb
%Yj=J+j4H&`/l,celTD6J4$P/dmj[k&Aq`'IJH!DVVZ8,c(*7/eXQGfTpq0]trB!:S[G(B*HXC?G]3,*J*;"_F%&^A%'*jhh7etK*
%1^iEGaaRF11/Cb],P=-(AS6JPCpK/;pTE]WYQ#mn<`BZ%Q(!4NN[,V$9AhrRGSF]Jo0WiuMrjO#iq+=h\AGMu30,pC$$hA1WfWZZ
%R59t%-XDC.*C7cjYPQ"3rIr,M^mXN^X=fli3RU]+8TTS;=I$.q%)FSh\5*'dLCMI_@*sXr*-!D8-k[oTZi1_;"q[l"oVe-7*;R>M
%]a"K?L[XhCdR4Eg9U9WE6I)=$'f`j,$uL+lFS_&=CsCC\9g\\ph$c3(fcn[LG\g)jMq&j%La$F+lj&3WLh13o$[_9(J40N#0_.e_
%8qI^l>g?hY?<3WnUDu@O,/FUhW/3M9OR]5>\hOR>eR#LI98Y=LkAr5Jr-p$_'UI8r#WDNthcqPnQg81FQHE\__IM/h9#+4%;(5<F
%gPVYHh7$ib:!s4&eWCd87%#9@gZ:`-S/hJ,Q!)>bS]/UtIqot);^2$.RW1(H2VB%0Pt>$q5JEc_WFl&V_]mq.Ib+uuWtOkM*R,k]
%n=[Qp`)\onIeQkT:FMJHXm9jR6`(2@(l@DHV5[bSm8\1r!@tOagNcReaHgH7I_s5HphMlV(UfBbs6&!Tc2IV1QbW2sm=5+QcF>C<
%!']_8'l<i,fi\Pq$=g%7Va<^!Mp$66p>0iKVD$(ocnn]H/ePr.0+jB%Q-JV'H2Y=86rg5tq=goFpQGVZRpS4*MgCQEr^OEE-^o&h
%)Z/VR5t(gSqu',U,jR3\O8!deW\%_WU)SLI0'HEb6g-2VPshVB/>j,]kM<[VVt2p;4'4Stlg>k@FcJPRJA,i]h"(VL&)?[R`PTfN
%ore4ns#/f-Hb91)4Gj+9dFgZ3'>U4Xi(h%*kEnG>4ZTZCfV]_T?6AODT1j]MA3C#RhE3NE#KqCjHbI^S!bQQ]b^81+c8m-C57I,@
%!+Vf$8)O=0oT&@0"3/*gI!s--d=1_'CTgIA[^Ef\hWn3BlA*OPDZ/C.q#_-d<d21!h;_iFmrr]plLt3<%A<^L4$sjX`P:J&rjM3n
%%sk9bZ24e'k=t\h>NkLkg.lkj2_MBUn95N(s!!J(6N%jaFT\W@*hKiaEcc]5pO<q0qlf#G;h+`5<FWn]J$>f13liEQXle4qr2#YS
%pH/:7B`2W)+9,CSqVNFr_SuO!Nd?@N9E4,?Zq=Wq+/,acK4Eoq$f-g&`SNM@.DM"`c48Z\0("S^\aFrX_>i.o7tQ9K[`U^=_p\Oj
%lh]f5A.FUbRFK3*Gd%,ENGJBsRJd'59A8ZKDf5NJ&piNJaoVN+-g)t$#:I3mmL2F@s8-@&Km9Q,/7c:4Nq]i,?Kl9omHjl#3Ek;=
%X")U8q^(sc;!!la?0:3eBVDcIH.(C4%P8\@SfIIo=B,Z,6VG,\;7H9iGN_cqT>s<[f!g]%X4t8@a+'\tqXf.RlL^*<%m%DsTs]O/
%KALn'Ab-_fWU(9jW`hXBDWeGX1:FO$I<<'fkj[O*FPC-bBIC8,?dej\B>%na:!X>ET,\p]^$Zj\GC+``(&]GVTu5/a[l8E9]m$d:
%:WQAmFu-bdmQ.lW9'm$eWJR55*isO.?[!#VG)srGpbaJ2rq53qD[m7QrE*s1rjGK.T*9CF&=#)$4i:03j[+5T8Cku?h5?fR+q:!<
%gRFfsih)^$5h1);@'-aCo6d3T]uM(ZG*k>jL7:&E0!u+eTjD:;4)K+&^T/DZmB>s+@=P-BB!5F0\P%MK"aK@np@E`0cc)+._is,<
%+IV/B??_G?G#&<VYBD0a7PM2Dh)`S^>%*a\5GqU?`]rm6p5]\F`(APZ,Ug+QM6NJj^-:o/rk[=6!C=-H4/f[+!7W[57pD=rgh3ca
%SEKDpWdX<a6":+?4B1qEeA:]C)cb50rpf[nEJ)OSFo[kOXWtZr]=m)B3[U/X]@n/uo%\c_eO^"YChTO>7sDEV'\]s3]C&,BR@\nU
%ZFa<n@AV_rdAC9S#fdOlgaJk>Z,5T8NHEh72p\F\qMcB1UOO?Z\blW%_1DmfWcPs8/6Vba+5PcsSG/?nE,BgrOD#GbmluZQ2efZi
%k:mW2ns/O5I_%,-@WD+>O(`$aqSccVN3#3GO6L?K%pBmB'k3c*rO$O\P/>T:aW]5U2"Y[$S&g&`>YYTo<]8TdOLdR'D"$;$]%?>n
%T(I>W4P^$-qp-<YXm+'9Ls(9$A`2si:3-7$W4fd%0?2?,o?Y<40RX9kVaf?>fSE9/r7DU5bNBtl,)FTAl2a5RJ%E)?53s;+D!uPn
%*6<H8hKnXh/^CJ=L/3uYM3D''Hqmp\Q2bd$TA9iG`6(iK31]^+b;jOhUA"o<H4sHl%bD1cEO/SZUM]Jn\%ZPn?J3??rn:p^Xe/kL
%j/<)>\E5DVW)erFWN?<J=4s#pglTh\rk\+.PX>`/lRMt4YN)7DnS"u0hX,HH/gdk%mNs<6]"$AG_>Z/Nh$<&X!*F>,gNA.R\Q<^_
%IF-_bQ^sj>q=t^Df0BEJ=9+?5TE1,)f(P.SY*iO!isu*Z&Pmt&G!L.Yd<Q<rW6`8qBcMsp45Si]$YS#&=0dM)DR[JT,?(9bf=Mum
%PMM-&Ir2YrViIW,)uI\CUQa6'MhX7IgtQPH6D_>*I7J(.]5)n&Fa^)fessYGC6H(5"b:uKGHX=0D'H5L/u@,"i^-7%08U8+gojD%
%=>@=3&k$i?1+(T#i,O<_$tdgoKUD]N:<6YD7RHH.Nq).;oh#<,<R:6]ALaOVYdX;hc:,rNG\\)R7i._Zg7S\k>M\->?$XdLf:suj
%Y5&310mfJJcI'JJ7U*NE=7>%YKUG(R+7,2+E@bkZ"_*;!*bCVt+4*Ogc7$l\kNOf?r4;a;0Bg&9M7f(R%M$6Hb$eR:1r2pJd9/Q+
%ktI6YG=ls+GKuSFB?"cK@frs,*-Fi*AE3@HlMF[fiV>tKk1=@GG7fB56TOLM*";&M(XPUqX>kFd_p0U.-Q<:,*aJ,)VtV#75Hhf1
%`s7s0N)1?WPS\6h/I3+,)cV7]F9Tl1?c%j,odgtrlK>^VJpkJ7CE)%Tk9FEnfJiOPrjod5qbSZ*-N+Cjipbl>]*86L#bs$ooeK!W
%FM(fblbgUJALP[dau!>YmB#\[LgH#jf^03M_g0,pTSN/PQQhd.&e)CC_n+2W1F-K?_g*rG[HHe+#Fr0rC>3hb>urh+N`NWMpGs,>
%+HT"TJY')mM/:,YM8^NR*VB?BA:BsA%#_^t"9@6E%75"gp+Oieq$7C$aR]\;P[T=Pa/<5;NEBK20(B>$^YV--hV>l9QrpU3fQucV
%l&l-+E25-K;1dGhaf5F7XWbeQm;,h;9MW<,oM*fmVhX&N=)WRH7F&VPl$/d<<W:Jtq=/Rhlgl]4OuBpXFqiGr=a)>[3bglTQbA/h
%NmZ"kZ+SsSI()Q-lG^R]2#=\VmO$^=VtY,'F*'O84cJuRjWM>)k9"fP4^)#1RYHH3H;GYfk5.-!<.KqQnO;UN]m?LApPug%YBSr6
%@QL>#OA30/fq:hsgP<^:pNJ54V*6ikh7[pid[aU7r3AW3DiPb#i7Ys34D>%C.N!9I@QP@3qs[<ehrrt+-p9CMhfjXB^'*a4Efn\o
%@uR9jYBQ.d)I[@JZTR16X:;Smq4mh=%e',MDKkpkIf:'CgYUi@4ZXof4/r&LAEi^_4$s9ZY%.66ET:K3V7FY(b%n4bSpfCJ&]SEE
%LN4WJ>qMI-BVqEP^#D4^bX9MK5#`IOBA^HJs8"#Ge?&Y9l[!QTJ$?B344kbmr#beKlZC.3Ih#pE#*93$g`5]'08[FUP:msCDHB#Q
%7^(LKG_$g9NH,>$HC[8R!8_)P.GprGp9j#Fg\^;<=EFHM!Z#,PXHd3W/*26Yf&V3h,81\?X7PY1o^.Y*MKdc)mIW%`\.MO4g8's+
%qOINOJ(rkQH&2=]eUu$!fP#5g+%sk:`rn9iMgl`=G2?J5HX&n'=+Y[YT[!Ob'fIe[eiR"$*%uF5m.N'=C!U)K6JlDN[1?VO@[:9t
%Wor8e&Q#X'IiTn<J[Kp3(ERs#oWR_IQ@35*R,;6q(4>6Ms!#4Z*MQoqWgV$EhCID0?3DlOq:p%<0j?e`DU3:%F"SJ^ku.D+>a9jO
%='269@r,63hF3?Kh;*GZ2o_+KG^[^rS11!_Q`IZYOS5j>!Hs+V0-+oe4j8B9e$@lrgl$q<7/iO\H0D1uTp)<mL19T@:qp\&BFTA?
%Ko[GWp:2H0.P&cR4CZl5.eg<MoT<M/6/'g]>lo]>\]-GnQt;LNL[&c!ro%nmD@P-Rka2c5e>ZhjRo,Vk'lS+=(,I^^ft!uAfj\WV
%c10gYL)P,[h&j!'8Zd$]i!,Me>$`HC-afs>N*%tulXXsMW,HS]eRSZ\fm+;6f2)q@[_K=u<sFW8A+HL'#q0_H#4F7GEN;e^\#L@H
%W'N^4k4e&M![bP`]PY<Q;A7(MpE_tmhU";Heb>:eq')iBDbNTsU&"?2c=s]6>S9]%_Bi,oqg8Fa_ITfr[+<tq]Yok;W<acHk51b/
%Mn2)!#5YL7]!C/j`teC-l#;FdjT=KLRHJLs:A.`_457@`H%,V4%JsDG5i;4o.PKtY2-&eORuXfSS)3i[`d_()Q+MEuWsDVH>F"Xp
%Y$`3=&tN)\%>Ye@-tJ/nTMqA5=8q@L;3t/WVLD<gd70@&\n'9so^*V><XZX+OA"MI9%Yeb,Zd7Yno8;lSLjdk%KBTa#QCg@F0VD_
%)b(1c<R$t%4mp0c.Jh\d>%HG(^>c\8qH$O\Bl/i;W=*S=jc`^.QO!E.YH`kZSotFOW9Z]6ml<1/(l5*GV,fJdGIJ?RI.8"<^o7ji
%!UGoQ^H4em1nN>7Z^#aqZifW9A0(TPB=6O;V7(nGLr'E.lOjt]emm^bIeKQg7>&q)(NB5WYtm$ale<e6[9r4M;s@u-.!Y<A=)JcX
%hJ>+>?4Rltl<K\9TF:4/YiP+#_NflL&,NPe6ehKSJ)UO4gPA%"`YG_%Fu^A?4nRcbF([4/DQej$C1b6`2+Ro[ckWLP4pQRYd1g_i
%X6Vk:QaZqIh'E-YkcUJ!!iOM-rkm$1'g5J7:_soXG^F&7FG`gHcd'j,2qM?Q',(5sC:,+RUnq][hc_,ih`#Vc(S@QdO#ts?pL]^M
%?ApG&4"jg?hRfL>C7i4h348PN3,Lm/nbKAupu,cLn`Z0j_nZ3IX48-g51aQ*]J82VNBJ5X@A@%O[.m`&IqY::Ib9!)YNV$_4oFor
%FSN/P97L2r7K46c:M(YkT*Ri[>NjudY'g%*:4M'/_>eoTI;Ss$rcs;!3Fh'>#PdJVFFNh$D$p;Jj*shE=6>VD(`UKQGGjKLNt(r$
%r#Yk5L8K6:UHO$`rc&UbL0m0U^@Te"?ajA$o1-.A7rN;*T+%`hCVQH'U-Bt>s8$uKg\ZhW^;W;a++:p(Et!P?kWd26kcNAVs&2s^
%#WD/FqAgX'DLB"hQiH7[[iVZc.>Ar%SNE6WRtV)+c-5RsV<Kp'O01]r1ilS/^;mrM>.lieBl;tNe*D)$:Wun[)WT;nn@Si:dj(tH
%4Z@:ckdbK$VMagmlLeM6N?2El4nSa,p83<qq;J)te=)o<]sW'6U>-FY*<2'Y)I)u[,B)PcSWD3$qt4-RYVS$C>Yfb-7XRtucY0::
%Sq!U1SaE`Sn.`<EnJhE^s1/_[@%s'7[JV/9cS+&<aioO$YGYa258]r:FF1q]6t>W/T3iu.mdJqX1j\Zjk*)4ZrqjpbeG?;&5<iu1
%e0q=]lltX&,M,br5.^?,HLG85jRM'Ho8DHi?X&rS^@u_aimEYfp$h-s[4q,aiUKQZY+;Zmp"/T%B?scqpQ'YE@qktreF`=6L\nF4
%S*NUu'D=WIDj11m+?]M1nTa3TeB8pq\"@S4fWb*A]fcPFM`^N#:DY+T(:R&9T77^2T`+dC0f,5(I@?X4T>*\0c0RXL2)Dl4qJ$;F
%O#G4(Df&fTm%c9o.)W6[dG,*7e&s,@XbiH9HK3,Sl:k#9S@u0g*@KUZEuU=8c.pO$(\^^DCu3RSR$dngNJsp[f#[6d^"2]LdiY^C
%gcJ0IgRE&f*]uLgUr.Jq`c$;DDN2DYs0Hih.c"WEQeeJjq=K\q_7rG\Nuc0u0E5p1GN.T/ph%H?P9BGIBPVkbb>`9<f%eI"2*J4u
%\fU&LO5=)_3!D7<MC5O2#J6U3j,]K:=uW)2Bt#Eq%F;D!XaFDg9n%Q`UX`\A*,jZigqMAip6K$me5>G<bfK=^Q8s6V>Aj*$Z^/?`
%o!K4^[pCRKHsp4CZ$k>pHJA;M]!Ji"D/.lGI2?)]mlt#m4]o8(fm:03-<`3(2s4ANT16Q&*f]lr[2q""I+WakrU=lDIdqBQomH=@
%]!]nqriPka_8LS6C"1J<?EHt@\!H2af[eg:rS,oGacGE3qh&+6=s(N8gVPe>hnKW&YHN+6\%]Us[p#g_YErJZmglV02V.=M['gH*
%a/to[ib<1HlGLs!_.*:5lf[!6T<7-XqWVs7^2l%lE]EZ"G][P.FEhWfrS-:ffa#LcjO*Yh_o7PZSRJ:"m*RZ-m`3h`iV;u`f^PH2
%rQiCUDfkCW5O<gn3BXqHH?o;UfB7=%rlb6-nA=@dMo1J=0C82oh,jKkDi[uV%"B[=T[2*!_o(At>Mk0:pLriO47dcCq^i8]2fe\)
%pi%\-A")EsDuIcHEpq`'W-tm-1;:HuDIde@593V`6QC*@An!%RFcJrZI_W3Do'l=5O!A^!T.Q'c>qR1Z/A0`J2mW)OPoY/Aj5/k<
%LQV*G,@AmXn472kdi7Oh0(4etd*I3g1aDn$B=C?j7]/2K%50ot\9?o`m,k^4Y>;U0'mH8L\E6t5pTC@=hgSnDs89*DD0A\1\G"EG
%:L8B&n]kEeII$+R[<M#;-eCQ>?<OkjR2YmCD<&V,X_U#UO%uhu*^=@GDr!Fa8(1]bIK+?HqS^L8ce$^jcMhs94?[]_m`X#Tf4Tu#
%jm,^N?>Wttnbh8=p#XPLGl>PLnb_WZGB\LB?iRCuYQ+CkIHgUe`nK9_CV=4JDsXR?)JtQ'*KJi-HtRP98UVM*\32uEdu6K\/'g^m
%]\hBaI5?38hWW!]:KBtI`O6fCm(,ufqfD5[UF28cmr"(*]plYhftI@`L0aW'^2`>dS^06,SfcT(o8CfX2jQYbIrOH(p=S>`Y:!O-
%DJ](Y'0#V#k.f_3hKekrh!i>^H`aRH7X@;]PFic*pEL`?4aMM=rR_M;O^i>'QUf([J*sCtXZnmP(u(T1r7LP`oAT3Y1YoJ/gTqPd
%j'cBTrqM,L8+#go5Ne'HQeFOej6rVb^)R*$d!@miIK'bR)?75dh9G8,5::?W7mE!goO$a0hL+hBmbE2)Y'"Zs)Em<>r,C$]H?45<
%oD.Oop6SQ6Nt8sQRM[.(r%au+_7,7_:PW"!k.VWN'/+:Km7t<@n\-s0)*YVqn`*&S:E0n[%Q)G4Z#:jC\+J_VQacBX*dkQlkihR1
%Xi7]CO]rpA/=B^Xhp%p#H`K6s-AV?QlqC/\^HXFjVC&2gVdKFN2u.iFj'ZoHI5[;H5JMP"\^Q#@20lM'Z"QqWI!X36UT;#oLKfP$
%VYtmRls4sLiU4*skP<l1mG2FP]=3QfRCfpU?b]p\*S3g:mFd]$?Z.Sm*Lke*h`gp`S&j"5rjhZD[29jP^0?u6,<NjHf6LU`4'igS
%<]9-t's"Ns/,![dFa\^TJYl<0jnN\8Dg?_'c$,$]lKpmaC/rM"W;WVe/,K+gm:i]kh3cR`%j(-'kHeM[kk@$j:\8sW3U!(C,<*jA
%h"&2LG5St?Fl2)FV(hMbHqDp2RNDp,d13oq/8,rKqfm;$hRa^rmB[<:_tO&RCWEm\iS'DW1=qQA`6QV;QemF)pLJI@\pJdNESRZj
%DAM['Xdd/a]K,T!8+lh[Ilqe!ftVgGr6;G5NpZ\8l,.2Eq:YV+`n);"_EI_kr-_\XYBRj0n).e;>)0>-Z1os.IJWRi5+eCNn`0R0
%0B;ctLHj5.i^98Yp\@^U)-o6rY9%Q::#ES7kiBdr\#+%\Is<h.om!u8m-DKOW=Rge_l<#^pZ?.X44g(m*o+$,:EJD]S%EZ^kKVeK
%KfeVhT&$ntgaV+9/]L98h1r=$[dPhcXj,bj`6[IfIr9Z3IW+enLY7%KDm#/YHeI(U]D$1(g@KZHc^_OqlcJbTrHiUd?gb[VIWPMf
%[uW1-!r!57%n@^8:<r8i\Grl/jh]s8_U=(^j'-R8HAA'`nFkk*gCL37\aaWam!A!VqVKNVFR/7ZSS?RKZp"A$rPRdi]?PO=dm%_l
%[UsF4h>&dh?CgH-4?kBC1LFddN6E:8eg>(!g%NUYAp.?2gn.k95(5E%Z2/!Bmb7Q%osq=%nn@IE@_4etjk\M[gu7uDbE$P%hVWc=
%'5rmqHMb61rFl)jhM9-1hYfE[I-:3(HMk(\oCh_>ipkE[f$sK.-Z1\gI54%d'%8u=Edd>oPFiNK]r+;F55TG>WOMKkrRRb@:\Sbp
%DU.-coDJUco_A3Bq7!!IB'4Z>-bX0Q-i2r2qq[BkB?P5%^-(.Rl/$nR[eT+Nq7Vhr=.YVTPDFL%+"rSlhM6f3h_Yrs/hGnI^:CJU
%o'+2QERe6<EIW=Ip;NN1g\SmMR6.O;'4GtJjg9O0l/auco((o!h9U/#m2(iP/C&Yqo\ue-P?Wr0+77icdT`9)V>1@g:R8^8Im&82
%qQb,3.R$$5I^PQ_Y1#522CA@sl`o2;`Tmck7sM][Da/K[p[[^XjkJV=\'%Qb^Kt4F\i>06VD\9si_=gli9m)2WNjE$S&ZJKDf;e\
%N4b_WoR,rka5r)[hY,g]fi`<%n#;Qg>PDL+ClCRSnSW_dg!V_GVDgHj^AAbN&&7FIgjetQ5Q105rSkcJSbJU80@i<\I(pF\b^FcK
%qVfUF*C$tngD_64[MBp3Huj)gi8`[hnV'bRj65X'k@X>OVtI6opHO_r>AJYY]tXI8oB4ZAqd3N6g7pLLQTHju<kl:q[Cl"ji6?07
%C--n*lXK2?`n0TsoBj$\gUE6Xc&\jnD=.;Q`:n75J+A#2?gW7@qWW7,F)?C!F6CBWQ$8d[&!rSD-hC!7<q!\->$>37?WgS"h->BA
%(1/,dcnoO]8*\RW_=RKJ]"bZKA,Xq]d9GL4q)$s9cO/90](^3A]/tB&onIbgF)>FWh><CqSW/D:dqCPP\[XcuD0+n(TXA?;mGHT#
%]"PSY[CaoRD;3CsGICklSbf_,s)J-tkmtP92ZI:_o>KLH_p/"(4)&e\I:m,/3p[jb3:-"gIIo#WIQ13\^#A^4p\,`c?/F?5WZOI[
%^G2$llp&(T54>]20('b8$LQl+B2?daK<<]$G7Si$3-)O9r9aC?_*mT,:%L/i^[HWcS*pd[>,L-C4`#UNl$^/]SfE_shame1rr5rk
%5.Y@Zb,+OQ*%/iA]3SQD\&$D_XhU)b0+<o#oW<c&d_T=Y<HI'8cLKK]S`Y6hJ(1%kSb[\ZX]'9Ahe@mDWg-+9Q#Q7S;DuAun3=>Q
%RiHs/ndB1T[<+r,8EJ%&A;;..(KQY1P-=cY.Y_luL=H"F_EN;PVL-?X=^Bn0cOESXSb_aoI43iKI%r@P<`+_Sru6!nE](5urr?`]
%L\Q5$WCYGje=be`/!@_Y%pe;C"W;G+s5*dVqK_*.bPV!/UV>u6Q?;7Tlr[nIC5R3%\?ir\>L-0%p'$[>hWc)(Vl$&/p=FN#]m>RJ
%1IKFUs$7@(IVOsZn>WD?KAM'dL[1>,.:'ON0)b&mJplkgq9E7@]D??@mq*3Q=C^7?Sb;B6UL0F!&2sJ[ZWnLQop$6kdT>^uJ,N?u
%q>G0CXa#!:6.kChX/l\q;4M50VgBY,i'4ZN=/irle>k6In2p;9X!i<bQ.1($FE+#Lri-u'Pa;W_S4]\?^2&$AFfNcpS4aa"3-V=!
%V\7=G3kf.=G4psAq0A(XSac[94CQ6Ra9fdjYdn(u$_be>*R!/&3FTEO6'>ZtO)9UuQ#diY0#6G)igf.E1pQG,p-Y]rD3n-eS$pDQ
%m\ijfQ1Y`+7;=npc_&2.\ui@%cO8X=.KqLnUO:g!ms,$g<+Uf?[3L5^:ZU4Z6qpCY*KZSYg2(L?KlJm3)*inlC)nK*ddSp0[Opd.
%m%N6^Ph+iFN$4!o@LfMgCrbHbg/VtT7"djYE$52cfq8t87@S2DZri*C&[e$OH!3_e-@=BcHU>7D,m-Ys<:Z!B_R;VE$E+OSk8fVb
%;VNFKINuq?Z5T1Q+dY<Nm=@@aNl=DE7-G!&[!ItW_n`4!K-h8c(.m/$THtfj$+4K,6@+b;VEkTa$#W4h!(%"m:9#=2BauB?FsmbN
%3mfhjbA/?hCI>^,(hu,K"==6?b!Afj>4)[pA7?Uu[7uO(7fZk;%'m9o!M]g<KFWp%%D\<,gqX"^$"[br7U,=XM4B]rJcQbu!>RsW
%Z6Mr9rW!I6E:'MF"4ITWoK9?u.!'p@VEKha).#3Ndff#."3>aXYW1^?V`>&/D$rNORP:G0!D^am7R8YYcdS:<!=1Q9]VoNWm6Y"p
%5\>hhBc<ZgU-T]W#6et!A/X<ug)>*@0L0;u!gWK/U.g[-M)<?l&97jN-l\%W.71##;9shtD@,^2%nmk:7M,Z(,?mKfV6/om#Fb:Q
%PT<Aga\#Bu-TL%?54hOk32AHH.ub]#DH'l#_r`PEUK&Sr.]%s`9HH2+XU6-n[R+N(0QQ_4hT3%NNbL\*%1q\CZ*BjY`a80>X!D>r
%H7hO8AjQj0RitL*<bQ(Gg(P#_-bgDU(@$rkqLI-7_Rhb^MNnET'oWdGc&S_7AL"FO4p@@.kV?>pG@E)X7`;-%+ig_dc>#FsDn$p?
%&R/5Gg^ZAEMQr"]'iVXb1_e3RO=6@bEC.ar$_'QI'ZKm"1g8-+&9"D?X;M^NTGeo9-JElG1,.Da.TOP,W(/\_NOE54LtV"Y%5gJB
%[tDCn6Hcse[-=sH=:6oCL.'!G+Ch/U0r;t4;oDoum4>XW(\.b4PMdXN&qlRQi=]q]9[l@-_uPF.O<!0j#SDqb**X1]Y0^=L_\UT5
%\<IoLKX),B:h9a-(!fKWMMqcE(F;-"bO*:p*hA<u6!Gd/0!).,Ah"/HoFWsU\0nDB\6H%2?][Oom0*uBM0b(8C)@)L(^9L3[9bPV
%C.DLhm7<\,LQ^,hZ5bn5EjZh&.<B[ln$LhMkJa)"+9j=Z(nru/Yuq>JoINO\3G2J3&m[5"6j2mJ)_MMl5uEA*R_:;+a\m2c$lqf&
%V'uJ6+L@"69V`,b[ma0/i%e!+'I+'[<f8*%A2oBs!bca11T(oiAtgL/qn+582M]=%Ll>dE3[(J4@Mqah);J;+k!THD+QIWC-G7I#
%6,F4A_T*ceGg(sL77B))<mhh!2+_H51^\TSSca%?%cJjO6,$rR`+G]6P(:Zh+HaokGXNkk0)5&MFgY`<=`P,(6u%oB0e1WP$mK.A
%=HeRe6H[`<&FGnQ&<^^r]SI?WP$l,$W#I=?\1*k;VBhacQ4ooW1dF'*l<2%+TZb^gd%H3-pIb+:F@p9pCo9rlFCIi9Uc)!r`G*nK
%8AtQ2U+XAB<N>Pb^oF@O!]A\hh\@Cm0E>P/a_!j_!<!MCJf41VM6!t-9sdQejE;!*k"QulJHDS<"0j5V1;g1#<0T'DKQ/Ot7LT\/
%JgQ>+g<'M+*l[BJ##Z'K$;LY0%\#6l_7H0R!$M4LBK[[p-#A6Y6#)$LV#i&q\cpYRA;`J3a;CGgZQPPQ!2[L^+@)WF;p*.sj#DQ'
%,=JC`^_LQ2`WIkK6M5!QM56AGI5lh0qncuN0qY^a[\tmF<Mog+Q:Ib\:0P([+S-&g6jKau;:IF`CcJdM3ls;B;gfE^fmuQ6*)7&h
%VmDeqL'VA,6((>!(hgB'cB4BkJ/C-X8OJPHfX)n*"6Y#j^*MVD$^CsHH.96*^j*e1$d95,,E_sQ&\ft3<(Fq@N/p@VTj\Zg'(JAW
%'PgDCB##F3#tU5h#Zem*-OX,YAdM%1eB[-G:+Z2mTH`sgC1R+pH#Sm:J'n6FC80TJ2!>4^1;[W:@Ept(X9aQMpOg[!BOUgaJ6kKJ
%-^7[65%k0AMJtG'.&94g,]4@%;Gq4"aKl3m+V"RL(p1KrVICfC7ti^eRqN==3ne.Y_pkD`Z0!2SR;shlUGAbfb908`=X;PFb(%f>
%@9pe\[B.=i;B/VT2,'I'VH4t/)Z\(e(-"Wp=R+1e0:&W0Asj<P=pgU=K7ph,Qp5RF92a>3Uj9ruCkr3/KTld;?VjZEFV.&`VH"g&
%SQ[oC6fA#eM?4-1e)pb1d]D_r4bD!ODt.WkScuA]YbXB!_l&Tu0fcDT"c-n1!2=ejfrt`'JIEG2D1q^p\S*<U'OV3?''sEUP3m7(
%-<22PbV,Zh66E*;'WDpshMFLT#Z2;XFq7#nb"*uj$/W=cA;9Dbe,_fja[;&2+Afk-l=kT3M57mBYSn6mQ-^m8(taWEf9!*r"@>!N
%-5DY.)\rp:5t%-b8`CC3OiD`DAo/IuTToWmM-:r3X4BBUpfg%66(BCA*@"0g&p$)ATqJ!.?pco8JO:QdH6!(PT5ec^jM;MC"^dLM
%F"f#!^&nd['UNAZ;3`,R#1sGW`(@),"H]_r.&fF&=<-ruB9/*-VUd.88q;8%4E`-WBTRM7R(]hc0FHN*o7M'qPl/D0iuXZ*@#_?K
%PLW6fNg8KeBI%I.d70@7_7DoWYi'4RC5!e<7c6m@quY2EPi./R_dk#UQP;16T=GDoQGakg!@f,KNC]-p8*OU]!;1nSA^1\\V9Tte
%!X)=+8XI;eNqb)GX$6.b$dD1sE8sciGnM'l<&Q0Z1E3"*Lt]*!fk,u-!_Is&+cDpe,RB+WIpa#sQ%X5m=rUKQrglMM-2Q(9oHV(?
%>X[3MCb6*Y&n%0tB`rM]2aLhA9h4G!KX5su!fj\96I-.f6$`2ir#X'B^]]X;DR_Xi9KX9$&-K:-Lnb6uJ?9%%MB__HNYV-filEa0
%q5*-oO9/NcOT[&])g29)'uGJI`[%<of`2E;+OP3CXEbNjg`o+8#L8uTA/-pJ8QhuWKGZc"U_Y?`RgdLccur<nUF$(qSl\pjG01Lp
%4c/_B^@j5g5[k*`-j_gSH#ne<i,"P@XWT9B%m`/U`9nc[TkXe+`b7enB`b]L+>h:Ykf7d_5`qH<6aKM"mi!a9pnD4ubh+4h($q_p
%ciq7#aXFuSA7$!uS6-t]YZ_YD_LXRpJ1r:3NEX7S&kIfoW'Nu?8gk_&D:"H5(QbfAKa_U`+dFnrLSsAR&&8YHH>kWN\YM!2J<!D4
%F9%NF:@^Td$O%MK-U8#eg_r@^JM\pu(,REp):*Y[!D-!Xp`+#m+ZX5O#9iE,:6FWm7+sTdBC('JV,IaH3t#M`+*;=dh?Y>EAI9SE
%kdYAX6ER$q_3SYM&!sR57Nppq9sdEX51!Q=]+b/D#9u,s>Y"-rdMghEnsrre;rmVuq'+o@]Fo"(UnSAGZ4J$iL,Vl6%Wr[T+b"E5
%Q&$Y8N3-`9TkMdYBb[Ama[CdtJt2]N:`_5R"/Q:2:a]rriA!tm7W[g8C*Am0.Y\&s,V=cS1iFT3gdL"?66D!fdoc,5L]O2XJ;uba
%HH=S?&G*^A=[`Vir/8q7_Bru?3I<1&-p,#U^#:tG,u3Fo;IC"\Xr2\O?t:4N/R^j$PK)49,@LPfZ(_VrOthe#X"p\b#86K^#)hRT
%L_1n93A#hrN=U+5X<mb[JQ2Q*B/bY`p-Yc)m03ZV)ASZq3SFLuD$LJ;7:;FW%CbH[6D#Rt,CBRBRG]_C_h>HJF(!%:(bgTZgSCX.
%3$CEnSg^&J^jli,,6V.P'Kh@!XI:9Vgd`Z(of*bZQ%(0mX+En[H0\-:nOLN2:`198XC2[h8"+ie&UK82<LY7m!kpKLP:*%6(md*[
%"n`+,=rIAfZ%`TgE(shK(ssM.&8HjUj?ioY/+^+P87`6<&LtU;5Wjd7^0miUP7"Kq6WB3daFcd=6_Zr;i2,rRYl,]md6m4%p[E-Y
%_99'5_8,ks%>E6KeEGjs.X9pZQAF8cSg?Fi!-TkB-MI`.9#^sO/Q4NM>0-f"rb/Z($#N&"]MLGC"H=J6P_L8%9p*,ENYhmYAAVmc
%+%ihh:cOgQ0\e@\gWkdUS.#_:-%WhkgLNko-Eo<\#+d!2+Dq:3jme&)@;s]U$YUVZamffu)]?^<k>CkpU$N6_$I-T]Ou,%pj[:%_
%^p:2P'Pnf9%QWOY^`Rp(W#=2g\8Q?5l9Y7Sg^H\#GdJ]U9=gG,W'hJ!Y%T0WUM/=TY\")3<#!t4j<1$$c)6p'(3fkh&r7g.R,>aK
%_j;\[NWr"$'DEJUA<B?<cf:)n\>t4e9Xoj>K'rgeCa=s0Cp?O:rTK)Yeeeq<`liUeS_T69!.j*`)Bd6C?qGAu>i!g%*puqZ!"1;'
%b%(k2(5-B@E)r[p6F"@T#20@0aIa,e@mFZ%Et+Z[kgR>XG_C=IPaKlMQkOU=(0&8oLH?Ic3,4&(Zb.GHN@kH!"):$.E9FKcM%.s<
%e7T$TVCd!r6+LGCL!P73FYI:,6blm230:eO,Zg0^Z4@ib(`[4tI^"fP!TB[edm&UYmsuT7pPBC2OB:f.6SArZe1d.EJ69*OJqRqo
%?EAiN8T]IWaIS#NL^aXZI#s'e>M:e3n:eb=:PqKQR)@af2Yd\Z_#]+ei7&/K3pZW]h]!tU1]l'd_d+ta)jGq]'Peg/8:4@P2l??M
%q'bt6Cbr/u$EMf;`Ybf.H_r"H#&qh=L`kfcRtJ'gJcS>$`*3<3[`4On>N#()B[">3!9KZ<87l):A$WTR_?km7A!79&)HbV$k&:ZN
%!#[DTQ"]SVU5cA8)aMV;!8\P,mM99>54]olM`bc0`,Q(;R>)rVrJ#$r^]ep)=W(p88BMMA2R2Y-2Ak)J^#M#AA>l^TgbA5GTI'/N
%fn$$Yjl-FXI'=6</2+95W!%lH';2W63_82\kY)@;;I\#]#IV#0k5bJ3a@/e^.o8NJPfl.eMHV5W_'V/-Lr>u`C;,8*n9>"0.%e"=
%JSTnh7(c%n!-E'aO2[drs*'8NYVH7XDMB(f'>S$9&b#FFirD"@:+jZ)O92WA+aAQu.EU,U_$4GYJtpd9@mWA*fS:lX3h((KQL[dq
%Q;J-TQF/UU\Nkcjjru;36MNr_6-f&OGnA,U&G!/ei8mmA5dWhV60L\3F2<X?5hlK=$TpmXZe#ANaGJXWnHq%2PS1LBZ+",?Km5.*
%DHeAoKT70LRkJ=\qTLZE[/k0g!X!t\TcQ?+$L]Tb0bn,Q"9i]fII9M:DZDV@>qA'<27b$T+Ge$o"(mti>DQYpgXP5oNqEnJ$PB&]
%7Rs1\W%>Rq>-pYTRq6JjMaq#V4HjE\Mn][*fu.&N4HO6/I\%[iM4ih_`]PMfXg=G_T)gdP!'Y:fq1&k.2't>mTKfB&(5B+0jc2BS
%8-7-?h?i'pl"8j<E1tEp#d-Qc/2CpiWt\r?J0@5;;Xu[s2eX(m3/#c-64p%\WZ!;mlt+d&4>=I'K=2*5m.Vse3\L3giL7j/&p+0B
%VG3X7E;1iaFr]rL-5!LKZ@o#,cE]=5$O.bM)-WDVL#GI6-nc3W;W+u`GRl>1&/`Y[k8a>uXI$-g$V1[23R;+a=]oEi2/`V;3B.DO
%AqOco+Js'fHTP">&bhM)7_,OM*5K82&G4*J7<HsESDoca@5ot38WsL<R[E2nTFAXS@H8b/gcn4.0GuX9B69e)\3-Ie+pLTU%VgU%
%e:Q>,%i.HS*$U-C('K,O"Z>ds\Fig3#a;4sH8Gn#d=L%C/4#%WC^aZdc/u5*$HBkZ_AX34WRqN5F==N*`9aa'Cc+nTLmS2//Y\a\
%\;Bhlgg?m?kSZq7>u3"$fa+H(JF>Wj:'&ss6aIFRJ`)LV_mgh:&W\5M_W]M^;DX*#\KS\I9sP,]b@_%i9nn0;m$T;1UDA,&&G-0J
%AJ3s?;8J>Ff_Su$iXS7_d'KD-N?D\bG(akg2(r8MdUjU2H!HL]UtO/*Ujj'5YfktWN"B#H+#l=f"OUpUk6#.3mE-aqme!TE#WA,F
%B+'PU1eoW>V84lr6!us:\;sT39;32<O+L,g\"WoSE[tNGHDphQQ#I#"i2n,;&\^nCb!]m],uMJA6h&#>@W`)MN(t?!?Ut5mIg&74
%W.L!$`7dEqF]N.1BL1O/^^J/QNQMaYJhNLarb2Jh'AT_j08PoAJd9cr9P4>W2ZadoYTYk$s%^`q5UjT"R)J+!L$l_W;hRM3V')Bq
%8Ask/PG%da1P'1>n:cuea2=$m8kN=n1_W0r+V?!$,eS]^6<h/O(0s2)<JH1('2WC_KiNC3:;^4P!F.L5A"5M>9#;+S^IU\D'dK<i
%Uo]%\HqhWN66(CUZ@rY0IMOu%KGq.N8]2OKR\RM,4X)LJ%Kp4<1ZJ$<N[,g(e2Iq&L[!bE#Ud=$-&L_+.?AfjAkQc&/N3]#gi>Y%
%oL=\+;@)#2b`rkVG2bE;A(>N+Km:>u^`gOI*uS1N$6p7;Wr^+XB#I9^$4p(SG6:SApB\A81)^CJDk[g<8[p'i8VR\Z#RR0oOP:CE
%ec9C?"pN=)LG'C:"(2/0i8G5h6$tIqW@<OR^_`G]/0f+lCBh_NiqAVMSj]gjOqntp,](":&M=EF#oR`=%,kS3)%_7Hp.ZZU"eHR"
%K,sV)+[^oo+Xt]eR$!GS&Z7Wq"M`lXPd(a[<K'M(n2phV@>#@8/];"(9\f+Va=l,oMMujd_6Vr)!a:H@=RiY)h^1'<q!r)\"0XB`
%F;RF6&E:*2<#dkbLpnN<Gnrrer6;^,NRjnJPPE.WNQ)Qof]_6bks?oR11]Yn8=D@C,!^fP'.slR#-rf(X+4q3Ehpr7c9?"5(+I25
%8.]cK)+1A"6Z/$oi@%#P@4eVi".KE5on1H(LbLND)of[UB"0d\T[Yi$hG.rkWL64J6ln]]_nX>;bQs9&,>Y[D7(D#sit>=73(_\'
%?%h*uK4^<Z;%5B1Z%*"H,2=G_1ID1p@>URddh&JlTB/^03holqBEJWh=NN6#!]CZa..A8Ai>)GqJ\qdE>g51%:j*!s@>8G2KNV^/
%F0I^q:C^e\isr"T#Ts'*%?Y=A545e3`+ZMG[s9YkW2*ON2l,&.AhJH7%>V)547Wol*ba`2ANt-ca_?NLe#0;NN8P$l$mc1'S%RPF
%)5pkWbSP76@VkaSPBAaIE;.WoOGHIdLb'n$K:<&PB-gp:)Hi'ZmH&\+KQ6L$-fbraE&ult&td4b,j"MWBVt>XBZ(U_<,bMA_Enh^
%74b!/K-\OX9gfW;m4?]./KgSjpRMK)0hh7J+;t(frpY.oO<4mEQ:+nY548,l;23h@8>sTqYcsm2fP(giiM_15UqL6@%;\.,Dd1CG
%^6Xse[?I.I$hT>:l(BjP8CON1!onrL0F7J\EO5r=^VoUdd!uTRin6;s!?Ou=c7;"<Y^G+?nWH.aN[.Ma*@>_b&F;Ii#bf[5]b/P[
%YBT3gK?-&Rgi1>@@+n-e1%ZIa%quM<"+k0ACIrIi>a,`=gl%?sJZXa>UU,kg*n\/kK30AZT]87QX<Rj[@Zmq\a>6Lc*9^Wb)oV=P
%-"+Sd,^'EPb2QD$im&.ojlINgOap4#'GipNTph#.#EEL^Hbqf:L1?l6a)r&Vn;)m;,*bClj^ZUI3^Sp0'=\W!5p;gc%\sC$_u_[>
%\7\h.\<090*nhWZ<WN]4j@MnqLumY&(OY8nDl:S\-P4%]Y_Z86e,ane0pGH_&i>'O#U@9Nrm&pVLm`d9_BBF%/7OcP2oL/an4tR.
%Ei?IA@Ff7C`TohVVc!fM1VADI%S\KY@<Pg!H<>"e>c\QL`qj6E?n6[ZJNY(V#EKM:?XJA>.h,!?*eP<bmGdOan-b9a/+Bl6H)a`^
%+O!Lkn,6jcZSjP7<8.I;\DV!NeILU&_m8n)%#?Rn`2*R,a.9(l_huG6l+rgIHp([1]STaDp>0-K;<B1n9[hA@psAn^r;6n!gHi(O
%JJS?3qFY2uUl@U[*2hVGd)f7(kr4To]]TP#<\n\h'FTaV_"l&QStJfu'N[.F$oB3qKgS\UX(.eflLUK:*X/Z@O3uSu@4E.c-`k*F
%Vn"^?7^P%n`15F?!*k#0k2uNW9BUt^:O1A5%MopQH\9Q_D&@>9$#Ud9?pCj**+YaglnT1cSl^3I6KF[+mVQmHR>aF.-Jq-9S@i5^
%BJ'NmBHI';X:ScPB>oM$L>gHmXp/$B*dcktN_&[j8&Q)IfdJgTOS0N2ai(4K#MHGn;.1K;Nst#'aVpfuOKCcANt2N58g>;+`%A+D
%bO",>&eqadh1Bm)?&>T_n+e75.H5ATJnQ3YF:6e6QsL'uk:fpak,L^\P_Tn6&3K&1/sDt05(M+'H\b\6-rQ''8Mg'J_"(;0TbVfa
%)#5b>$!D;a/"1$&G;3KQr:%\p/MW\R)##l:Jc/R=C5u7W"l4jl_2KdI#g4YVoV-jU'$Z;$)GM7Q%NWmBfYFa(Lrn#Fr:'Oo]SE^*
%<r9:lZd>g*N7G<UIMN[A,/!.s\0=u[V@0+Zi3"XTCd\COlacqjeG-+f+Z>Po\k.o,Mi`)h;5eH`F!Ic$gd%XW'-TGJNZN$I6&]b0
%)O<1h!JuW]UE,%X,=3$sW.d"Z6pPO^O+?pt&Y'E+`B>1+^p"55Ts"=2MM7E(1*M0QPm3kDQ_t6@Tpr/GIM[nj3S\!#[2p8aYVsE\
%jI<:r0VJ\1Z>cG0&BmlT0\PI&lP"u>DTC_.gu`ThcKe:(P`hN2pak(Zc_78#9I5CH=b3IN"lI<J"Rd)X+s'#';nZI&FWc*`_*u9Q
%DP-ph_hRpo[P#pE@9k;b',u4e$h>a^8U(Wa"I;L^hm8U4i,tC\1^K"\m*(ND'$gT:$INI]f^l=[nN2(`<eW72%skP#C2_C1Au=22
%:A/!9%$[_A;ahh=_)"lE#**(g6Z)Wu=u5an!gNXQW/BSR-2J9!.HTIr>_+;#9Q3sNZU+VET#^$Ho/gR$"Re8`CF+uC"._/s/SKFB
%Jk"00@7HqD[_j$R,2li9:R2omq"&E#EBsF_$UTOiKVV&TE'$9SP4jD2JK4/j%DPA$UZ&g<1kqgL&NE7lN"1c"nl7b\Z_T;tGjMfZ
%D&aBFD+a5N".jFO#U%f4?M&#FL/D8%F6%i[WkgaWkqr^G(nigIlSYcHPOX5&d$YpFb?Y6T"Y?2nP`0uZW^1T]ceKChVFmbl?21DX
%4&m?<,'lZ14@8Bn]$-r>RQOLL(<Q9``qahh/\sTj7mS)C`Q0&eG.k]J:f^'I8-%9WLdfFS5!2.s$Xt#k'UFTB!MjaJ%LjY?Gs>b^
%3JL!H:(u2MWA.o+7ET-c#XJ^*5:Qh9OWTk3'.b\cYL8iT37sfVV].(a$u:GV<SjP^&fD`Q\3Ua#LsE,Y+d3aJTU+1l87H8q&=be<
%Ti!Voq]pnS^,6oR0j*YbZ@AQD@X-`B`0!kn(fZ8m#`[Fb/0[ueo`(3k`cbEmT&(hLN1_C7?3;GWL(KbIp*gDe_2Itl;&BgOq7U^+
%_@Vtu.ZGC?0W=2)g]W$<MgVLioI1Ctidccd#"T0+X\9(S1^6Op0ee5*(0r'q%lF^STFcRR=/.I^U+o]Z1DGS!,[#]a;])*eE1g^3
%_A^MZ6A^5*HJ#GP9*E<;pt!7S8U^5?aq]UCG6EMMi$gH-IJKdWdg7BZ#hW_e!a65OlJKcYKG7Ws$>utdn.CRjD[Q#3^duOj%uAo"
%fhE&t;Y*U3\6NIqjiZrt:1l6jd`6TO\/+#ZV+0(&iuK8fS>l-DUP8Ae\>XA5LSk4E1.!.CcG=9*4dRDcQ(T$-Dn%FY<sV+6[1F@%
%%:E:7'l:;I[RB2$^]nh,C<jQp"Z?Q^,_HCLkL!h/<4Zn>";Q`kAk-&=5!S*>-&3oE%(2;>`hIe<$'D%<@!@">[K)F^a=(Ln%Z=eF
%NiadY+u#,('-a8NfuS_V$Lcu3;`hk_"6$Dfg;"h>qqUNo=7K>@HYJ6sO`-mPLau('!2#RA3DP-\O3C#MPi?(tKqM-Gp8fr/]Sr"F
%$[F&?pb4>h<dBhVKV[;Ls$h)898a4,#d"0[EQ3gl6A]ab%m2GB?5&02:q]IBO$5uMC*3[,FuXBXQuZLX_$IK_J^RX!f2;CersIJt
%_#-N\U!pl=Ojue(<a\i7F5mK$Rf,tQ28JcjbQZ*uErdfhrIhs9,dmL0ADqdWOM!7j>\`>bHN`@Zgo5R=<^Vg7>b)78ntd4VQoGRo
%Bj+faQl>[Fn$h\.1K2-E+u-Q"@(75.Sl&>)$%bh^`P=u(L`E`CZ;k@Qq-gTJ'QFT(9-Gf/jR&5a(/=+aXfRS5=`f6\P@FdQ>:o0*
%Qr?YrQrnjXAW>%W7kO:4i@+sY1K!LP9ET.+]ikQ(a2,KO2I_SkLO:dJ%qT+&aUkD@on(/MQOjD7Mfa?]a0$4M^'&)\9dp>O'i>[s
%BZ8H)Q>)H1@Neg*kep/4;7ni4^ZN2U+ObtA;M;%5>Xa:$fu`fM/6qV%W"7:HOnZm"BaZ(g>Y'ZZ1(ghm2Bn(T"]G%NnLHSbY*pbm
%rEFNo/u"kh]#XcuDT3pYWD7Ij\jauP_FmdMl:IbflREr#,'J]d;q8UD9n.GtXX#5l41WTdKfo@W<\bq3FuX2-c*Wt*jV3XDP0Z2'
%PbAbP,_lY+V[[FR#cuRND"@1@lRRBd?;`2lYGR3t8F13-^OYL'I1cbI<),GONjr!EL#N`t6\Z!"!\q1D09M_j>l/c:Z5mnQWb;?l
%W=HS,N\4%!&tW:7''R>jr!&)RL(0GigCl>IOEJbdN0#"h@&8#l9sFP/Mhs`$e3JAoP)4iFKk5T</XCh#K;GZR)r\q[.TKLN@gM2>
%'A[9f@Zhaer#h`0KSgJ*5&,d5_e$]87DpX-o$1W0>Tf4"Za?^A"84ukjTK*/JqO:f-pL.legKU:#isJ@#bX2o/D,`5(g_h/)J^YW
%"oETWj6H,qNp58R7?0)#aD]-DJh$r\5f,*I,j23?XCb'j87P?A)8Yc^.q]FY)=ttSr*Tse-1F#A)iT"L,h^I&mutpQ.gIY82T2f?
%b0H_im36UcP0PH>5D?k`]p*RJ-B#f[5bsF5ANX1OnDWR4cRhFlC;AFPgq8n#&.*lc"M)LZ**oDa/OLeh"HA]6gh<dqAYZY*)RT\l
%EFX:!&)UiR)%1E#ZA2DYr(&V^)7'A9/6m(fr?r8<]@WPm%SmMd+b7R!mTL0CkX$>@K+E5@Jgj;**s\6[O[XXqhJra-H':>UJebZp
%.9:Q3N=N0"d?)Mf;-r&':Pj`o9f3q]3"%$PQq/:Lqe?8n_^WKbi*DYo''7,`KlVk1jM8Tja6?dN^653%Ji:-5B!4$E9h(*JX;&mg
%-kP;l,O/+QD;eL9(kZmPL`:K!(M<H)/76F3WnN5AFmAFJYpG5@aR$j)+eP8*qD_2Cjl7,X_H.[P)_.:*@osp'b%>@O,^.t!^aDDY
%-[4N="4)4K@$bg*/am0*,$QZ1O*j[E=;Uo>NS_g_Pl4RE#8&09.P51o4l^ZG1\--))Qe4l]#^&!2UZJs;GGGRM)I#W`O,6uQpn$F
%P.<$*6Wh]O[*DsZQYRpsUW1.cDrWjs"?1WA9/8rqY>FaODhY!8s.jY'"nB4$$n1Q79qTFAB"L=2@Y2IjON`1H]fE]cZS`Wi01o>/
%HZ:5Ml[jbQIM>,3Q/Dq64aM9:E8^,i%VOi,oI$2RTop?#n+&I][ZVR10s!BIW\-4aJoa8&Q/(;aeq6j&:tZtC]I#Kq4,--poVDb`
%HE4oIlpdd?'+QXZ)Rs*J0r=o_d(g*A;eLdgg3(IaXCMZcSRCRUY@8U#A4Y#tBrg5N5Z\532d5bu[&$H9-3"=BOAM:fZ=8"0"d<K3
%R5+7W>0ChKCE-;s:e;#>!H-(BX(A_s25?;8rD54ghJi+/Q0?hRMq&*QA0D9LJ@!0:8H)<q,V_5uqU\X1jEO,#qk2-X:?tUHhNf9$
%cTZ\h^RPHY$U1+I!6T_kR$VHc8#+2qnr%oB,8?h")+#WrH"9,fVD1?Ybbp]gB_,@UWXF;o2h`@#'UW]gnRor'1bG!L$m88EqHYC'
%(dCkqa]=?Ln5E:fFqtk5q%I4[dOTdemCjKAQt$*tF=d5AF&CMu[4g3P`Gs;nE_LeuT$aLM0DW46nfSe]:\/rjS#jtoGf[5%(b>Dk
%pgH2.6#frhi;-C#imf:g';$pHS;8pI<1Bk_-MNn-bHk4V8a^Cg.1'**P/C`t<NjU&^eZ;)[1OsgH.QN2B6NJ1<gGpH3]Mta&E5_o
%+`MAZfnk8a$\"BHZk`N$+aN3B#j"*aSKVlVgXF^k5<mN_N"pMBHT;GBp['AXk#jB%cV4,Sn%K2*=!T2A.j>We4[ZqWL7jZ6g48(=
%Z>1'B/7omYWMqH86Qq=(1)BR`$Nq3"Orf43;+Ap#c,6mI=JpjtQ1G6)#b2ZNbCjMg>,$BU&g)M8c^#\LK1GW__[]6Wj>Il#3*jXF
%S01h;Dgk@*e=Uj%NHC9REuGA"op/5K4olRhbY'J+-Bmn0WEfSKKqW8g;h/B(P\*UFbVhU+W)?A.&?,g+^`+n@$rY"j(3Ua=/ZQ0:
%%!-L80j@Ak)$sjSKPdSa-q1)"g_dEm-*KW".j!6<go,3g'Is`0Cs[1M"tW)6pke,,=!kt!SOUMN.M&6Tn1a+L4,1(VCrnc0QLp<p
%*)*4NC_gLeM1&*0BLTm;<Hp@h/)&GuQB7(NWR@juq"Z2PcB9^#NT,/lBQGek(8Oi>&/^u?qU1+Wd:hc[3RK3A)f\,f->d%B3)t\s
%j!g^CV7u4&p5j@4lFmB>C-o^S`NUbU$<d%2&2ffL\p^GgOFgU#\QL(eS`bZkd\^,g,1DK5Lk8CJ>[f9@i+TCsJEI^lHagY@'CpK#
%q"0tQ=)E2id/Q9g)i9lC\Y<n(-O")K)[YI1;`4h8i%pf^%sp=@E?*+63AdcVQ8>[aUQ7iXC05D[O@8<HEb2kG9ngD3l6't-18uC\
%>g-O8HUECA[>[L,mS(e7pknE^0-rA)`NmaQ8dV4PPcg*uGMAs''6W!]B9rj0r8YMJ0cQ"UV_+6c1rn:X@DsQR_3e(cQ$j;j!At%&
%7BNgCFUb]^?d;,A-(c!fq^HeM#P^(j>^"(O6&F-KF#bnD,R9D5BCl'\)g@0fV\+44;V=S\3^\FF'3Y8;KgaLo&Ef7*,>=`riBKuY
%V*^'$]kgX-;&DV_KZrsm1=_knc/:%D#ZTH,`_3(m;?`S9TNYTNX/kNe7CPaPmEDAfQ(/"*3[S.@3F$.:!"`aOFPo_'U0tL9Hj8Yo
%=/'NT;.GoUCT@@>0iJrSM.;Mc$T:<^r!nudD14?E%;T2tV^'&s>^nZjBM*@J5ZMeaP<EKID6PiW_#7^ngU#g(B-BC`_5TU/auL=C
%M'WLj(<Hoa_``'O$RtX0e#BH`fZ$f,rO^J*8-DR4Wl-@LW8YE@0LFWA"$+.4,W8b`?r!\1E``QO*D4Pbo$3M#-?UeoRQGjDQ].YG
%q&kFmRFYLN5eiKWi!.9RatU*lJ4BHe+:<=:*+4VIDV9_slPj*Hr/k8U+\=L&?L;epaejXhpg'R)3DQE`8V7J_Qds%t/c`G('D8,D
%+d1oO^-I[UTb=8Y4'LFO2Vs&aOZhEuN$Db_-ln""hq[b>._uA)-Bsb_Hp;Fm?g;%7gR@[[3mO'DnMuE!#hceM_FpH4[ETp`gmdSP
%W:6K&Zr9K7+8)ZPH"AMp?jq'Xo#hjqn`:RC\5dQtr"^88),tlSN'IVn`(8BY'`$i\-o`BFX1'_j[Ng><ip1ea2+&AQlUI\F9X=/L
%]tPI8RcJisNGOO2@?d^q<BK)5>3':ZR#GdA)USH9lAZ[e[<!+nE)@XdIqO2>QNt4;cL*?OLRVU53nQSU5!AT#p#1@2[dk[,)alU!
%<$Ug4!S"kJfDf2,m_?#)SED.rA0kQ]>T@)SiYg$AC;q\brC(tcn#762K*p>n^UnSml%f#'fFb;BZnKRl#aKJOf^]bFi%tN2kmLht
%>BrjCF3'U93h0^,kOr"s(^0C]]2\JuE_2)]=n9E509K6PcA[N$@S`ZQZL,h,q/'!S<bRac_Bl6D^I0fVe/o>jk*\7$b8&?!W$),R
%/t]6g2)?.26#,(OKm_Rr(9OAS5pGnGec<&rV/g)(</nt:*g@p>5lMEbe!5ZNOf.E5@(5(>!ARPb>G8t:`31&<W$gNp!33,YLQJ1I
%3Fn3[PnZ!qeA@%q3A!<8OJaIFCnr%Hle-u.jfL)@</t-KP#r3?$;fkEfF60fr5_e3KOi'tZ5CLU+O>%hSk28`>[*ecEADQte/[fg
%q.e+\>R2jHaL8GInKI4&^\$ZCb:IV@2gufJ`8LL6#fTV+N1e:<X;gnUiW&L4S^$">X+]JP+H5A3D-ULukaJan.kKE(5@m<Ip;e[=
%q39!TW#RVJ5A'"s,$N(V*q0\8Geok]$P!t]@ZV-\-3f'4V4n1W.r(.n"to)E&8E=+lr/O[I;2;?NU-@YOn4A#^Ar*LRpFQB+\`TX
%3$_/<lD3F?2gMEY"LoG@#Q9_tQclERKX!fL#,\a@H9jD]QqKtOO67$7+5jrd++->=4:;9YMX1o4`8U9o"EB.8at'YD0.\IGP#gVk
%O%-nc()?o1_.MEFmC(lsJ_5[0,GQud<8*tW3jPTp'9YU%F`oXX#]QJb)lVgERe(6?SH0,>j!9(m-2B-'a`O+7-5I(-%Nu!JS<bSD
%ZP^F''96gL`2nFH"lI';]T?U[M-14b>q3$mE"XHL(`:`]ha2n"BZ`f66>j/-W#Ud^kA9;8/i+g7,Rc]efZIDp(p$SDg-A"F;)l\[
%L_H*g?AhAXC#B]Y-GKXN2D,<^`S7SJ]l\MZl+!AhhXD`JMO/.;f#`7rLSkoACfs(/E$N[e$SK]BY"#?AU#_KTY^,,VSBGB]$F0em
%X*\T29`k7ElrJSAMSaq,4gba2-'&t%>S0](^4_NJXYd+gjgUtL-W@l%OH(8rA1r#7AD+p@,Ybb<b?0S%5[:4N(Q<UP--*\ahOa:`
%(*@!DNR=oB6pTe=<$o4LifM'^8QZ??"V>Zh))<E[l=bB5/riQ+OH]\\I*576XlSp*UY&4sV=PX7rk,@H[r@">A&om6B7AQjr(TZ?
%E)Gg8n[mlg3JJ&Yj,<9`7;(0YctH$IXHP&![+SE)"USFrY!)u^0jY[22]'\?nHEF-q4ut5]lZk%%Rd8b2DEV@L[Mb-1WL"\cgKhI
%4S)o>JA:(&&33ASV*DhRi/QI6m8?'@h_$AB-.*kp3ho@H4d:psePp8?\e)%p'T\om1He5267A7hY:5WskS,kJAoDt@Om`sFaenRh
%He"Xq#CW`$$9p#(cl3'YR&U1E10bJ'Kjl+=A>o'aL0P>OTQg`=>_n[J"HtM)i*DQ"ZCZb>,rlZA-.f[Q1?nt2nc9E\R$P4Zcr0[]
%TM_9tUG3PDg#VdB/u,]$i-F7R.[2HMPP>si%Xh`+:@D_=c%$Llns0PGED"otghq/Z<8#QV;Su5K0mlIL`JU[3`:^\]-H(KPAW0g"
%EfGtq1ihu:2$]`Ya>LsT6,'E_ii<kiBNIG=?Nd8n4RWR4=+$JU&3Xq&?5R$T<4Jsl1_LZCQ2>l3mTZo9<J&g)iWP&,l-#FDJSuX1
%N(I8b$'"aGF$s>D,`nOM6_S>Gp$6<j6,55I.!Cn`:)GTqS(j`.Y8e6l.hlM/;,1-8]ARbKe\Kb+hT+;Van1b1I8f%+T'PL8UdXeO
%p^`P$^k3:4o@bD1(KsI5Ds2OmX0"ca>[6AZ.3&AJ2:`[C#X%iKQ>fS?eSdfH+I;q@W9.*f(0YI1<l;bViI:`>X/7ab?&'l.?*2YR
%1S`KhC=Dl\qZ-?1X4G\&hD0h.Y)\KT1B>4Fj82>HCXk;Hn=JIiH;bh'26[WuiTSqga5d$7VnpMM=HgU)NjdO(in<j,j$(sr9+_!\
%<=<MCnSFK(PGr:.08)2_;@/_jOiZ:_Q(rQ9&r[Wi;&\,<P([PE-A4isH()XF;Oe9GN/ZOi+Go]DX$VnXV)MbDg"_ik,+Ba9Le+E@
%\e$Ze6f0/4)fmGQ7JG.hE#r$\$Y;Ua7Y^5`oV"L]9L/l#YaiYJ/!T<T;ABl@YH7rUd(.'K!?.7G8[3A6-lE1)#LX7hYp,;\P5`Qp
%3\:E71gBcH6gNYS"0e`h/kPDkVRAbNZUIQ4AFC0%)@"OL,k+-"-BGAsPRMjR<,ldu\4^lAo.Nj3*_D#>Uu9F99Fd#fGa6A'\TpZ*
%]^,p+E['L&f0@JUgqsm?o7ob:p`BNk:K!]aQH]1e7eOiV-dB`SK,au@&M"[*MA+$5N-Z7?fa=Ofp1!\1n0Vk+T0aah,a%%Si!<+f
%4.N!s7D4qf[V0/H#P[9AWI_M[pSW]j;rk%'6'@[XISmY!,5">2&G'MF+H-LP0FV*e&&N@oi.Rk'/>iNs]Ftj&P&;/PkZf\A72M,N
%b1'7:Pa'$r<6F;?-KN*KQD;Epl89W:JhJ=CPa6,Q=9AQ@7RW8[k/Nq!$Y'CRrft3B#E'^1Mo"L0"Al%nm4>&Y+!Nr6j^0R:Q=+Ie
%4Qcm+c2q;d3f4,#dXh?SL#LXNZjh8_.?6'W)Gd>#R?j#dghI1_Z`0?JXI:r$6YcgF$V?(WE*O>r!,.:l>S_R6W28'G';0UiYZH^q
%.eq!&Hm"$)TK3t2_MQA_K8Pqf8.q#9[U_bLO9KljJOV#TU^BlH/C.Ks-A1t:1e'.K9Mpn(\?jJZiL3bEUkAX9^n="ceg<r2D1L=i
%7#&QcGjr?nc!#^n$FU?0&=TE]'1s5-Jk0%59#9Hi:n3u#UQmE-[>t]_BP>hWE2;F'B.7hiPA>f&?h]5d"_WB;[t(g.]DRRZ;E#BP
%))AA*I[\PdJ@&'sGj$pq<1cd%iG;"2P?Lm6%qk"aI]Lb.a&2$[Z;r#TYSB\o>c*aLMBtXkeWlWT<:VZ%_aBT)chYUk\Q=e)&Y\iC
%63+fQ[#,hsLpR0r_P,@\;N)joT(WOdP'fK6"MM4n1#ck7WJ_d.$TX*!^S[32A[`q!%]0NBjV35J!+J=*A2%DMGe]l[amoTA_hd$j
%BI[-^!6-E].&Ih:N4@gsNs!!Y'A!t`3Z=<JaMSsMY74HJ1i_':KZYrUd8j0C)1fcC"Ye[:iBehER"-Ls>cJ("c$W.K-ml[[OG'$V
%lbF:k(R6c^,EXdo@T\oK(lJq7h&[;:a;tY>Es0X2-2#m'PCd'e+W1jt3?\n@5)++s\<+l92:MW`CaCA9^[t1cUt5?TTFe)]THtT0
%EkE8L"su'\emhjuWVZZ)fLcn_"XcInb4/f@6b(EF@^tsL",]N8BU,C07i`ADM/:H.[c5HH90'Kd#kP<5QQ;D9:RmJBQkE#kGch/j
%3QTd;.'go]`AQ-Y?B%;j>B]s5,\`"Q$E<@e;&kq!2nm_5KIn@FH71'9-If=fWef]Zj4,F?B,$@6W(/3]_]*"-G\?l0q$1Q/S1nS6
%k<"=;`M7.:&/V7?r].nGmO)*U@Lg@KhK/@588nr3b.ubnX,mKEX*@$g('MNa-[C\"?AI_jQG<>u"=UTWM?,S"R.63<OW:c_9HaF.
%=S>-/1`Y"uo\2!0<K'kAF'3SmP`SdT3TE#1S4-[BC9p3OpRHIQRXARHG7Q\70F-`BWFj#)IM$TaDtZjILb5k=(AZ(/#t#.UB"U3Y
%+Yl5$TD9bt.6fYo14i!J,a<\qR:>s%57@dW6Kc/&a:E"GffqN4]H(VB8a@$D;1"j,\025V+JWTUb,uF/6$[eeVLf$;]ursq<ltb-
%^pl(+0#<2p&n,%L4$6_>Q!mOu/r0\lCo(!brIh4nOWFAN90r<-hkY#I=*+EG(M-b*6X<p/iT*;4UjnJ<"/QeIGpeKR3Fh?=9s^aj
%<u%6<f9FAd0s]2n$Rh_P%na?TWZ]K-`&J7VM'?O=Tfl4mkdN:3K#8>o<jk9E%p*<;D>RU!^b/h*822[L1")Qr*(%077@D2E)sZZG
%JQ`Cl=5L@U\5m7AS8t$+DJ$lA6k2'i7,[Ge"9_=pb(K,6nDppeLWW:]`m9S$3q0,5l;hrGU$rN'gG)XT=mJcp<ahf:>1j[D(jA]Y
%k,mRqGBqs%;Nk=3jJJ9tDZYYc_BDj@.,1h`!`7so,%FUE<fe):(!!NW7Ea9#]VEPO<)&=7oE8p420+8nFb/Y;]MeA^9JH\7b)^r:
%:_TpU0:X\6k':@E_m;ESArYRo#r+,Y745pq^^qA4e:pS`7VCct\NHnNf,K*M:iP,fWBb)U6^+$(S@SdQ+bK/=[_TUKHSJb\+D^Ci
%fdI#pRNPnW"U.cB4CjDKI)YLJ+@pu6FqHE_0\X<63Df+Y+uUKR0nYi(\/>B%6K0,:jtt2VXGdrujm]._agon]JJ&0@KqQE'j^_,4
%#W[<i?rUj(5YZ*G1N*>A!@k`1W<gQ;YFR4pbGGj`)^M,D"Mn?^/]'%epbJ=i_OG\i(MMG++?`T#`s<2A.BOj3>m1N`NLL"arph5S
%TMWL]#GZg&B'#$b;#33k+O,7`A;X4o,o<d\9LkV79&:3`$CqRA+mG2QHi&CnL!\n:-M<nb"'+e@@!$t;R%pV[2G!X=:/o-MfVCVN
%PCZ)T)G.2dg(c/(*C!iOP=JKNRc'E)d&="cBs]R16uc1:+cfn.Q!59Glh-@"Cp$&[6YumX=m)[)HAUXIm5JX5GVm;qIKEU_d32:9
%<K%!kXec4[RsLOH(_qWEA2AuR`t:fJ&Nl0Y3L\)^p_E=,;r($88uR$"A@Wqsit<0=V6d55ia#B4E::`#hLM#7do#oH`rT"OaRq\F
%o3k)8LR&*%Nr9`)0_*F%&*@t<>]VLe`MU:F`V+g6LjarS>YHaIe:nDAO,=srj<,7,Z%cTiDCCU#kIVU*><%fO49K%N;NM`c+$*k[
%[Vg'HE62BN[K1n,BZHfFI'&6O)=Wq/Y5JUq%a-Ka;%l]Zjp.0nEDh3K/fZI\"RPr0NJJk!<Q97r,JW8@ZAX='30?4]obda`:c\KM
%OWX'd=0f#\M.Nd#.,GXjA'@CG1ai(q&9]/jKbrLM2A\Ph#;F&JVoc1<QrDuj'SD'll5k<cH*;5VRIFkkmj0t5.WVQ\WXCCN9`p%d
%l)++@@K(d-.j1CHYiXP2SFc>i826@L+c9-EV]c@V'-<$`L`d?V">Je;'p5Xi$<4EDifFRY9LX]:S/MSH;&-<]pdm]6)t+Z8j9>lG
%f"i7"4Zs<jUd>i3ag1#$!$J0TF<S<5jnO#WN>]Lm@[H$60YOm>.Xa(_0Qod!8!7B$j_Ea>TY?,u/OIU<Srbon+,Crokp3dcihrAb
%KJDL-O4&o%qH$u7*#$S'!\?C1.>5\e$o0![$1Ane,3RahW0GH.P+`Y:_Zq)[#JJC)OtYJnVcFUGcRJkhi@.qn?LOBMZfNe%\g:u4
%/5:/h:,]hg'D4'VD)79DjoECI=%Fd0fZrY=K];JTW"gWp$F[?MAqjOC'Iuo2aB?@P,P'QEDjYBhBV('/^_eb;7%i,/W6&[;/8[a%
%=X6n5<FAT@j_,J`*\Q0?k'+NW.+[Ti6*OjjRiIn."m9>eS=)+Df[-YNI=h&t]$7$?D/Q1g2$\#28GG3g=kI=^=]M0,Qsk2Y[]8ua
%eqLq@<GN&1[.[#B)#U(@S?Q[q&64k=%c,oD)e!^&+uW.t[[rpA1eu]Y)UFo"2brQU-Zk>82n/YT-FAaGg;XFnj3Z&Qp:L\NM5Fr3
%R\Gp,c=oG&B\<3QV!)QAm':nEb/Eq7%uU`1[LN^#0P?9Rs1jk!lem_qEQ7.lg'E<EqSihij+ORTkiPoqhLr=W6JFJnBcO^peXe^n
%DOaN^:8f(dDJn"f9is5I=>W_h)sO-.[6DICKX$YQ@O':=7e/O:ofSt*NC4F!M'b-Da#U9b&P['eRb1.fZ&q/oBcSIf;GnYKXj?/W
%<=pLT+*jl/@Be;U>N9:sr=P\/qSihIj+ORTBRa1Ni.SOY6IRofBcPi5eiGdaDOaN\:8f(desEcS:09>I#d;e3me,/bd)BRu!u'BX
%U9T\G@iL9E2A/a%\9Yq\U9T\G@iL9E2A/a%\9Yq\U9T\G@iL9E2A/a%\9Yq\U9T\G@iL9E2A/a%\9Yq\U+qWq@iC3D2A/a%\ClaS
%,T>-&1o?CK9I%qAN1222,T>-&1o?CK9I%qAN1222,T>-&1o?CK9I%qAN1222,T>-&1o?CK9I%qAN4VosIEkTd)i7$C&rgTNRYGhZ
%@d8g_W:?nHVjp!/9$V1ramiW(!m&2paOQWV$bY^3Vjd-0UMuADgH/@ki!YA4g(C"?K3YN/O5"<HiA'!18adLd!YN<MLYF]'LVoPJ
%p71+=mFp.,WIo\,4'kUJZIDDIFqu^Q0JK^=iK@L)\DI@k$i/0jhNm[RhJ.L3:oae^n0SW*-$*2hWt;/P;8CQVSKqu#&.+,]-ecB>
%T<Zmd5dXjKcmcIuF$_UAA]1E04O6SlL#iB`d%99o@DNXUi>0])as6ceQ\57N\>kd,Sq>E*(&Zq9<<Ma(%#if.Rk1B]<JY$ii[_(/
%NNZ4SL'OlYSEbtPcLM=A^eG"'7OH/YFNUYb!d.A/<e''1/.O<Cl5.mPrf'5R\3SF@DgQ-J@nDhgkB?t)&,@s\+X!959DC8g,)[.'
%+JFKmkD:V['Sd,tG7-PA1&kSZ*A`cGHS_t=W]GnR%]c5%/`Xk1Mn,tQW4aD]CY1V6-2'*B!ZEKfbd>d3;Nd;HG+r27%S79`-^Doq
%`h`!dNcC_h4c2sMCtLHP@s.]u>cNMc!=p?.0QgVmG21s^0&a[nBsQu(8.%DA@@D@3pl-U\(]\c*:mf;HdlJ![F4[J>!_g%,8WY9]
%#h\Qd6NI3<TGhM77dUW5qE'[-Sf+P9[2fcZKD32'YYD7f3IZ?ccdk%tcpVhKkGG3D.Ht>o)n7nt83s@hE`]RPog'6L8AXWJC=LA6
%-ECc*.P,tS.Gi(;mpI[5;\k5","pU(Y`6q6CR8VH)+%D$'!5+br=lr"3"V>@P&8<Bd:PpUr#@Q4lpD(-=3?u<C4oHa<Z^_/-st.f
%mB6U>G?%l!.?9>kZH\<Cq))`d?$LrNS(30<s"u_oI1-I6Xd;:42>I'Q<u#1Gg-VMT/W"j$Ie$R_/PWK.L;C_2f0kn(<Be(>MJi;^
%+-)Yq3QOPs1@XY^m?f"]e?7s)K8jF&7oN/)h0dtrQF-*E>q-6Wf#5rcG9s+n:_e8RM!@W$\K2s`2XCUiRpucW>Slq5fUhJ@QCDDK
%=N]IQ1'>O@/r;u6>REAmATFt4!Q[l2O3K"F.Vig3m<56l7P(&NX`<Z=e"s^9i4n;O!N?qO0&k]5U:2au)8A#,Q5s,'G*Y4%CWI%I
%VO`V]na?"((tHuW.+t^:?A]usm]^f/j<*6Z0ao1J1cC=3(i[WtbsHU5s4PEiI`>]<8Pm,A:$XPhc&e)#%i*e/0hT%bGA<bU?"Y5i
%N5s7'CL9QdgaLkZh)_^7o>8(>BM0IPb%3^nPCZ>>g-`jD[JMNA1kg(2r0E7VpWR?2/B]/'Pc1q>H;%Z`M%\OUUB=YF^%kWkr>]$=
%9@W_L2mI5ga(cZ]8Fr#kNQKbgmGT`O127IpX_j\'Db!%gZc?jG.>B+EX/RruMju!/%LJG,a&o/$"qMGsANrXYV]q'tmG'\WAbU9>
%Wf,l76`aQ6k20KL,>TrKU?U8pQ[G&u(Wefu2\J`l',d+mFr2:BEmn*ua*Y9Y]T!'KK5MQCNuIB;!#L6!)nkZObFKuXh8lN?%c/Et
%DJID*AC8pM`I=/.b6Os*PHBMa!mB4E_7&4(67KE%iGUSLMT1akK1_OIX4SGb8\l.tj]eLoe2A\g9QN8YNO!I)];6CF$^H2Tr.t)G
%;3;G3FC@"@L`dHhk=+%e(N/oQ1>s8-kihNiR]_=9KFqVAmKS'=hM=`Fb@UocJ>eX_<+T.;Q?Cuk@8^R]4r]+r1!IhnY.=N&)!6o<
%)&Qobf\H&MG46>k=MRB;E=B]p"M')4/'<XDTWE2lm%R@<5!K\#;k>%pn-[Poqat#S:t]67:h[<UEdb0\D^I8`Y=0Pa2K6^05#Yf+
%X6f.l6B:a&D!&g>@6'D9_4?uRPqne[A*lNsVTHoK$&O:Y#;dJ_j"'Fa6ED)"XW=rl[WV]k;F\7IW_2WFd[^((E&EeC@\q-(gAH"q
%l!rfaf>SZ42+k^LPW(nub=+i@7G3ICgD'l]:9QO\id,NE'sA-SetHKhhi.G*_R,`1%OnpAWjtJQd^:b81@5S)Mc7"YKtjb,fA05<
%fRh(AU]O[\SlC^*r<CB4Ip@pCAdR&Bk"Rc8?:q_%/Q2tQf^C74NV7(bI%%RUBeiB5TQ6@VD`'B&'Lk@\hrkQrj\ILiAqfTg&ED"8
%&ajf`mj_c/bB!EY*eW)bi,jdSj&!Y&Ad?4P6>o0FU&WdB_r^OiaGHFd2ui(TGpp7=Us(qep!gF!R,6XHQ#6qTg(AKQ16YOFe/NNu
%buYX&Qd,7X<FB#je;0c4&2jVo5e%+F$"7_c:hY@)5(EG1T,XlDXP&CF=(=6pWNh,u1_p(=eX9?LP:N,jfYgg=T!EFH">Po.C9hSA
%0>d-g"W%8fi<=BshK74d*&L_(&UR!a>&Ei(US&-=^-OP96-7(][':GW5E2GDM'djQKih*PlbB?>X4a>.3;.p#+fIk'_Ato(X*K*S
%Ki.oK1<0NA#+EYP?!c>7PFi0T/&G?Yguc"W*L_EUs5jS-6c;]CQU_C9,TM!;N=TT0d=j$;_]mBHLJq8Ym(U_VmuB`d@-$C.g"e>t
%CtOCRN%DH;,q/XH!&Wc!?icgm'A!t-@<"l+X$r!2erK_=C0NL3/JB.eSq=Sr.YEBKDR<$oc8D=T]k]i=+;pRMXoFl@QoA7X?ao<W
%<*R'9QK,U&9gZ=;hr_ui,9tt4Dsh21-/gnrSA833,-M!>Ht<^[j5o\SIWD]<=Dan!$lHI,d<AJRMoh!TU:]d@d.(;T9DdiLZsPqK
%TZD.n;e7bN0'nq5fnm_RD[0s,`G=a`I>So\aJ"`=@62-+b+?<AkT@)$5Ln%M[:87Fm[qmOL;7fS`FQ6Q!YW!;?Zu,EPtOR;ZaqQY
%X_h:0@77ZR;5)8NpC)G`ADVtIG($hq;W-Ek^t@aY"nMJ2D&Dl[E@pBW<7GhU:h9lZRhp!D5[;Q6[]XB(J)Q!9n\t2:nShKGP$nsJ
%e#)!1V#J8f^F+L6XCe'Qklr7Caj3>-F/GtVXkHH`.3sus*f"cG;2k;]7]/O&g"=b&3(d.H#8+@rN=K]3hup%pjc+l3(]hmEUHQ87
%HJA5Hk$_05./ZF4';\s4F2_=1;!i<,e+$n)I`u$r1tnSlrHlro)+NmFSnur9'u[=pl>W!^;:s"DGHh!Jm8WB_.dis"G^n5h\\jW+
%R2;b2>D-`c^pII?%2^1>[/a)uD(V=0pI4,dA)eP*#_g-fW]Fu:`\*>7ih]t,W'5Wbl)iZgG1fiI.Su2PAs'oh5c,rmn9gD.6.(K2
%EXZ1J((ZJ5m*A$"hLf:k.rl?`a=>eQ$u4::L?>;C\3A:b>K"t.XGquT'JcK;V=!C]@_8]87'KJTW,^]kXU#sHNUe3.$ni;Qgdh&E
%0fa%?V2*:R#g'#7obt-ZG!VD5-l*n8&LV+*='Wm=qs8Q#OZe6<2YIt>!h>cGSrR/#gJsZd*fE:^47Dhh;WFj5:E$-e#SV+fR3Wfr
%/SUG&VW<eG:ZYu8`(01s0lVO+f&cl&5CMhhP:\BV"A7o\>@]_IAds0]1:/d:=t<<%jdFjEVE4&&iq5M!-\(ESr@sg2VjqXI3bTf*
%]A+RKKCB.r@5lKbR]"6?O+Z]V"($,#4ti!6eZ$`"!GS#()e2meTjEo??4%IS#j)cb=6@k)]M+o!m%V$2h^M0Tc'\s<#MITT3&DY[
%R-\LT.)[("-4c70+mWTqU-3%VDI]K]Tb'2X*GTL0do!Ic1k_.!bY@a6[C5*^(SVfbQVp;/$h;q[_%&)7_A""4,fEn-],0B(,PulO
%X$8e"#LP@[/-PNIfIY%;kToLGh+0/M[_&cjI/i*J%g.ot=Uj]I@6F"sfUG[g=.9V+eaq5hThC6Lm^eWF.ooIl3?f$H!pCf!Uh#t)
%QO6DEo5ogMPgJip@m*ItbE8Xc6\sj&NhP2fe1l.I65@V`)l\4U(Z!#(:A'N#5q<p1qmh;h'sS1#`/1`\2@XoR*G9-2E6!*e$j[>a
%Lkf)?'>+:7Pj):,A6dN*AXj(G1a%e+<2PV._ud4+p@0Euj<g1%#6L!bQYQPH*'3gEq)MX7+ut(IoWq\Q<1oRs03J't&>CSFM.`Ph
%k+06?:i).i+M:@?C_q6@Y$IDG@ej+=RiBZ)MeW4L6@MlRH2RF,'SG\-#<tL&b3$^'ae@Z5%"nr<CLoSDGqmQZ$.C>jJJrmj@ks_1
%Dg`T*e/6W6"47<(aZG3G`ji5sV&.c[P&8$3HZZ51`p?$rc9C*sL_b1jX`pB>p#]ru!!52/Tk=2tXt[:25mka]U"XK&45l%[QdSq)
%E:lde%c9p$rXZ'RK=0dFf`3;ANfC^=MM_+/Q\?Z=H.HmjO-l*"dPUMdqVG-6=G9)J)%Mp1io-$-?8P.hiJR8(Ag8jJ)Rjq3Uq_)j
%]^3"0n#H:]*3Pg[6lj:5JkB)3O,u,mg>Q"S=rg3+'XGrF#U*$-d\fWAnKpn4q*WnLMEg`C&\rSEbag<S(`_LHE[j0nYTM[\T/Mb6
%E!.R1.dB!JX<t,Y`+BBD,-@)V(.0NK_*F\sDMYR8+T#.?9d%$_^dgRoq$msq,3ClJhbLSLSE$L/gsUn;=tMY5?:gM.i$Pe`%8\0d
%+X!LRM&!j7;QR=E.&S;]o!p0OKq1bK1B!9e1u*+P;0Ja[H&#,mL-$P8^aadV:Pb't'L]/RT95#!9sU=WORc"/'5.O_AG+6qHa+(o
%4/+./?.>0t%`[ui`$D2G$hS=<6iTZP=RFl&r8JJ%c`nt0IIkDYJ3Aim)D-9<T'kH+HqQplJ]8YbQ?3n!13q&a&o4#$\/W,6bp"OD
%Ahba=X][4.B9DfMSAj!*)FZTZBiK#\:Le^\pnh-LOIrFQ=U,"eeiF)^,Dr+-/.a,UmS@7W+GNZ;W)0gt5e(iI$Hj6N+um2D+M=a=
%oUVd8.3\qY">)T4-:s"G)'"@[2/p`00<K\`)[7ni\1<h>k$MVVZ)uZC`@PAT(g4BQG5=&GCBm32)nSoI"kfEOTeNPW)<#eLGHX4/
%[8l9`AD1XCN%os9&5qZ"0&Dkg.B75.H6J^7Q&m;W+s>'-ZqoOM8Q@F?d;AHG)^#p8kB75j#!SZL2a06%E9@)2d75as,QIuj%q\R=
%25][o@/rr%s*:"H.E0^L>e6u(\bb(c`E7;OV9*9&d!GD,jW6.&Gg^J*&h&\k%;PS!NQC4td4."5hC\QLaW&iLla7=OO_es50u6F7
%q;lb$j'nIolM("rkAI"^Na8ASIB6tKe&R6<-&>0eU_\0#aHAufA4MT>jG$+ECsb/`"9UB`+Rr.,YC%u"KeB3p5&%'[iksRpr3*C5
%anDI4X9.eCrT>HVbfPNq8]h\OBTk<*M4r)PSPk%`;)`Nk+X.]\'1?)7QY4YSZq@&uclIpcg%CNMWB`@u.^V%5X`k@L0Kh!+/qR]@
%PeB7cm>DJjW-lV1%:_4E)ma/\AiGED>>qi*=0#H-'8nmZV\&?If]E@NU*l?;bt?s%H-,_/Sd>0a8'P39Sl3a[-hH2rBZ!ji9+)gj
%K+.>MqS)D_>b+7%GP_J`%"St\\s+gZF>G<[AJ1I^S^dt.CjTQ=D6g?s;,e4o9ZfL6Tj.8=Af68dO#W%m5mt48QI;tCXX:k?202t*
%;dg%OZ'LEg:6ENlc<71Q#cf@p\LI\'9bp]4`L>-/Zs'e^.pLsTc'E&&]"&[kEQs-uQ#6fnj@7t,C^^/Lf.;I,aKQd4OW<DQ&tUFD
%7j)V+;9)O[(DZrRANa3jq"ZUnnBCaYag]9UfS@r%8e7KZ53EcQ_`+Wh&%b#@K36q>X'g:)j9BY!s7L_553$".X33PJ!4BMW/RbFn
%n8RiE\TcR5%)#BZei/=UdY<_WJh]OE)450e7YR;`Y'':4@DDgroKV\HE@f4mDC@MkYC?3>074^g\GSDdiFBVu\,Y)6r7TtWpM(ce
%*rc'j^\e#BLR`rTR5o?J:ZbNZQ*D>[K5.#QDRG",Q^&^dE:&7J@mmW]r9@0?K0&`t1uJZabI\Rt"=ie=f!('Z>S\fSak]:q!pt,u
%*DpA-MNdcWXhhFgU#-^Sb+R0#!lI%@Et[;Q2GqRP10`8^eP4hB1IA[hb?J'dTZjGis7"DN8UQKkpuja!J5O,i<!9n"EZ@07;6hC#
%Jk^e^b.#<.%EM`6gU6O.S4]J=]?-ug[(K<+IV!k)/&tMi$PSM=P3l_Sjr'n&Z!XQ!5_CJ5hsJjjL(RrG;<B%$frp5gqQ)sO-oMs=
%GuM@#b=_-pj/+[+Z]BRk;)J\XD8EI>@!:L2gslXr>/6;+h!L*JeBuO`U^@K?4,hd7>rANaCM-SJ]5/h`$D.f\Z0j6aPI?b6JmZ)$
%>Ht$V[2Z2KX"GpNIbq0mbaqcKp):6`'r0ItX`V03[V=pr:#Rd8*BIKW8!DK$BJ;/babj[?=Z-AP^87Q;$d#j8eNitVaF+uX(AoAg
%=^2`2I'_u<rMo%N.G2)>4%c-b\%^3V&'7Q'X>-JLZqLj5hn/35geAQt[D`N?iY3p6UFOXClmY)dcV,0K;%/iZI'%^3W&>koM_[nJ
%Q,:&U/sn?+9dd9IbJnDED,OBGK32tJMBE,R^@!";=69bLJX4jOe;S!h344K8)n\]<Oa_3?DS%&LHVDk0T<cYhGQF%G1Rk!LJC)Q^
%gXB-LD;3k)Xqh.YPV[P!TR=>Zqk\:NeLk^En95GsCS&#bdK`CL9a*h>W_+WMB2Y0Z<gs)hOUWDFRB5bD$Jhu4@3=L5]=95XER;a#
%'6PPld\lPC=Pt._pc[2LagRn!m%s.)+dlh.D>6#u6^Y0SVI)t\RM^NRV\>?QCB)g`mL#OJ>HP*?)h*++JcW>l7DW<77V4_q/X]F+
%i$Z"6;j&M"ZP8,\A%b`]C0=E]J>=D"U`t0/b%acT:9!k9qQCP8;3mi";OG2F!D$AC\<K[U1f\4"SGOCdUVL2RdiDKJ5OZ/k&WTi;
%=G6A+C.qu[dU0i2"kd/*A0=>/\VASM=6T]mP?k!.6.rE>N(\AuO$X<sH^lsHT.G@;>X68Ld@&/LMNjE!F$+"'!J&\`:rMC\o[S9a
%9SB1i33_mQ"G]/j27#;\X5YB)b$%W6<d&jn9flJM*kau!_#fQGf@4<MWYMmnmN?Mm;d=q3JYQ[unJ8P)i5u^=nm4J`AjO%g,VIAM
%LgE!`E\-LK#<Gpt?h0;2)6J#(FfcRIk%XnhfBG/&$`WTY#_T(9bSj?Z&u"d@2#PZImml)Z54ORhkMc#i2n"!Z&E+Kr[MNk<QW)kX
%J;$eTFl9J=kT^MoL!t:fYSG?'P@L28jn@5r9M'>[[A\M\W%odT*qrXfe1I1O%2TMeC'SCj_Q<Il]$Eq'c?kO0Uq"O5<9ddX`WFpS
%439d.Ak(f-9s3Zp=T*43d6ADtb/5D5p!^"pf:^(kFHbja<s9)NrAP9R7Ep?>2(;4<"1I"fJrKnbD;B%*&b[L9j-82*oU(S0N$@O5
%\8=2PpQ-hp`NVBpeJ-Ua-CaD.0P,(3qk'4Zr4LA?+C8b;olEYNX3+tlIpU;>O*C'C>QD^=c:dI;iEl=kA]gMNeAZ]jH^pGjm?$]G
%c^nV-&1.n\:;os`a[.r`]bs/Ek+\huS4Iq]b'kU0ape:D@cqQODQONS-/VFo0Wm%'aE7E+PHAE2<_+7aQA`ql*QODCcX01\JjNZ+
%][@Y*OmU]j%S9\XISHCuhFJ+%7lNGjHt"KRoRV41ZePhOb9?YPX;9'9`7tI[@tSZEX!ZYG7ENBe=4J:7'W7,9P,aJ&<N#+N*:08Y
%*@NIu%;/O3A5.rj6diQVXS1;-6dD\g,d%I`+B,\OA6CNBQFe^b9Se!9OT>q1HR6i=+A;;lKMEWe-qtahC,F\jT4b@kTde0MB\nn"
%4K=XE%9mla<\=*TfMEBr]4N$D53SoRQ:rQQ#ki:oG2Q'=WBPsrC$mKD6e+c(WQbF0*jPSc3tcni)nJj&UeF*V?Xj[$EH@6Q32Kf\
%*RiQ'Ce$?_FXdQ;[G.!K7Pd/3.(32?'6,!"jGb.1Tm!(]F;iU"=s&tc+5bQ$9E8,:O]eP7H=a2?<AbmK)W'7el/H=ES6'RuR5EH`
%QNQT"o/3pW>L9u>4O+Or]BMa]!u;i8T!HPXS'JH6Tt=L^]S57OW%*n*R=ZVoS98tgBBjb[mVWBF=sEZUhi'^u!_+93)R]!MDhs:)
%H'mBM?+*Vkqo6n\TL'u#p>E"`3psZsJp)sK(";XUP^G`^c2F;0hUIJ3:2VV53%s$:RjNh=!8&!H@8Yj*%jn@>;ZuRrVI"*(L2su+
%"t;sZ<$_iRWuHOP_lmn<s7A&e28<'"p"4j@[V-C&Dfl^::fV4WN692ga8gQ85rr#77=g@iX;VP_<$@$_+I+`>Th%8Va@obKd5VBi
%\C8GF4BC/odk%*?JY;#E&H*SB:i0]S'`cm<$71E&Wd0-RAunWg-Ys:85B\:<K^$<g,#q>;N.,ao!?Of)1_g2`jdD7+;Ul?63`ZGO
%clagJ!HQo&(GE(Nl9D2$/#s]5$?($*A1R]-$6C6tfVJ`XGU?_,_*FfB833i8<BEWh5?&Xl^2pct=o5.46)4/1#/Wp_V8Mi'_t^SG
%W'l'VA!:Xl?id3AU!5j#Ja-n;AlQ^u^me0siF3P7Eppe>DAQ@k9;bGFKICo4@OCU("d\ReeTK4f8G-3KQfXLJ[^3!#8cX5(k+ml:
%V.:J^`_65IAu\jgK\5:;>!DI-WO3*A=U,*m$aHt]4aZjD;N%j.rqJR9U(r6SYgD+$-p*>U?$<qar94?_m!RmYQm<L*rk$cWM>q\$
%J\G:1LL`.N*^,;UA!_,iKZgQPE$LD2Bq&D8nAp3)U>ghPc--Q3nFDO=nh%K8BQc,bPH[lWVodH>0%oB8FGPPqA0=`cQJqqjBpT8)
%Ql11YW/[';T.-[47gFu#/R"6AV)Zk5et%`#B13o9\EWh53K7mjS%.m4c0CN8]MDAmHmj&M..eBie<X"0(48BUT\P>Ubq@16k8OQj
%3m!UQgS[]fl>+AX299!S=^H2WP*n3$Ct;q%9M,INXXR0lZMI_d,bd>h)2NYljIoo/@'Wbn0@8_62nr,0^)>V[dh/mb)G'Rh822RR
%m%mCDpm`U>4D.JP<dQkQ/BtSW,*nC/=j%./9!ra1o5_3t.@[1/2[,u$_obA64S#JUOs8/?[tBo^$)hcW5u<oh/.qFAFX=ntN7gs^
%_;:^XTB1-@23\B'A!&@>P>h-4,':.q<W^r<DIC=$5L0E-d1E5857\N/@k'%?q/"JcH!1'0!n*"X&8Noo(Yp"H8[K<tdgdkp'`C?7
%Eoobi5@`c:7[F9ZAYi:i!dK86CWXdHe6MMLl8V@U/@%$5(Jt9$$:nbY1!;2YqY:uCEXB!1bXH?lFERGRXBhE>[&Wo4kgK3>)T?D.
%q3`_f1@7EH/JQ61$7af-A:,U1F]Co6''mjr,I_$<Z'5Vn)c?^_5NkVL.m@[g!5ngcn4G:4>agW^((n,QW]6/7IWu9qI5L"jGaU.*
%"9/'2N*Gc1"s8HQ,niLd:l4;oe\Y\nR?a7Q!Hgk?a*Q`r:AQ@l?PKFQcm\"].ippnYS.=5pZ_N$YPYL&p>t#':VPH#GJ=1`"`-J1
%Vbi\Y@!-d`mM:2#%!GG9:0VrZZALd&F=kb7G_j!'VfRb]nET9/c8M-/%02iMUK$<dZe>X6>bb7#HTidkq7'N=^.7$OD"SF!71Fm2
%Hc.M-=5Vif+.=kfpSP^l`k;&J`5#66]?g+]'1$m6X,Tb&WtN`O0T79)O*6`Ngs&ppp8:A0MNm4RC:hkg?l`[t3:"T2,\&UY\qJdB
%LH5j`@\>Su2_n[p,]=aL\@D9\C+3o7HXoo16IL0."\j##@.VX^pMEk52R]k]Id&Ak#"q^kD7?!F%`tWl>L2iYSP_6_9]P]?1qr&6
%W$HhFqc/Tm)DT'q'&1V3=7[F<#e^;1\k-^-VL*ISq:%Oek7Gg<W^$1+0kif(6<4$7^.DDl9D&etV%#,moj(1AdNoNt:Y3(I_b7a3
%ef])-6l/Wg%Aa(nS(=1`_)5[Es6@fo]VXH)2i-MAm]ejghUSb,Td6.ID>D@mB'HcGPo:DDpJKcC&c2sUfI_+$G>C^qVImH^:.k6E
%qVM3Nck;"=r<P,pi2>K/3NB[O7juJJqDJ@he70u5Db5'j.1/i5Z`)`PY4"KF$':_N;%^@q90FC6)oq7]7iY1^O4Dbb%#R%'NYj00
%F:pd)nnP8b\GGXMp=-7BGa47RB=^Ne?C/4i"!^"J-Nh9C"lk8X(lce938rFf=b2ql-@L&EIiu+`7>4.Vi?mU,'FZ[=#OLn",_IJV
%<5d4JlH)hVmi!aZbLs>WUg;c!/t`>&^0EZ5E-8A*L?K4R:!6dV`m-p+f2><_G2Kc`)'sLT,4WD&T&4lY<U@9eYQtb`Dqta-[]2cf
%=;L5\BjM7CNPpFtH^a)OFW6G8/$9[AmQHn5`7N2h$QBW/<4+ONRQ-E#S23G.]IfRO'^R.M>X@eG381^JQT`+VHmkDGS@kn'9WcO;
%nsqOo=K-FoC+XJl&SKfD9^MDuiuVU-q,)HXCL9MFfo]>Sl2<:u]2%n#<G`A[:PRo]i=8W57oAbnOsXhgV"7T'.SlE*[0O-8E^Fo?
%i0H?[Jr$:]%H*P3Zr0u*<?#J%&kiNhAS>&f"?CR;jgb$XY5Wj$Od"s$+\].>];oZu8r`LbX3#Y<;:C4SA/iCYfbmZ>M3At5(\dS-
%7VP`u+lfh#[s+:!Z;(nD'Na_EY736]KSj<tdM6k)D2M_)N[o&:3Y*pK['LW$/8[%&9I^R;7c)$s;Pc"1%R7#7MK$1d<hj?J:g+@^
%kP(QDN?eoi2\a51#>Ip4p2X_`)Js[D=n(+*P3,+h_uaT[G)O7k\[_6Y-H#miRu`05bmTYJ0Mb*WAQ*3XE)6(?l6\9aF7hj<-ukFh
%K")&NX\[PmSgQDJ]UZ+a08uFqj&<RfL26QH:O@t>AHc.45!&Pb=TH'/(*Z>'_hWJ[lhSc`7E8qs'1.^iH<-[J[-#KiR3sX(#F0BT
%h'ULtpsE/$q`S%1g!fVbVj8WZUdR_mF$XS5bLXoo#2#c-O[2--2MG4H0(HnL.9fH6$$s1CPMl8Mk>QY;TbTpklNXbS@F\>8%4g/\
%Vg0j"@M6^qO+=*qGMf\PptC%;j/HIF=O!Z_!K6]j'2XH6oZ3?.Es&0;".kC,7:g=F+6RY4^755MD`o0Lc5E=HnX!p*jlT`UTZTX;
%0F>)_(cG\$>Da8@Q4ALPAF9-\n^chli5NB8bmK0.=i"@Gk0>lmWckjcVQ+O!"ML3[!9]hhJIjL@l('nPg!$M[\$a8)Al0=dNj;ZM
%>]RIm$LZG\-tuT[$P4K9j#Bk(BG]1oPCA_dN6--Bm-psTRs$cZVY:^e[?G1TnR$j'*92m4=)=/ONN>VQa!"JB2TJ^o#>.dXWMD@j
%<LAgkGbkNK"iUdXEXC0XW<Z#'0rjf59Q"g?d!Kq5'bF8\W^#;;a5fSKF\tsTZ_0@tk&G3&`<bo;o7O;(9X8(2I!k-OL4rBJZ$D"E
%i5et-T7aC6NUr6S$Y@KaWDmV"5=6u$\DZ#E4#ZANZ[(*a!4#1-5bO)I[\=E=Nnq>9MoDMA/@6ZIPrJCNnl+&F#_T3^Osd<Y<&,*-
%$</Ca;mljm5u@ZbjIgsL=?]_@^ak-dE)fGSX<`sYZ%D?*i$$3(#`o&Mf4l>Zh6IbFcLX@!E;^ejh.;s.+$1tpaT5F+Q36K_(@V\I
%)VQ'*"i?%I:j0lcgI4)uA6m5D,dUK!:Ld%!kXq([*2cd>'n*0HC8DYjOZomFB\@/XNODF_>Z`$s=t*@_RNO9H6K6(u?fe#eg'`ZW
%;5?SSKTQ084G#r#5#5>>Lao#$5YtA@991BeqSn>qLPHWsWP:G.R-:fW%$+@P0js!8Xf2piihVQ`XWiq64kh!T[*%Mbs(mr5=<,@t
%#$$)\OS`u$\WHSanuH$68$h>H`-"VCDPTX@eRh:u.NNj:37!2?7nR<J#[`Q!6+Vo%Q&FKQ0ltDHWMXIVboo5_n9E#(o!`nN:A+JG
%`sTBmdKP>n3Mb[t_5^UlCm"M>nrP<-P'LD\Vm'"/'ctX**)#r";L[Xrh-WN19(>j)[gW-S?]LpK!W('>YKQt*%Sm>=h`+;oF3b=f
%fX`)`P[[JJDtFG`VoN3dPr"F)J4Xas3.?WZ&5Xs^_QUKPIUb>3b2Zt1V)BiW<"4iS%#-E<"s`Kno[JC\JGou<acLbR)*jk+"/6d,
%ah]kI:<+e*_T2bTMker$mUTjCG@^aj3=O6MGkZ*Oi0m*j@6P$m..ZcK>>:6o!Dg.FGYBQqjP[&sk3!]7"P=NbZlbcu_8:Ai]k,9.
%"!SjL,Jop\=N(ULDJ$F&0=u4Kd=23q[pA>U8=qSL`1s*)!XX5Jj=PE&W&tF!TTVc4++MfLX1p)(S<:(F%J?.?,tGJ),VcC\eOoLt
%7D9r]B^H#Nh)T8+EtQ7Rmj1`&1=d%^WbQW1.YR7OK.2'_F(">;6nEUk']<IU'R7KtD&=h4l5Xhn$FLcYL)BFTH*%FeN1WEZhIGM5
%A^?hXA2I7d[bhm@'`#p!.X!'0)dPn4__;tGYkN5ib\BOaIY1R*'M#,5G1S,`JgfMm-nN'JVH6J/4Y?LH@)a-bHP/D8k7_fD"i)8L
%GPHQ:0dtW"[0SXI>lf]7Mhs4o)mC$f+m;GC0\^2@DHNNRc3)iC_N^)s'cl`cp'LoYO2NfQOc1F_#D9^N/@Wk0G+sN]NDk?U5LI%J
%S:>391k:'n'%6cLRL9eRF^"aDR:(^[pD66"(-d?H`Z9n`SFe@S=Ci4OQEUt=OY@''::]?BO'"D:=-K5iRJa:.1F6"-hkNm(W4GQR
%WS+A0jN9q>FN(YA[gFa#(;()5=Oj@BP,e*lj%IY#U=*QI_,m"OL+&qjl(gVcL6At_JbFi2ab43lOl.j$r&B@5-,@P<0u7n8b0>W%
%9*2&i%37oNR$(c!WJ`+HLPS>1EY9#n=GIh,g<]t#2&>i+j[,?).RJ>=jf7;\jtA3j;/BuX'"Cg!ad8pOf8#t'>$P`5o7fkD:m_\u
%VH%5cd/P7RY>P:pDD]4.20kaY5aGA5G_ht;VO8?dj:DPrX,2UdKPM5nl70^8Z>/r/RK^`Xd(l74k-uStK8<R-6#(\C6cNC^d<'XL
%LR>\SJUo7:ahD4!<o^$>Y<ppdGYp`hG/J5t8#`&tTiec7('"Q<\9Y$Bn3VM;b.:![_t5'j$<^3?7P$N+`)R9UZ=G:Y,d4HJc^QE<
%OgXJ6U-*+jVJHg:M+VpU34<4[,6I"'-EFu06X?SJaPD'd+h$>Pq:&I8OAWrZgO'Qm2_n"Rm?P7=92nG5O#P;`UIgdBk4#-GC^lQ(
%dX=BXU-NNP154d%:"Ma%*%n6n'"8MKqcX+fmtTG5[Jf@.400[2M0an(!L'7<R@R)_)A^?O6ZJe4(r3+=G6e5@D\bXXV8[5HLj=op
%F0q@2j4FZk[!#5qK<B+,#.DY%C0>fL%h`GHc=XmEf6^XGQhA@JD;r)<T'iCqbOG;c!JPZ3?#7eF+3$=OFY<DaE%ZhK;bJ.n!fEdi
%%"PmR_aT>t"SGZcD5$#Y+X8fL^$fGX2K_ZV`QMj'Es+?NGF[Zj>;:-jB!JB[hLX7:*tWcsl07o(08Prbre!5V_!AjIErVTp7b(8k
%^?-lYH(X+<f@&Eo`aL?9jFk-Xd[/<\<.=G_7=91No-Q,Hn"*-^\6;,qbu7%N($b`r:[rc.jX)X:n"33X7lI`3or4YC@CQ-3T&Q6o
%T/V$]HoJ>1>t/!TYa=)lj#A?'cWm'SLtB&@dCYZD=Se2*H(j>^08M7si,Z#aX\ei]4fA)C4irjDMgV]eGsT*uj<&:>66'o&<jhVo
%;ge==g/dEM\@_\IioMMr:X,Unh"0?#&+T$c$'9$ABt(R$8\Ej>m]"4TFoP:)hE;MobWGOM>J)(Bmr9tqj,_[jeGFN^d_!O4`89h9
%_KeF^*ROPUrhB14hD=8;r8^h+l2FG9G^5eM(72o"#,gamlFc58ViJB7iZ_]IIbs*gHM>W^3Sckt)G[\T2pXV*bMAM3>YFOX.Fk5/
%\sm=RqX+!EVg,oPH&lb*m5$=$Fe!U?RQJj=Fj7&:FdeAdpa,GklK@cAV&*q84H<Kk\")]`^0AOV@U!a@K(r*u/Upprh/`Bmh_!hf
%Yq7n[6%#U!Q@W02h(nQ%^0AOV@U!a@K(r*u/Uppqh/`6Yh_!8VYq<G062XF6rV+9Me3o51?Ee5)LGNK0BZ)EeO<dS/'biC$93h9R
%Wfot$`LoV\qC7YI&<UD/>H^e<#HRS1P:,fTBB71c8/4uXHOV\$>]a$an+V[t9IThu<T!T!!E>%E(6dk)h/kX?W^3W?$lTK30!`Tg
%ZC#t_&>XP%A=]G'V@n3bp;s%UWWoDNaCa@)UoB:8K9b@%8WcY41XU6Sd5]&ZBN"bd!SgTCOQ!N)SZ7JgMombSf0^"Gjrpe\6^;13
%i%sIB%(0o.^do8<'L8e+[\V#F+WJs,PhO?M!^Wtl+@Hn0Xt3-pX,Q>t;RhZ@3@,4f@(-rU`X.OK>eK<k#/WC:b`_U`'/N*m]8D/L
%OW/*D\:NA9@MDGE]&&bBYLT*jM4S?^4MZJ[RiL@AjE:[i0a9tR#mcS/)PMZ2ncX5jbY5kpXNkS.8Kb^WI+((bKOMPPb,[nsjAV[o
%[$$-FGR,?ITV<UQE4_3K<[OMshZuB,k^J?[;?sdhLW<$XgN">I?kFV7U(2O9,_/7)<)>pp)jt$LO'-%he1Is0YMReV,4rSeF$+Bq
%kqF;4e4E+8k`3-SKZX?A5tSI;Q*Nlj=aLlt\@2jQaZ./@CQ_REo]CC8%Z0>JLcaK*#nmM@c,JshMdnQ!`hDV/-EQ()JIk%qdA\*g
%(.%W51q?Re97gUbD$8t<2/i#h.P+dn`ijPSlS`>I\2Q,U3^ZsdXAQgop^oJ(2bI?QF=X5aMGhMD^)h,?("%XnG4i"Z*f.Z_A5=M#
%M,%g?WOg^V,f,*_`R$'P5UQ83\sF5dI''UNf2G@LU,B\b;>_ELOomQI=V*PSp%u9[mW5:r+fZHt3".AuLc>]UJib4Yp2iY%ZNgg3
%D&'1VF@bBSTE,s&=.`5ggeQ%eG1XF-kk@u4X$Kq5:_>VqZR+Q`cUC*.&q-=hb-&AnWC[F)*g8L\XT/]:ag_lc:6,$*`8(Y@dG_Y3
%#n%^jJYE8S*YHGk6?&JSM6JU'J=:tk:nsVJ./o_%2gt6C5h1k`&QA"=6u**B]<QR*hq`@"K[sFeo?*R!KtEd]'jFR4J(M+Tl:+=,
%HMu^5Of::KG92s*GE4lo6O@h'BUfd0&pNOr#EKZ,L+m]AY&C1@ge;QJVHjIG;_8WAAEo<r(Pq_l.SFRo`;dkfd!l%\$iW8.l@sQq
%#o&UmOqM#,`O.2,!9/'*?"@H,K[T4c6?'-*&Tr&OB.(%/hd!q\oIg6%b,RiX<7G$X=JsKDn(h^o<$lK3955_P)j.)6d@mDj0(qIT
%Q4;oE#Sg(!WKkCZfWlT&h5d7_l1'1V"ZZ2ip).HErM7j/g58q;P(@./T"XBY"sWNHpsV"nqrT,#8tt:<^n#J(!#BI;b]ABNFBh07
%ORnTe5CjO`U7JLh/p+,B*_F-R1.9SV-]u2hW:A:KNR[u"P<>!Y.D%,gNW[h/-8l+!fPdqMF\W(An3Yso#NIJRli^!K.V'XC_9$07
%QiY/5f&7k(U`7ig&PCTR]I?:L`47*]Kou/->/X&![P:?#=\P<G."0)GFu@;EHPY^d&__<ZPT$('.9ZHD:$53s3s%ZuhC@uLfh>Ci
%h/+PB]pUQBOX4U.Jd0K7`]5<Y.3J,cGhjno9-I+@lJdI_@)2lTLtM*N'4&;6#/r'U1FcR>2KNmArhrh6G["8<HK,N`9JAMW682Rc
%(#g@\_anX]0*srfh_oeZ2F4M6.U&>j-KQe$&r_XH!*F'7/u(2eLmUTaC$BXO40)9Z%mgt-HB:%81.aXnmoOo?fl/'V`7h)OM6T;=
%fi]h[;l+f24-3&Tjn")651TUq`:akKc5bZ-$H(]kL(cnA'W^N@6Uk>empWj?s,X^&XoD4$"C8B5$gV&sr=GuBh5Id$oiPlf&AL=Y
%V$M`$@D=&DPOpr1<.kKU3tEn-C3gFWERTug64p,]GW8q`PW\sfotQ):m15qu/2"2bK!BCp0(emHc;RKAUbJu6^5egSY3)dZ?,I3K
%#Y#f^SQ$XiN0L@Ze:&(uQZD'9=63G4</2S@UCFN$5!<#B\CsRo'=kF<.!cuR@Q,*"WFfCT\6Z21dJOP5pZdn)QAO*[)4%Cir0=4J
%d!8ejTW'&Q(9^6Y/ik7N&A$4jL7IH!%?$mB$5V8Oq#=lPZkF=8P\":33n?`C^tE>4ZU,\p\-KXB!Gc)dO]'7DkoB`)iGL/bg]J,;
%L\i*%.HTO7@3+$YJfW+EOs"N%,UF5]E#m&4,6IHCJagNm9sL6?Y6mH[ZVA6H!+QP[3n^5ZP_R4%g8a"Z$MYo)jE8"fXe5hFLn4)9
%6@>,M6e$QPdt*L&iLaTeL&s80$sm`$0,%Jj/]&"MVH#+p:0H`A)FL%I2Yt.tBhP=NCd@oid!X_l.VlRlVng:l-Y?s@g4BA@2mK>]
%9#V;g6:[aas1rrCZ.TcR\6;%g9CVs\4ZJ3VT%s6Le*&u=26f;XED'.lC>6*#eO<l#:on1b,p<TX:)=Ln(`2/i1`23\Hl;rWacD_m
%6"QYh)dubU^rn87@kVIA!eC>XK:Qfd)i6aS68j@Z[dsZ4qbV&sZ]aS$jEa0XV"i^:O`[ZW"Pc8[P;S/AmWf.X*86_h3hL=>d4lP=
%'POJCSZFmp`b7Qi#MOOeH9<ef$B`lGcWMM[_$X7NQ)S<r;Ulg[9Omf+P(J4Rp>'AH4VO[hGJ#f8P\mR9Z:sk`(pr=s--T(DAg;#T
%QTZa?'*ulP0+SV$O^t#:+eU',L!44iNs*j$].m5NZ?oTfr0_!WYXaDBi-I1N+[4fQ?<fgB6IL_';r^Y3GeAk82T<Ak)p7>S:$@,"
%X$?QDi)"m_9fB$93McF.inh,4aY?uFFo*ik1j/]_LAgh<Hc%T\R;">";&uJ+11akiIkV/3Pi\B!7:l9*5MbJ(Ge,e[KOLuO^X<-T
%M(Fq.m-di"3t^0(9oL^Uenps-;8bk'm5pWP\4Y._?g]u@!b@4l%k.g.kY2DbFI3O[OV:^WAaR356[3;KA`4I#*^jqe_^a<%l/WZD
%<'='@;FL2NP02&,/8_\=0=;&h:>tuj]c,:=0S(oS['bklSA1SYBs+<l(9:i>2IG3)Rcu,8E#p/nJWQa,gqJ+D51U""RfACuYF22.
%1?tuXDonpD5(lC(6.8KX":7t&<\ok:]fW0IDPC?X3\:g;s%QDq8<-HAm`J"FC[<EPA$u8,YJc4!bhqs*?dmb&%-ip2Luof'kE.d^
%J9t3$n5fK1C5S/CfI!MjWP.*E]JH]"./</8@#&&-qco<SR:D/^D?g0,U)TWpp=^PcXW_1a&Xr1RPCLp^j&Yf3S<8Bt,j@uhO?Ub5
%*^><u#&Mph^#8!A"%neF0I6PSX[VXQToVKG2#YWri;^FIU"oUnD;6m5WC;;"[&P>5"`:O!VTc8h9B1P<CFTL0F%uA<GB<)C\M`28
%Q+!K_;#d`Y7k:/uo@VB&Z?]8T,cdgtC+?g$UQRRETr9g=R8sail!1!)CGu@URBCfu/)f?.Oi%cZQ_8TV!TH]u1aL=2Z&Nja&d-*1
%=S?[[kp44[^rX!F>T7.$99O6$VVeU"L)<g#jN_T>`P2bdnWR\sdjKin5,3UeHiStLO&FH7)",9j(!G!jJpJ4D.?("/Q_>[48l2eY
%piLgA`tn,5"HZ^<f@H9hXBPQ6O.5,N=pFp>irKsI>+AAlAB-ck].W+'"5_pkktUD]C0C4soq3/T:O"99&d@u()4D&j'd4Ke@KlgA
%)'O[*ic@qV#@3;QgrX*f2WfTsCT(^A6^8d=0mYPa0JTf<PMoB(lhM0g9u!5Pih<>TH1E]r08P[9g^b:\lW\dFEiOXYf--W>Rs.5s
%Q@\sMaM\4j^GKL#TSq-:KA$VJ5%A:c9"+pa6Uh9="]]RWYuGXe'os.WHtIBo;nO&ML14;lT4*uc[Hq;Qcc"?<FV1sW8:W6e&f3^D
%"NsFYZEJ11i=IfD6%/NF'mD2/eX2t)>%R<%A<>T'RnqQ`SmT)lkno\dEW,_9?+tgYXR5cL2a@?<hnAp`2fHJ.ebaP`lS%h,DgqHK
%^]*9Js826I5Q;74^\d-iG<c#G\)4o@XnV`os7,t.^4#nXmN0E^J,]$uhuE3%]-%%,n$uft]DVJ3rpO3Ds8KLB\UX8BZbQD:\)7.)
%r5!iLjps]<C%FibJ=p-G`S\@Uqu2:Vr8$+7Ie2<$0+[p/2iOC!YkU4c[=->]K)[5^r5IQBpR>f^rp=per8sKXn,LRLhu<2%\)7/H
%k#9\uIEHr<nF.6Dp&4V$=24e7li6QPhu*?,kDo$)\N^LpnMTnsJ.)lSH@KoqhgP6gG<c!Y^UiMDD2Wo-l<hc7TQghST'M=7k;U0R
%bs2'$gC)X2V<qSpK<7+L^_a0O&+@7.eN_?)rHHT]q1!kj_qT*ZrPG2!@q_cXn?prBZZQg9H7@:!DJi_oA7P<?&?iq[`RuSPJrX<T
%4N3fj7'VYdR7"XNDk\3\Y-Cu]!B]Y1]+a*6hjsi/_^d!Ll]V`500ZHj2.^.PI_lfjXukKO\IfL/k[H&IT!ZS)GJ+X(^D5(u?(WrD
%j_A&f"BbYTqc13.#V@-BLi5f]&23't>L9)B>\+bB]=$g-M/PnS)OCX_g\R_U):J9U;H%a#ieR;P`6UN8j)mP"OY-$J-,(Dij(m6o
%bu)"if4Q>B)o>Ud)t?:C45u$?))#_X4'3&pN#(6ofG^B?oA,4$g"Rnj>XobJ,b!oI&YHA@&YJ'p&O5]&Nn=*&75eN<G/TG;\/k,"
%CR6ChUN/5p?`]b6XW1LbTb%-8Z#W%i@=R?=cDQ'4+2=*4.:7-u3<K!A+)Bt;@^>@^O0N^4iM]g6EZbplrM@->Srp@X*eCi.H`L^M
%D\`,50%q.+a%lO).bhW,qGs6#38Eh@CApK*>#,WK#$]?Q5!NSeqYUo^lLXTWM`*bjFNTW1]%,ua-f""Yj(ju/bsAlWdkBGQ8$r(b
%/,^!Qbs1W)s!"iGa*l+F'Q*hh?h:h^S-!TD`rCO&oC<.<k29`k6TJ>@:bkSRa9$:M:hVVm&8oF_$SeX;\7LS7FmLa!mr-1o2-cb1
%?-)]8(+45&KZ+8"P^h5.,HcCj.MbBg3M*V!Q?U"T^V:N0Y?dbW8*+Jj9r0Lm=e3q$j&ROL)2H\s3lgQ.b8/drfNj;O8,R<8f-a9/
%Edaq+$!fc(EC-"33:CgHfD242[_1pkpiaT:Y?dbW8*+JjT8iX2KJ"@U3ha_VSF4rg?Dh#9a;-/q\N&K+pu*-o,<fDSFi5(DFT&_g
%$!kU1\AL=5kE?\7ie0K3mrp"*I-pL#@oTVNoo%Mo`<lM&KYFl.8gSu3+1=Q92>No'k#m)Y7<^@Jkb;W!GO&5JVcU=J(*E1Z38CS+
%ko$W/a7LM+1M6/C=3\;NTW=5=m]\,"j%6.bog,4.e"&Na^34eM*0c@9rM%NNpn1uAd+@tW5>@RGl+<T?$7@sn\Y()BohC,g2_HMD
%fkMR7S1SE=b.camAW(AIlRp-EDoIKA\3+IdOR#Ok0'N-<M[Kk^H40\k@;XB="r1/\:Kh>Q]3^?OhhpUKY"tL]E]("sd?hVL0'MkG
%2_O;S%]?XUNn<N[/[Ep/]+Ek[purVJ:RVdSqGN4Z\phNUJhH)&hVfHXj%6:fH.OS:m>)ik]09qhb14!c)tDG^>s@\r"[0obFLKKb
%3h<QF[^`!V`VFDi:WIDln``<A,JL[\lc1S0kW03o*R=19T!ZWU(\G7_^Dl_'CR6ChUN/5p?`]PH0'F)foX.t$Ql`]e?Mr?g3ZiH@
%4c9i^.*pEK4k8oXDOoMVoZ@s&ie'E2LO4GuG_XD`0g3VNOBHtX<HToXkc/3T4"T*15&$.]53R'-]$oi_f.KjfK5r]D?aTVF+7tI%
%qV"-s-Yi6;I4'+M_Kg#f]kOS`CO[4j:<bC3oL'VNdVNIc4rAFUKM7<EI3J&UP@)<-=Wsu[#.N>R?9%t2\1QcIAZJaS+b"nk52=<B
%8^mWC?YXRgf2#KgfIf5.gHsbn&`\,a.U1d&9)SZh4MQ&fdN"OQEIGN$V=WiM&%mkIl2r\,H$Xi#OIok<,$Y#g$h<V[SY#*:V!5^u
%0=CSjlR+5In1p6k*R5fmT!ZY+GJ+XH:>56Gl]^J0>`GdYg@CT\#@9T3omrHL35*"H]M>YLOY&cdF)eo5n^B:"7XTNdl\I2XnG7-_
%&%mq?EJJVJN[Ls7`<UiEhX<r3ptFh$a/E7&lPHVdM\#a)#C^e;)!HMBV&&iBn30juiWCjVF7Fet21)i[V`$`P_F:p.^sC!Y?Cr=2
%l#Lf<%sC*H(*@d$SVn#kC>%VWM`./&>%FZEr*5c[o_J$bbEM(]>`@n`D>qKZro+$p\e"^QgAFb(#Q@9DO8(0&*sRg7^b:)Q:r?KB
%&mmJL%1`ooHQ.8cT)T?O$k+G!QQE>L[h0DZ)$\+#/rCX8O+.p)hf1<36-Ddq#N8+N<f-MuK]-2ZA'M.ZR<&4/ZF1Wo#il5!f?\fK
%ZCqD]J6CDK<JP7r9.PfnGd0^d08NW4>9EM6*KX\C`o'*<Lheku9&P(+''/V!T0C=k%P)2Hp\;#[j?Fs/;'6rUJk'6'_j5s\9FH+#
%9:Fie3q!K:A+frk?lE`3@VFq0#]p5b^Ue.7q;se'B$:Fg8@l0Y^CD9d3e$q&0a#<R"[U!KG.:D53kob4C>T3X$3PPTKY%6G\YnA,
%Oe@1V6C:LE1$R?s]J%"kp#k:t8NS@\)igJTBE]0ufGP%dI_h?gO:N2q+RqCQ1^_EMkU`jUp6DKi+[AfWm`Q2W"M6=3mh"LDVR`(Q
%aUD2kGQ7S"Y<FL&FqgY.'g]0E%maLmXrWsn&q3qE+KrpE<"Z@!k'O?I_jB`p/TA*`"],J8E&8QpZ)g"EIt/#q@%.qCj!]:>0jJm-
%fHW*c,:DS^O].9!J:Em(545Ek+Dh75AU:laK%D*mce\*l%b2R^o1(O4MTB!(gu7d"8`SI8?dVdC+CU1N/t%ZMZTIM?ERmHee29K-
%"8DH)'467TNC=79^]lt>fN['U`bh]Yl$<*FZ./2A[eARFghKEogl67Gai/Te:C,un\QWlH0AQJj5PhFB2MFA"XjFb;%O*2,RKe\/
%2M5KAo$N^u0VgTUT,haDI[mRcPeS[?W@<U#2h1uBY52!H]_pb]4eG>pm-RSHl@<W7,#mG,J6m*Q:uSO&M_8e,>lTl.Q[S8k*,EOC
%<,A*AE4DgVLl/8N#.:ol:&PMi8'F.HYrVGE#K'CuGEp'\bGK`8=!93RKjK6'*LA*?6jM8O_l8;aY+f)2(3bPSJ?)!ojY'k6A)etH
%_C-'"H`YpUI\9m3`ViK;)j7X47Q*mYkdM:[6E;3J'$;=;R-_&;nlW<7ZV0'@q-,UJS?nG%n(Z'7%u%JcQG[,b(%M]MI-S;2%cbb,
%c$1$M2H"@N>rI+>'.n&%PD*h664L9DRXmTV)&s.YXmLnF);nX89/:,.^5+l7(ffMQIRd8FS#B(lPI=cq=OR/XEnCa>$t[W$D`I`!
%+,UUR[mLo>R'1Tt_<cpoi%di;HE-S&YQ\;aRLc#%&52])[uXn>BcB+#m@N\NfZ)UrWYY5/OmnSeb$h5%FQZoU>BXR020UTb+G:gF
%*3VZ0oji6gSuO6Y#iX57K.rVT;%itQ$00Rr&c/F1\B2f%9lXDE8ffcBXS_';X>&<D&bFN=CVN3Fp;SJ\g-Xtf2WGM!=tT8h-(%Lg
%VYX1+O(lf6M0V>F<k11\c*7$@E?u;O/BAn!f*TVDR$-`=NkS#;-2O=#hMa)j1#pH;#&o&JF+X?X2hBP%oUe)7f3Hb?=R@Dggma@#
%@\a<1\V8:>V&rX&F$I[DW(s.GVCC.UP;oH8WcZ``4C4_Ij&Pn&'@j.!Xp.C6e<H9ep)()UCk61NPJj-<Z(aY+D6FkuO02O:/+8#7
%Z,U.V5'bs`6Cc=g2CHd-H9!j/50j/]V-+]+iO/$-r"&-%K(2?,#iO9FP8+?6N_la1I0]kaG`B$.dJ38`CGJ5brhC8(MdM0=FEnW:
%KHO)K@^6/IqA3RBs(%>Y"6MI68-aAKkhn'd)B;2^1fLq>SrNb*c?,lt&LOl-qu:J=Iq/O.Hu&fI`V\Iuq".WTn<\X:s8Ci&pWKJD
%^OQ!qj5U^Klp&8`e[tkT_qT+d^\d!9rlqWqrUtI(*o;A?*O#J1s,K<,r9B&]^])LP5J2@<ofmp*:It9.nUmJ4lu2mP^]1WioD\fp)=r^~>
%AI9_PrivateDataEnd
